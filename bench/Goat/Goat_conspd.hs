module Goat_conspd where

import Stream
import Control.Monad
import Term

_________evalI x0 = Immature $ msum [do {(x1, x2) <- case x0 of
                                          {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                              _________eval1II x1 x2;
                              return ()}]
_________evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 
               gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 
               gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 
               gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 
               gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 
               gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 
               gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 
               gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 
               gen___stepEval110O_x150 = Immature $ msum [do {(x1,
x2) <- _________eval1OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x0 = Cons x1 x2};
return x0}]
_________eval1II x1 x2 = Immature $ msum [do {_________eval11I x2;
                                   guard (x1 == Goat);
                                   return ()},
                               do {let {x494 = Term.Empty};
                                   guard (x1 == Term.Empty);
                                   (x495, x33) <- case x2 of
                                                  {Cons y495 y33 -> return (y495, y33); _ -> mzero};
                                   guard (x495 == x494);
                                   _________evalI x33;
                                   return ()}]
_________eval1OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x1 = Goat};
x2 <- _________eval11O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
return (x1,
x2)},
do {let {x1 = Term.Empty};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           let {x494 = Term.Empty};
let {x495 = x494};
x33 <- _________evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x495 x33};
return (x1,
x2)}]
_________eval11I x2 = Immature $ msum [do {let {x413 = Term.Empty};
                                (x414, x3) <- case x2 of
                                              {Cons y414 y3 -> return (y414, y3); _ -> mzero};
                                guard (x414 == x413);
                                _________eval111I x3;
                                return ()},
                            do {let {x490 = Goat};
                                (x492, x493) <- case x2 of
                                                {Cons y492 y493 -> return (y492, y493); _ -> mzero};
                                guard (x492 == x490);
                                let {x491 = x493};
                                (x31, x32) <- case x491 of
                                              {Cons y31 y32 -> return (y31, y32); _ -> mzero};
                                _____stepEvalII x31 x32;
                                return ()}]
_________eval11O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x413 = Term.Empty};
let {x414 = x413};
x3 <- _________eval111O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x414 x3};
return x2},
do {let {x490 = Goat};
let {x492 = x490};
x493,
x491) <- do {x491 <- gen__________eval11O_x491;
return (x491,
x491)};
let {x2 = Cons x492 x493};
x31,
x32) <- case x491 of
{Cons y31
y32 -> return (y31,
y32);
mzero};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           _____stepEvalII x31 x32;
return x2}]
_________eval111I x3 = Immature $ msum [do {let {x415 = Cabbage};
                                 (x416, x4) <- case x3 of
                                               {Cons y416 y4 -> return (y416, y4); _ -> mzero};
                                 guard (x416 == x415);
                                 _________eval1111I x4;
                                 return ()},
                             do {let {x449 = Wolf};
                                 (x450, x4) <- case x3 of
                                               {Cons y450 y4 -> return (y450, y4); _ -> mzero};
                                 guard (x450 == x449);
                                 _________eval1112I x4;
                                 return ()},
                             do {let {x488 = Term.Empty};
                                 (x489, x4) <- case x3 of
                                               {Cons y489 y4 -> return (y489, y4); _ -> mzero};
                                 guard (x489 == x488);
                                 ________evalI x4;
                                 return ()}]
_________eval111O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x415 = Cabbage};
let {x416 = x415};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            x4 <- _________eval1111O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x3 = Cons x416 x4};
return x3},
do {let {x449 = Wolf};
let {x450 = x449};
x4 <- _________eval1112O gen__________eval11123333O_x467 gen__________eval11123O_x483 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
let {x3 = Cons x450 x4};
return x3},
do {let {x488 = Term.Empty};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            let {x489 = x488};
x4 <- ________evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x3 = Cons x489 x4};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            return x3}]
_________eval1111I x4 = Immature $ msum [do {let {x417 = Goat};
                                  (x418, x5) <- case x4 of
                                                {Cons y418 y5 -> return (y418, y5); _ -> mzero};
                                  guard (x418 == x417);
                                  _________eval11112I x5;
                                  return ()},
                              do {let {x445 = Cabbage};
                                  (x447, x448) <- case x4 of
                                                  {Cons y447 y448 -> return (y447, y448);
                                                   _ -> mzero};
                                  guard (x447 == x445);
                                  let {x446 = x448};
                                  (x18, x19) <- case x446 of
                                                {Cons y18 y19 -> return (y18, y19); _ -> mzero};
                                  __stepEvalII x18 x19;
                                  return ()}]
_________eval1111O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x417 = Goat};
let {x418 = x417};
x5 <- _________eval11112O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x4 = Cons x418 x5};
return x4},
do {let {x445 = Cabbage};
let {x447 = x445};
x448,
x446) <- do {x446 <- gen__________eval1111O_x446;
return (x446,
x446)};
let {x4 = Cons x447 x448};
x18,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              x19) <- case x446 of
{Cons y18
y19 -> return (y18,
y19);
mzero};
stepEvalII x18 x19;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             return x4}]
_________eval11112I x5 = Immature $ msum [do {let {x419 = Wolf};
                                   (x420, x6) <- case x5 of
                                                 {Cons y420 y6 -> return (y420, y6); _ -> mzero};
                                   guard (x420 == x419);
                                   _________eval111122I x6;
                                   return ()},
                               do {let {x443 = Goat};
                                   (x444, x6) <- case x5 of
                                                 {Cons y444 y6 -> return (y444, y6); _ -> mzero};
                                   guard (x444 == x443);
                                   ___evalI x6;
                                   return ()}]
_________eval11112O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x419 = Wolf};
let {x420 = x419};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              x6 <- _________eval111122O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x5 = Cons x420 x6};
return x5},
do {let {x443 = Goat};
let {x444 = x443};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              x6 <- ___evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x5 = Cons x444 x6};
return x5}]
_________eval111122I x6 = Immature $ msum [do {let {x421 = Term.Empty};
                                    (x422, x7) <- case x6 of
                                                  {Cons y422 y7 -> return (y422, y7); _ -> mzero};
                                    guard (x422 == x421);
                                    _________eval1111222I x7;
                                    return ()},
                                do {let {x429 = Wolf};
                                    (x430, x7) <- case x6 of
                                                  {Cons y430 y7 -> return (y430, y7); _ -> mzero};
                                    guard (x430 == x429);
                                    swapEvalI x7;
                                    return ()},
                                do {let {x431 = Cabbage};
                                    (x432, x7) <- case x6 of
                                                  {Cons y432 y7 -> return (y432, y7); _ -> mzero};
                                    guard (x432 == x431);
                                    _________eval1111223I x7;
                                    return ()}]
_________eval111122O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x421 = Term.Empty};
let {x422 = x421};
x7 <- _________eval1111222O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x6 = Cons x422 x7};
return x6},
do {let {x429 = Wolf};
let {x430 = x429};
x7 <- swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
let {x6 = Cons x430 x7};
return x6},
do {let {x431 = Cabbage};
let {x432 = x431};
x7 <- _________eval1111223O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x6 = Cons x432 x7};
return x6}]
_________eval1111222I x7 = Immature $ msum [do {let {x423 = Goat};
                                     (x424, x8) <- case x7 of
                                                   {Cons y424 y8 -> return (y424, y8); _ -> mzero};
                                     guard (x424 == x423);
                                     _________eval11112223I x8;
                                     return ()},
                                 do {let {x427 = Term.Empty};
                                     (x428, x8) <- case x7 of
                                                   {Cons y428 y8 -> return (y428, y8); _ -> mzero};
                                     guard (x428 == x427);
                                     __evalI x8;
                                     return ()}]
_________eval1111222O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x423 = Goat};
let {x424 = x423};
x8 <- _________eval11112223O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x7 = Cons x424 x8};
return x7},
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            do {let {x427 = Term.Empty};
let {x428 = x427};
x8 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x7 = Cons x428 x8};
return x7}]
_________eval11112223I x8 = Immature $ msum [do {guard (x8 == Nil);
                                      return ()},
                                  do {(x9, x10) <- case x8 of
                                                   {Cons y9 y10 -> return (y9, y10); _ -> mzero};
                                      _________eval111122233II x9 x10;
                                      return ()}]
_________eval11112223O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x8 = Nil};
return x8},
do {(x9,
x10) <- _________eval111122233OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x8 = Cons x9 x10};
return x8}]
_________eval111122233II x9 x10 = Immature $ msum [do {let {x425 = Term.Empty};
                                            guard (x9 == Term.Empty);
                                            (x426, x11) <- case x10 of
                                                           {Cons y426 y11 -> return (y426, y11);
                                                            _ -> mzero};
                                            guard (x426 == x425);
                                            _evalI x11;
                                            return ()},
                                        do {guard (x9 == Goat);
                                            (x12, x13) <- case x10 of
                                                          {Cons y12 y13 -> return (y12, y13);
                                                           _ -> mzero};
                                            stepEvalII x12 x13;
                                            return ()}]
_________eval111122233OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x9 = Term.Empty};
let {x425 = Term.Empty};
let {x426 = x425};
x11 <- _evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x10 = Cons x426 x11};
return (x9,
x10)},
do {let {x9 = Goat};
x12,
x13) <- stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x10 = Cons x12 x13};
return (x9,
x10)}]
_________eval1111223I x7 = Immature $ msum [do {let {x433 = Cabbage};
                                     (x434, x14) <- case x7 of
                                                    {Cons y434 y14 -> return (y434, y14);
                                                     _ -> mzero};
                                     guard (x434 == x433);
                                     __evalI x14;
                                     return ()},
                                 do {let {x435 = Goat};
                                     (x436, x14) <- case x7 of
                                                    {Cons y436 y14 -> return (y436, y14);
                                                     _ -> mzero};
                                     guard (x436 == x435);
                                     _________eval11112233I x14;
                                     return ()}]
_________eval1111223O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x433 = Cabbage};
let {x434 = x433};
x14 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                let {x7 = Cons x434 x14};
return x7},
do {let {x435 = Goat};
let {x436 = x435};
x14 <- _________eval11112233O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x7 = Cons x436 x14};
return x7}]
_________eval11112233I x14 = Immature $ msum [do {let {x437 = Goat};
                                       (x439, x440) <- case x14 of
                                                       {Cons y439 y440 -> return (y439, y440);
                                                        _ -> mzero};
                                       guard (x439 == x437);
                                       let {x438 = x440};
                                       (x15, x16) <- case x438 of
                                                     {Cons y15 y16 -> return (y15, y16);
                                                      _ -> mzero};
                                       _stepEvalII x15 x16;
                                       return ()},
                                   do {let {x441 = Wolf};
                                       (x442, x17) <- case x14 of
                                                      {Cons y442 y17 -> return (y442, y17);
                                                       _ -> mzero};
                                       guard (x442 == x441);
                                       _swapEvalI x17;
                                       return ()}]
_________eval11112233O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x437 = Goat};
let {x439 = x437};
x440,
x438) <- do {x438 <- gen__________eval11112233O_x438;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               return (x438,
x438)};
let {x14 = Cons x439 x440};
x15,
x16) <- case x438 of
{Cons y15
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                y16 -> return (y15,
y16);
mzero};
stepEvalII x15 x16;
return x14},
do {let {x441 = Wolf};
let {x442 = x441};
x17 <- _swapEvalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x14 = Cons x442 x17};
return x14}]
_________eval1112I x4 = Immature $ msum [do {let {x451 = Term.Empty};
                                  (x452, x20) <- case x4 of
                                                 {Cons y452 y20 -> return (y452, y20); _ -> mzero};
                                  guard (x452 == x451);
                                  ____evalI x20;
                                  return ()},
                              do {let {x453 = Wolf};
                                  (x454, x20) <- case x4 of
                                                 {Cons y454 y20 -> return (y454, y20); _ -> mzero};
                                  guard (x454 == x453);
                                  _________eval11123I x20;
                                  return ()}]
_________eval1112O gen__________eval11123333O_x467 gen__________eval11123O_x483 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x451 = Term.Empty};
                                                                                                                                                                                                                       let {x452 = x451};
                                                                                                                                                                                                                       x20 <- ____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                       let {x4 = Cons x452 x20};
                                                                                                                                                                                                                       return x4},
                                                                                                                                                                                                                   do {let {x453 = Wolf};
                                                                                                                                                                                                                       let {x454 = x453};
                                                                                                                                                                                                                       x20 <- _________eval11123O gen__________eval11123333O_x467 gen__________eval11123O_x483 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                       let {x4 = Cons x454 x20};
                                                                                                                                                                                                                       return x4}]
_________eval11123I x20 = Immature $ msum [do {let {x455 = Cabbage};
                                    (x456, x21) <- case x20 of
                                                   {Cons y456 y21 -> return (y456, y21);
                                                    _ -> mzero};
                                    guard (x456 == x455);
                                    _________eval111233I x21;
                                    return ()},
                                do {let {x480 = Wolf};
                                    (x481, x21) <- case x20 of
                                                   {Cons y481 y21 -> return (y481, y21);
                                                    _ -> mzero};
                                    guard (x481 == x480);
                                    ______evalI x21;
                                    return ()},
                                do {let {x482 = Term.Empty};
                                    let {x484 = Term.Empty};
                                    (x486, x487) <- case x20 of
                                                    {Cons y486 y487 -> return (y486, y487);
                                                     _ -> mzero};
                                    guard (x486 == x482);
                                    let {x483 = x487};
                                    x485 <- case x483 of
                                            {Cons y484 y485 -> do {guard (x484 == y484);
                                                                   return y485};
                                             _ -> mzero};
                                    (x29, x30) <- case x485 of
                                                  {Cons y29 y30 -> return (y29, y30); _ -> mzero};
                                    ____stepEvalII x29 x30;
                                    return ()}]
_________eval11123O gen__________eval11123333O_x467 gen__________eval11123O_x483 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x455 = Cabbage};
                                                                                                                                                                                                                        let {x456 = x455};
                                                                                                                                                                                                                        x21 <- _________eval111233O gen__________eval11123333O_x467 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                        let {x20 = Cons x456 x21};
                                                                                                                                                                                                                        return x20},
                                                                                                                                                                                                                    do {let {x480 = Wolf};
                                                                                                                                                                                                                        let {x481 = x480};
                                                                                                                                                                                                                        x21 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                        let {x20 = Cons x481 x21};
                                                                                                                                                                                                                        return x20},
                                                                                                                                                                                                                    do {let {x482 = Term.Empty};
                                                                                                                                                                                                                        let {x484 = Term.Empty};
                                                                                                                                                                                                                        let {x486 = x482};
                                                                                                                                                                                                                        (x487,
                                                                                                                                                                                                                         x483) <- do {x483 <- gen__________eval11123O_x483;
                                                                                                                                                                                                                                      return (x483,
                                                                                                                                                                                                                                              x483)};
                                                                                                                                                                                                                        let {x20 = Cons x486 x487};
                                                                                                                                                                                                                        x485 <- case x483 of
                                                                                                                                                                                                                                {Cons y484
                                                                                                                                                                                                                                      y485 -> do {guard (x484 == y484);
                                                                                                                                                                                                                                                  return y485};
                                                                                                                                                                                                                                 _ -> mzero};
                                                                                                                                                                                                                        (x29,
                                                                                                                                                                                                                         x30) <- case x485 of
                                                                                                                                                                                                                                 {Cons y29
                                                                                                                                                                                                                                       y30 -> return (y29,
                                                                                                                                                                                                                                                      y30);
                                                                                                                                                                                                                                  _ -> mzero};
                                                                                                                                                                                                                        ____stepEvalII x29 x30;
                                                                                                                                                                                                                        return x20}]
_________eval111233I x21 = Immature $ msum [do {let {x457 = Term.Empty};
                                     (x458, x22) <- case x21 of
                                                    {Cons y458 y22 -> return (y458, y22);
                                                     _ -> mzero};
                                     guard (x458 == x457);
                                     _________eval1112333I x22;
                                     return ()},
                                 do {let {x478 = Cabbage};
                                     (x479, x22) <- case x21 of
                                                    {Cons y479 y22 -> return (y479, y22);
                                                     _ -> mzero};
                                     guard (x479 == x478);
                                     __swapEvalI x22;
                                     return ()}]
_________eval111233O gen__________eval11123333O_x467 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x457 = Term.Empty};
                                                                                                                                                                                            let {x458 = x457};
                                                                                                                                                                                            x22 <- _________eval1112333O gen__________eval11123333O_x467 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                            let {x21 = Cons x458 x22};
                                                                                                                                                                                            return x21},
                                                                                                                                                                                        do {let {x478 = Cabbage};
                                                                                                                                                                                            let {x479 = x478};
                                                                                                                                                                                            x22 <- __swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                            let {x21 = Cons x479 x22};
                                                                                                                                                                                            return x21}]
_________eval1112333I x22 = Immature $ msum [do {let {x459 = Wolf};
                                      (x460, x23) <- case x22 of
                                                     {Cons y460 y23 -> return (y460, y23);
                                                      _ -> mzero};
                                      guard (x460 == x459);
                                      _________eval11123333I x23;
                                      return ()},
                                  do {let {x476 = Term.Empty};
                                      (x477, x23) <- case x22 of
                                                     {Cons y477 y23 -> return (y477, y23);
                                                      _ -> mzero};
                                      guard (x477 == x476);
                                      _______evalI x23;
                                      return ()}]
_________eval1112333O gen__________eval11123333O_x467 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x459 = Wolf};
                                                                                                                                                                                             let {x460 = x459};
                                                                                                                                                                                             x23 <- _________eval11123333O gen__________eval11123333O_x467 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                             let {x22 = Cons x460 x23};
                                                                                                                                                                                             return x22},
                                                                                                                                                                                         do {let {x476 = Term.Empty};
                                                                                                                                                                                             let {x477 = x476};
                                                                                                                                                                                             x23 <- _______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                             let {x22 = Cons x477 x23};
                                                                                                                                                                                             return x22}]
_________eval11123333I x23 = Immature $ msum [do {let {x461 = Term.Empty};
                                       let {x463 = Term.Empty};
                                       (x464, x465) <- case x23 of
                                                       {Cons y464 y465 -> return (y464, y465);
                                                        _ -> mzero};
                                       guard (x464 == x461);
                                       let {x462 = x465};
                                       x24 <- case x462 of
                                              {Cons y463 y24 -> do {guard (x463 == y463);
                                                                    return y24};
                                               _ -> mzero};
                                       _____evalI x24;
                                       return ()},
                                   do {let {x466 = Wolf};
                                       (x468, x469) <- case x23 of
                                                       {Cons y468 y469 -> return (y468, y469);
                                                        _ -> mzero};
                                       guard (x468 == x466);
                                       let {x467 = x469};
                                       (x25, x26) <- case x467 of
                                                     {Cons y25 y26 -> return (y25, y26);
                                                      _ -> mzero};
                                       ___stepEvalII x25 x26;
                                       return ()},
                                   do {let {x470 = Cabbage};
                                       (x471, x27) <- case x23 of
                                                      {Cons y471 y27 -> return (y471, y27);
                                                       _ -> mzero};
                                       guard (x471 == x470);
                                       _________eval111233333I x27;
                                       return ()}]
_________eval11123333O gen__________eval11123333O_x467 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x461 = Term.Empty};
                                                                                                                                                                                              let {x463 = Term.Empty};
                                                                                                                                                                                              let {x464 = x461};
                                                                                                                                                                                              x24 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                              let {x462 = Cons x463 x24};
                                                                                                                                                                                              let {x465 = x462};
                                                                                                                                                                                              let {x23 = Cons x464 x465};
                                                                                                                                                                                              return x23},
                                                                                                                                                                                          do {let {x466 = Wolf};
                                                                                                                                                                                              let {x468 = x466};
                                                                                                                                                                                              (x469,
                                                                                                                                                                                               x467) <- do {x467 <- gen__________eval11123333O_x467;
                                                                                                                                                                                                            return (x467,
                                                                                                                                                                                                                    x467)};
                                                                                                                                                                                              let {x23 = Cons x468 x469};
                                                                                                                                                                                              (x25,
                                                                                                                                                                                               x26) <- case x467 of
                                                                                                                                                                                                       {Cons y25
                                                                                                                                                                                                             y26 -> return (y25,
                                                                                                                                                                                                                            y26);
                                                                                                                                                                                                        _ -> mzero};
                                                                                                                                                                                              ___stepEvalII x25 x26;
                                                                                                                                                                                              return x23},
                                                                                                                                                                                          do {let {x470 = Cabbage};
                                                                                                                                                                                              let {x471 = x470};
                                                                                                                                                                                              x27 <- _________eval111233333O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                              let {x23 = Cons x471 x27};
                                                                                                                                                                                              return x23}]
_________eval111233333I x27 = Immature $ msum [do {let {x472 = Cabbage};
                                        (x473, x28) <- case x27 of
                                                       {Cons y473 y28 -> return (y473, y28);
                                                        _ -> mzero};
                                        guard (x473 == x472);
                                        _____evalI x28;
                                        return ()},
                                    do {let {x474 = Term.Empty};
                                        (x475, x28) <- case x27 of
                                                       {Cons y475 y28 -> return (y475, y28);
                                                        _ -> mzero};
                                        guard (x475 == x474);
                                        ______evalI x28;
                                        return ()}]
_________eval111233333O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x472 = Cabbage};
                                                                                                                                                               let {x473 = x472};
                                                                                                                                                               x28 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                               let {x27 = Cons x473 x28};
                                                                                                                                                               return x27},
                                                                                                                                                           do {let {x474 = Term.Empty};
                                                                                                                                                               let {x475 = x474};
                                                                                                                                                               x28 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                               let {x27 = Cons x475 x28};
                                                                                                                                                               return x27}]
________evalI x0 = Immature $ msum [do {(x1, x2) <- case x0 of
                                         {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                             ________eval1II x1 x2;
                             return ()}]
________evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {(x1,
x2) <- ________eval1OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x0 = Cons x1 x2};
return x0}]
________eval1II x1 x2 = Immature $ msum [do {________eval13I x2;
                                  guard (x1 == Term.Empty);
                                  return ()},
                              do {guard (x1 == Goat);
                                  (x30, x31) <- case x2 of
                                                {Cons y30 y31 -> return (y30, y31); _ -> mzero};
                                  _____stepEvalII x30 x31;
                                  return ()}]
________eval1OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x1 = Term.Empty};
x2 <- ________eval13O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
return (x1,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  x2)},
do {let {x1 = Goat};
x30,
x31) <- _____stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x30 x31};
return (x1,
x2)}]
________eval13I x2 = Immature $ msum [do {let {x255 = Cabbage};
                               (x256, x3) <- case x2 of
                                             {Cons y256 y3 -> return (y256, y3); _ -> mzero};
                               guard (x256 == x255);
                               ________eval133I x3;
                               return ()},
                           do {let {x289 = Wolf};
                               (x290, x3) <- case x2 of
                                             {Cons y290 y3 -> return (y290, y3); _ -> mzero};
                               guard (x290 == x289);
                               ________eval134I x3;
                               return ()},
                           do {let {x328 = Term.Empty};
                               (x329, x3) <- case x2 of
                                             {Cons y329 y3 -> return (y329, y3); _ -> mzero};
                               guard (x329 == x328);
                               ________evalI x3;
                               return ()}]
________eval13O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x255 = Cabbage};
let {x256 = x255};
x3 <- ________eval133O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x256 x3};
return x2},
do {let {x289 = Wolf};
let {x290 = x289};
x3 <- ________eval134O gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          let {x2 = Cons x290 x3};
return x2},
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      do {let {x328 = Term.Empty};
let {x329 = x328};
x3 <- ________evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          let {x2 = Cons x329 x3};
return x2}]
________eval133I x3 = Immature $ msum [do {let {x257 = Goat};
                                (x258, x4) <- case x3 of
                                              {Cons y258 y4 -> return (y258, y4); _ -> mzero};
                                guard (x258 == x257);
                                ________eval1334I x4;
                                return ()},
                            do {let {x285 = Cabbage};
                                (x287, x288) <- case x3 of
                                                {Cons y287 y288 -> return (y287, y288); _ -> mzero};
                                guard (x287 == x285);
                                let {x286 = x288};
                                (x17, x18) <- case x286 of
                                              {Cons y17 y18 -> return (y17, y18); _ -> mzero};
                                __stepEvalII x17 x18;
                                return ()}]
________eval133O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x257 = Goat};
let {x258 = x257};
x4 <- ________eval1334O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x3 = Cons x258 x4};
return x3},
do {let {x285 = Cabbage};
let {x287 = x285};
x288,
x286) <- do {x286 <- gen_________eval133O_x286;
return (x286,
x286)};
let {x3 = Cons x287 x288};
x17,
x18) <- case x286 of
{Cons y17
y18 -> return (y17,
y18);
mzero};
stepEvalII x17 x18;
return x3}]
________eval1334I x4 = Immature $ msum [do {let {x259 = Wolf};
                                 (x260, x5) <- case x4 of
                                               {Cons y260 y5 -> return (y260, y5); _ -> mzero};
                                 guard (x260 == x259);
                                 ________eval13344I x5;
                                 return ()},
                             do {let {x283 = Goat};
                                 (x284, x5) <- case x4 of
                                               {Cons y284 y5 -> return (y284, y5); _ -> mzero};
                                 guard (x284 == x283);
                                 ___evalI x5;
                                 return ()}]
________eval1334O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x259 = Wolf};
let {x260 = x259};
x5 <- ________eval13344O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x4 = Cons x260 x5};
return x4},
do {let {x283 = Goat};
let {x284 = x283};
x5 <- ___evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            let {x4 = Cons x284 x5};
return x4}]
________eval13344I x5 = Immature $ msum [do {let {x261 = Term.Empty};
                                  (x262, x6) <- case x5 of
                                                {Cons y262 y6 -> return (y262, y6); _ -> mzero};
                                  guard (x262 == x261);
                                  ________eval133444I x6;
                                  return ()},
                              do {let {x269 = Wolf};
                                  (x270, x6) <- case x5 of
                                                {Cons y270 y6 -> return (y270, y6); _ -> mzero};
                                  guard (x270 == x269);
                                  swapEvalI x6;
                                  return ()},
                              do {let {x271 = Cabbage};
                                  (x272, x6) <- case x5 of
                                                {Cons y272 y6 -> return (y272, y6); _ -> mzero};
                                  guard (x272 == x271);
                                  ________eval133445I x6;
                                  return ()}]
________eval13344O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x261 = Term.Empty};
let {x262 = x261};
x6 <- ________eval133444O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x5 = Cons x262 x6};
return x5},
do {let {x269 = Wolf};
let {x270 = x269};
x6 <- swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
let {x5 = Cons x270 x6};
return x5},
do {let {x271 = Cabbage};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             let {x272 = x271};
x6 <- ________eval133445O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x5 = Cons x272 x6};
return x5}]
________eval133444I x6 = Immature $ msum [do {let {x263 = Goat};
                                   (x264, x7) <- case x6 of
                                                 {Cons y264 y7 -> return (y264, y7); _ -> mzero};
                                   guard (x264 == x263);
                                   ________eval1334445I x7;
                                   return ()},
                               do {let {x267 = Term.Empty};
                                   (x268, x7) <- case x6 of
                                                 {Cons y268 y7 -> return (y268, y7); _ -> mzero};
                                   guard (x268 == x267);
                                   __evalI x7;
                                   return ()}]
________eval133444O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x263 = Goat};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              let {x264 = x263};
x7 <- ________eval1334445O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x6 = Cons x264 x7};
return x6},
do {let {x267 = Term.Empty};
let {x268 = x267};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              x7 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              let {x6 = Cons x268 x7};
return x6}]
________eval1334445I x7 = Immature $ msum [do {guard (x7 == Nil); return ()},
                                do {(x8, x9) <- case x7 of
                                                {Cons y8 y9 -> return (y8, y9); _ -> mzero};
                                    ________eval13344455II x8 x9;
                                    return ()}]
________eval1334445O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x7 = Nil};
return x7},
do {(x8,
x9) <- ________eval13344455OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x7 = Cons x8 x9};
return x7}]
________eval13344455II x8 x9 = Immature $ msum [do {let {x265 = Term.Empty};
                                         guard (x8 == Term.Empty);
                                         (x266, x10) <- case x9 of
                                                        {Cons y266 y10 -> return (y266, y10);
                                                         _ -> mzero};
                                         guard (x266 == x265);
                                         _evalI x10;
                                         return ()},
                                     do {guard (x8 == Goat);
                                         (x11, x12) <- case x9 of
                                                       {Cons y11 y12 -> return (y11, y12);
                                                        _ -> mzero};
                                         stepEvalII x11 x12;
                                         return ()}]
________eval13344455OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x8 = Term.Empty};
let {x265 = Term.Empty};
let {x266 = x265};
x10 <- _evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x9 = Cons x266 x10};
return (x8,
x9)},
do {let {x8 = Goat};
x11,
x12) <- stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x9 = Cons x11 x12};
return (x8,
x9)}]
________eval133445I x6 = Immature $ msum [do {let {x273 = Cabbage};
                                   (x274, x13) <- case x6 of
                                                  {Cons y274 y13 -> return (y274, y13); _ -> mzero};
                                   guard (x274 == x273);
                                   __evalI x13;
                                   return ()},
                               do {let {x275 = Goat};
                                   (x276, x13) <- case x6 of
                                                  {Cons y276 y13 -> return (y276, y13); _ -> mzero};
                                   guard (x276 == x275);
                                   ________eval1334455I x13;
                                   return ()}]
________eval133445O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x273 = Cabbage};
let {x274 = x273};
x13 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x6 = Cons x274 x13};
return x6},
do {let {x275 = Goat};
let {x276 = x275};
x13 <- ________eval1334455O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x6 = Cons x276 x13};
return x6}]
________eval1334455I x13 = Immature $ msum [do {let {x277 = Goat};
                                     (x279, x280) <- case x13 of
                                                     {Cons y279 y280 -> return (y279, y280);
                                                      _ -> mzero};
                                     guard (x279 == x277);
                                     let {x278 = x280};
                                     (x14, x15) <- case x278 of
                                                   {Cons y14 y15 -> return (y14, y15); _ -> mzero};
                                     _stepEvalII x14 x15;
                                     return ()},
                                 do {let {x281 = Wolf};
                                     (x282, x16) <- case x13 of
                                                    {Cons y282 y16 -> return (y282, y16);
                                                     _ -> mzero};
                                     guard (x282 == x281);
                                     _swapEvalI x16;
                                     return ()}]
________eval1334455O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x277 = Goat};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               let {x279 = x277};
x280,
x278) <- do {x278 <- gen_________eval1334455O_x278;
return (x278,
x278)};
let {x13 = Cons x279 x280};
x14,
x15) <- case x278 of
{Cons y14
y15 -> return (y14,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             y15);
mzero};
stepEvalII x14 x15;
return x13},
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           do {let {x281 = Wolf};
let {x282 = x281};
x16 <- _swapEvalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x13 = Cons x282 x16};
return x13}]
________eval134I x3 = Immature $ msum [do {let {x291 = Term.Empty};
                                (x292, x19) <- case x3 of
                                               {Cons y292 y19 -> return (y292, y19); _ -> mzero};
                                guard (x292 == x291);
                                ____evalI x19;
                                return ()},
                            do {let {x293 = Wolf};
                                (x294, x19) <- case x3 of
                                               {Cons y294 y19 -> return (y294, y19); _ -> mzero};
                                guard (x294 == x293);
                                ________eval1345I x19;
                                return ()}]
________eval134O gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x291 = Term.Empty};
                                                                                                                                                                                                                 let {x292 = x291};
                                                                                                                                                                                                                 x19 <- ____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                 let {x3 = Cons x292 x19};
                                                                                                                                                                                                                 return x3},
                                                                                                                                                                                                             do {let {x293 = Wolf};
                                                                                                                                                                                                                 let {x294 = x293};
                                                                                                                                                                                                                 x19 <- ________eval1345O gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                 let {x3 = Cons x294 x19};
                                                                                                                                                                                                                 return x3}]
________eval1345I x19 = Immature $ msum [do {let {x295 = Cabbage};
                                  (x296, x20) <- case x19 of
                                                 {Cons y296 y20 -> return (y296, y20); _ -> mzero};
                                  guard (x296 == x295);
                                  ________eval13455I x20;
                                  return ()},
                              do {let {x320 = Wolf};
                                  (x321, x20) <- case x19 of
                                                 {Cons y321 y20 -> return (y321, y20); _ -> mzero};
                                  guard (x321 == x320);
                                  ______evalI x20;
                                  return ()},
                              do {let {x322 = Term.Empty};
                                  let {x324 = Term.Empty};
                                  (x326, x327) <- case x19 of
                                                  {Cons y326 y327 -> return (y326, y327);
                                                   _ -> mzero};
                                  guard (x326 == x322);
                                  let {x323 = x327};
                                  x325 <- case x323 of
                                          {Cons y324 y325 -> do {guard (x324 == y324); return y325};
                                           _ -> mzero};
                                  (x28, x29) <- case x325 of
                                                {Cons y28 y29 -> return (y28, y29); _ -> mzero};
                                  ____stepEvalII x28 x29;
                                  return ()}]
________eval1345O gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x295 = Cabbage};
                                                                                                                                                                                                                  let {x296 = x295};
                                                                                                                                                                                                                  x20 <- ________eval13455O gen_________eval1345555O_x307 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                  let {x19 = Cons x296 x20};
                                                                                                                                                                                                                  return x19},
                                                                                                                                                                                                              do {let {x320 = Wolf};
                                                                                                                                                                                                                  let {x321 = x320};
                                                                                                                                                                                                                  x20 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                  let {x19 = Cons x321 x20};
                                                                                                                                                                                                                  return x19},
                                                                                                                                                                                                              do {let {x322 = Term.Empty};
                                                                                                                                                                                                                  let {x324 = Term.Empty};
                                                                                                                                                                                                                  let {x326 = x322};
                                                                                                                                                                                                                  (x327,
                                                                                                                                                                                                                   x323) <- do {x323 <- gen_________eval1345O_x323;
                                                                                                                                                                                                                                return (x323,
                                                                                                                                                                                                                                        x323)};
                                                                                                                                                                                                                  let {x19 = Cons x326 x327};
                                                                                                                                                                                                                  x325 <- case x323 of
                                                                                                                                                                                                                          {Cons y324
                                                                                                                                                                                                                                y325 -> do {guard (x324 == y324);
                                                                                                                                                                                                                                            return y325};
                                                                                                                                                                                                                           _ -> mzero};
                                                                                                                                                                                                                  (x28,
                                                                                                                                                                                                                   x29) <- case x325 of
                                                                                                                                                                                                                           {Cons y28
                                                                                                                                                                                                                                 y29 -> return (y28,
                                                                                                                                                                                                                                                y29);
                                                                                                                                                                                                                            _ -> mzero};
                                                                                                                                                                                                                  ____stepEvalII x28 x29;
                                                                                                                                                                                                                  return x19}]
________eval13455I x20 = Immature $ msum [do {let {x297 = Term.Empty};
                                   (x298, x21) <- case x20 of
                                                  {Cons y298 y21 -> return (y298, y21); _ -> mzero};
                                   guard (x298 == x297);
                                   ________eval134555I x21;
                                   return ()},
                               do {let {x318 = Cabbage};
                                   (x319, x21) <- case x20 of
                                                  {Cons y319 y21 -> return (y319, y21); _ -> mzero};
                                   guard (x319 == x318);
                                   __swapEvalI x21;
                                   return ()}]
________eval13455O gen_________eval1345555O_x307 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x297 = Term.Empty};
                                                                                                                                                                                        let {x298 = x297};
                                                                                                                                                                                        x21 <- ________eval134555O gen_________eval1345555O_x307 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                        let {x20 = Cons x298 x21};
                                                                                                                                                                                        return x20},
                                                                                                                                                                                    do {let {x318 = Cabbage};
                                                                                                                                                                                        let {x319 = x318};
                                                                                                                                                                                        x21 <- __swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                        let {x20 = Cons x319 x21};
                                                                                                                                                                                        return x20}]
________eval134555I x21 = Immature $ msum [do {let {x299 = Wolf};
                                    (x300, x22) <- case x21 of
                                                   {Cons y300 y22 -> return (y300, y22);
                                                    _ -> mzero};
                                    guard (x300 == x299);
                                    ________eval1345555I x22;
                                    return ()},
                                do {let {x316 = Term.Empty};
                                    (x317, x22) <- case x21 of
                                                   {Cons y317 y22 -> return (y317, y22);
                                                    _ -> mzero};
                                    guard (x317 == x316);
                                    _______evalI x22;
                                    return ()}]
________eval134555O gen_________eval1345555O_x307 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x299 = Wolf};
                                                                                                                                                                                         let {x300 = x299};
                                                                                                                                                                                         x22 <- ________eval1345555O gen_________eval1345555O_x307 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                         let {x21 = Cons x300 x22};
                                                                                                                                                                                         return x21},
                                                                                                                                                                                     do {let {x316 = Term.Empty};
                                                                                                                                                                                         let {x317 = x316};
                                                                                                                                                                                         x22 <- _______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                         let {x21 = Cons x317 x22};
                                                                                                                                                                                         return x21}]
________eval1345555I x22 = Immature $ msum [do {let {x301 = Term.Empty};
                                     let {x303 = Term.Empty};
                                     (x304, x305) <- case x22 of
                                                     {Cons y304 y305 -> return (y304, y305);
                                                      _ -> mzero};
                                     guard (x304 == x301);
                                     let {x302 = x305};
                                     x23 <- case x302 of
                                            {Cons y303 y23 -> do {guard (x303 == y303); return y23};
                                             _ -> mzero};
                                     _____evalI x23;
                                     return ()},
                                 do {let {x306 = Wolf};
                                     (x308, x309) <- case x22 of
                                                     {Cons y308 y309 -> return (y308, y309);
                                                      _ -> mzero};
                                     guard (x308 == x306);
                                     let {x307 = x309};
                                     (x24, x25) <- case x307 of
                                                   {Cons y24 y25 -> return (y24, y25); _ -> mzero};
                                     ___stepEvalII x24 x25;
                                     return ()},
                                 do {let {x310 = Cabbage};
                                     (x311, x26) <- case x22 of
                                                    {Cons y311 y26 -> return (y311, y26);
                                                     _ -> mzero};
                                     guard (x311 == x310);
                                     ________eval13455555I x26;
                                     return ()}]
________eval1345555O gen_________eval1345555O_x307 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x301 = Term.Empty};
                                                                                                                                                                                          let {x303 = Term.Empty};
                                                                                                                                                                                          let {x304 = x301};
                                                                                                                                                                                          x23 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                          let {x302 = Cons x303 x23};
                                                                                                                                                                                          let {x305 = x302};
                                                                                                                                                                                          let {x22 = Cons x304 x305};
                                                                                                                                                                                          return x22},
                                                                                                                                                                                      do {let {x306 = Wolf};
                                                                                                                                                                                          let {x308 = x306};
                                                                                                                                                                                          (x309,
                                                                                                                                                                                           x307) <- do {x307 <- gen_________eval1345555O_x307;
                                                                                                                                                                                                        return (x307,
                                                                                                                                                                                                                x307)};
                                                                                                                                                                                          let {x22 = Cons x308 x309};
                                                                                                                                                                                          (x24,
                                                                                                                                                                                           x25) <- case x307 of
                                                                                                                                                                                                   {Cons y24
                                                                                                                                                                                                         y25 -> return (y24,
                                                                                                                                                                                                                        y25);
                                                                                                                                                                                                    _ -> mzero};
                                                                                                                                                                                          ___stepEvalII x24 x25;
                                                                                                                                                                                          return x22},
                                                                                                                                                                                      do {let {x310 = Cabbage};
                                                                                                                                                                                          let {x311 = x310};
                                                                                                                                                                                          x26 <- ________eval13455555O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                          let {x22 = Cons x311 x26};
                                                                                                                                                                                          return x22}]
________eval13455555I x26 = Immature $ msum [do {let {x312 = Cabbage};
                                      (x313, x27) <- case x26 of
                                                     {Cons y313 y27 -> return (y313, y27);
                                                      _ -> mzero};
                                      guard (x313 == x312);
                                      _____evalI x27;
                                      return ()},
                                  do {let {x314 = Term.Empty};
                                      (x315, x27) <- case x26 of
                                                     {Cons y315 y27 -> return (y315, y27);
                                                      _ -> mzero};
                                      guard (x315 == x314);
                                      ______evalI x27;
                                      return ()}]
________eval13455555O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x312 = Cabbage};
                                                                                                                                                             let {x313 = x312};
                                                                                                                                                             x27 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                             let {x26 = Cons x313 x27};
                                                                                                                                                             return x26},
                                                                                                                                                         do {let {x314 = Term.Empty};
                                                                                                                                                             let {x315 = x314};
                                                                                                                                                             x27 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                             let {x26 = Cons x315 x27};
                                                                                                                                                             return x26}]
_______evalI x0 = Immature $ msum [do {(x1, x2) <- case x0 of
                                        {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                            _______eval1II x1 x2;
                            return ()}]
_______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {(x1,
                                                                                                                                                     x2) <- _______eval1OO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                    let {x0 = Cons x1 x2};
                                                                                                                                                    return x0}]
_______eval1II x1 x2 = Immature $ msum [do {_______eval15I x2;
                                 guard (x1 == Term.Empty);
                                 return ()},
                             do {__swapEvalI x2; guard (x1 == Cabbage); return ()}]
_______eval1OO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x1 = Term.Empty};
                                                                                                                                                      x2 <- _______eval15O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      return (x1,
                                                                                                                                                              x2)},
                                                                                                                                                  do {let {x1 = Cabbage};
                                                                                                                                                      x2 <- __swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      return (x1,
                                                                                                                                                              x2)}]
_______eval15I x2 = Immature $ msum [do {let {x209 = Wolf};
                              (x210, x3) <- case x2 of
                                            {Cons y210 y3 -> return (y210, y3); _ -> mzero};
                              guard (x210 == x209);
                              _______eval155I x3;
                              return ()},
                          do {let {x226 = Term.Empty};
                              (x227, x3) <- case x2 of
                                            {Cons y227 y3 -> return (y227, y3); _ -> mzero};
                              guard (x227 == x226);
                              _______evalI x3;
                              return ()}]
_______eval15O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x209 = Wolf};
                                                                                                                                                      let {x210 = x209};
                                                                                                                                                      x3 <- _______eval155O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      let {x2 = Cons x210 x3};
                                                                                                                                                      return x2},
                                                                                                                                                  do {let {x226 = Term.Empty};
                                                                                                                                                      let {x227 = x226};
                                                                                                                                                      x3 <- _______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      let {x2 = Cons x227 x3};
                                                                                                                                                      return x2}]
_______eval155I x3 = Immature $ msum [do {let {x211 = Term.Empty};
                               let {x213 = Term.Empty};
                               (x214, x215) <- case x3 of
                                               {Cons y214 y215 -> return (y214, y215); _ -> mzero};
                               guard (x214 == x211);
                               let {x212 = x215};
                               x4 <- case x212 of
                                     {Cons y213 y4 -> do {guard (x213 == y213); return y4};
                                      _ -> mzero};
                               _____evalI x4;
                               return ()},
                           do {let {x216 = Wolf};
                               (x218, x219) <- case x3 of
                                               {Cons y218 y219 -> return (y218, y219); _ -> mzero};
                               guard (x218 == x216);
                               let {x217 = x219};
                               (x5, x6) <- case x217 of
                                           {Cons y5 y6 -> return (y5, y6); _ -> mzero};
                               ___stepEvalII x5 x6;
                               return ()},
                           do {let {x220 = Cabbage};
                               (x221, x7) <- case x3 of
                                             {Cons y221 y7 -> return (y221, y7); _ -> mzero};
                               guard (x221 == x220);
                               _______eval1555I x7;
                               return ()}]
_______eval155O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x211 = Term.Empty};
                                                                                                                                                       let {x213 = Term.Empty};
                                                                                                                                                       let {x214 = x211};
                                                                                                                                                       x4 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                       let {x212 = Cons x213 x4};
                                                                                                                                                       let {x215 = x212};
                                                                                                                                                       let {x3 = Cons x214 x215};
                                                                                                                                                       return x3},
                                                                                                                                                   do {let {x216 = Wolf};
                                                                                                                                                       let {x218 = x216};
                                                                                                                                                       (x219,
                                                                                                                                                        x217) <- do {x217 <- gen________eval155O_x217;
                                                                                                                                                                     return (x217,
                                                                                                                                                                             x217)};
                                                                                                                                                       let {x3 = Cons x218 x219};
                                                                                                                                                       (x5,
                                                                                                                                                        x6) <- case x217 of
                                                                                                                                                               {Cons y5
                                                                                                                                                                     y6 -> return (y5,
                                                                                                                                                                                   y6);
                                                                                                                                                                _ -> mzero};
                                                                                                                                                       ___stepEvalII x5 x6;
                                                                                                                                                       return x3},
                                                                                                                                                   do {let {x220 = Cabbage};
                                                                                                                                                       let {x221 = x220};
                                                                                                                                                       x7 <- _______eval1555O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                       let {x3 = Cons x221 x7};
                                                                                                                                                       return x3}]
_______eval1555I x7 = Immature $ msum [do {let {x222 = Cabbage};
                                (x223, x8) <- case x7 of
                                              {Cons y223 y8 -> return (y223, y8); _ -> mzero};
                                guard (x223 == x222);
                                _____evalI x8;
                                return ()},
                            do {let {x224 = Term.Empty};
                                (x225, x8) <- case x7 of
                                              {Cons y225 y8 -> return (y225, y8); _ -> mzero};
                                guard (x225 == x224);
                                ______evalI x8;
                                return ()}]
_______eval1555O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x222 = Cabbage};
                                                                                                                                                        let {x223 = x222};
                                                                                                                                                        x8 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                        let {x7 = Cons x223 x8};
                                                                                                                                                        return x7},
                                                                                                                                                    do {let {x224 = Term.Empty};
                                                                                                                                                        let {x225 = x224};
                                                                                                                                                        x8 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                        let {x7 = Cons x225 x8};
                                                                                                                                                        return x7}]
______evalI x0 = Immature $ msum [do {(x1, x2) <- case x0 of
                                       {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                           ______eval1II x1 x2;
                           return ()}]
______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {(x1,
                                                                                                                                                    x2) <- ______eval1OO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                   let {x0 = Cons x1 x2};
                                                                                                                                                   return x0}]
______eval1II x1 x2 = Immature $ msum [do {____evalI x2;
                                guard (x1 == Term.Empty);
                                return ()},
                            do {______eval15I x2; guard (x1 == Wolf); return ()}]
______eval1OO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x1 = Term.Empty};
                                                                                                                                                     x2 <- ____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                     return (x1,
                                                                                                                                                             x2)},
                                                                                                                                                 do {let {x1 = Wolf};
                                                                                                                                                     x2 <- ______eval15O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                     return (x1,
                                                                                                                                                             x2)}]
______eval15I x2 = Immature $ msum [do {let {x176 = Cabbage};
                             (x177, x3) <- case x2 of
                                           {Cons y177 y3 -> return (y177, y3); _ -> mzero};
                             guard (x177 == x176);
                             ______eval155I x3;
                             return ()},
                         do {let {x201 = Wolf};
                             (x202, x3) <- case x2 of
                                           {Cons y202 y3 -> return (y202, y3); _ -> mzero};
                             guard (x202 == x201);
                             ______evalI x3;
                             return ()},
                         do {let {x203 = Term.Empty};
                             let {x205 = Term.Empty};
                             (x207, x208) <- case x2 of
                                             {Cons y207 y208 -> return (y207, y208); _ -> mzero};
                             guard (x207 == x203);
                             let {x204 = x208};
                             x206 <- case x204 of
                                     {Cons y205 y206 -> do {guard (x205 == y205); return y206};
                                      _ -> mzero};
                             (x11, x12) <- case x206 of
                                           {Cons y11 y12 -> return (y11, y12); _ -> mzero};
                             ____stepEvalII x11 x12;
                             return ()}]
______eval15O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x176 = Cabbage};
                                                                                                                                                     let {x177 = x176};
                                                                                                                                                     x3 <- ______eval155O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                     let {x2 = Cons x177 x3};
                                                                                                                                                     return x2},
                                                                                                                                                 do {let {x201 = Wolf};
                                                                                                                                                     let {x202 = x201};
                                                                                                                                                     x3 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                     let {x2 = Cons x202 x3};
                                                                                                                                                     return x2},
                                                                                                                                                 do {let {x203 = Term.Empty};
                                                                                                                                                     let {x205 = Term.Empty};
                                                                                                                                                     let {x207 = x203};
                                                                                                                                                     (x208,
                                                                                                                                                      x204) <- do {x204 <- gen_______eval15O_x204;
                                                                                                                                                                   return (x204,
                                                                                                                                                                           x204)};
                                                                                                                                                     let {x2 = Cons x207 x208};
                                                                                                                                                     x206 <- case x204 of
                                                                                                                                                             {Cons y205
                                                                                                                                                                   y206 -> do {guard (x205 == y205);
                                                                                                                                                                               return y206};
                                                                                                                                                              _ -> mzero};
                                                                                                                                                     (x11,
                                                                                                                                                      x12) <- case x206 of
                                                                                                                                                              {Cons y11
                                                                                                                                                                    y12 -> return (y11,
                                                                                                                                                                                   y12);
                                                                                                                                                               _ -> mzero};
                                                                                                                                                     ____stepEvalII x11 x12;
                                                                                                                                                     return x2}]
______eval155I x3 = Immature $ msum [do {let {x178 = Term.Empty};
                              (x179, x4) <- case x3 of
                                            {Cons y179 y4 -> return (y179, y4); _ -> mzero};
                              guard (x179 == x178);
                              ______eval1555I x4;
                              return ()},
                          do {let {x199 = Cabbage};
                              (x200, x4) <- case x3 of
                                            {Cons y200 y4 -> return (y200, y4); _ -> mzero};
                              guard (x200 == x199);
                              __swapEvalI x4;
                              return ()}]
______eval155O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x178 = Term.Empty};
                                                                                                                                                      let {x179 = x178};
                                                                                                                                                      x4 <- ______eval1555O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      let {x3 = Cons x179 x4};
                                                                                                                                                      return x3},
                                                                                                                                                  do {let {x199 = Cabbage};
                                                                                                                                                      let {x200 = x199};
                                                                                                                                                      x4 <- __swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      let {x3 = Cons x200 x4};
                                                                                                                                                      return x3}]
______eval1555I x4 = Immature $ msum [do {let {x180 = Wolf};
                               (x181, x5) <- case x4 of
                                             {Cons y181 y5 -> return (y181, y5); _ -> mzero};
                               guard (x181 == x180);
                               ______eval15555I x5;
                               return ()},
                           do {let {x197 = Term.Empty};
                               (x198, x5) <- case x4 of
                                             {Cons y198 y5 -> return (y198, y5); _ -> mzero};
                               guard (x198 == x197);
                               _______evalI x5;
                               return ()}]
______eval1555O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x180 = Wolf};
                                                                                                                                                       let {x181 = x180};
                                                                                                                                                       x5 <- ______eval15555O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                       let {x4 = Cons x181 x5};
                                                                                                                                                       return x4},
                                                                                                                                                   do {let {x197 = Term.Empty};
                                                                                                                                                       let {x198 = x197};
                                                                                                                                                       x5 <- _______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                       let {x4 = Cons x198 x5};
                                                                                                                                                       return x4}]
______eval15555I x5 = Immature $ msum [do {let {x182 = Term.Empty};
                                let {x184 = Term.Empty};
                                (x185, x186) <- case x5 of
                                                {Cons y185 y186 -> return (y185, y186); _ -> mzero};
                                guard (x185 == x182);
                                let {x183 = x186};
                                x6 <- case x183 of
                                      {Cons y184 y6 -> do {guard (x184 == y184); return y6};
                                       _ -> mzero};
                                _____evalI x6;
                                return ()},
                            do {let {x187 = Wolf};
                                (x189, x190) <- case x5 of
                                                {Cons y189 y190 -> return (y189, y190); _ -> mzero};
                                guard (x189 == x187);
                                let {x188 = x190};
                                (x7, x8) <- case x188 of
                                            {Cons y7 y8 -> return (y7, y8); _ -> mzero};
                                ___stepEvalII x7 x8;
                                return ()},
                            do {let {x191 = Cabbage};
                                (x192, x9) <- case x5 of
                                              {Cons y192 y9 -> return (y192, y9); _ -> mzero};
                                guard (x192 == x191);
                                ______eval155555I x9;
                                return ()}]
______eval15555O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x182 = Term.Empty};
                                                                                                                                                        let {x184 = Term.Empty};
                                                                                                                                                        let {x185 = x182};
                                                                                                                                                        x6 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                        let {x183 = Cons x184 x6};
                                                                                                                                                        let {x186 = x183};
                                                                                                                                                        let {x5 = Cons x185 x186};
                                                                                                                                                        return x5},
                                                                                                                                                    do {let {x187 = Wolf};
                                                                                                                                                        let {x189 = x187};
                                                                                                                                                        (x190,
                                                                                                                                                         x188) <- do {x188 <- gen_______eval15555O_x188;
                                                                                                                                                                      return (x188,
                                                                                                                                                                              x188)};
                                                                                                                                                        let {x5 = Cons x189 x190};
                                                                                                                                                        (x7,
                                                                                                                                                         x8) <- case x188 of
                                                                                                                                                                {Cons y7
                                                                                                                                                                      y8 -> return (y7,
                                                                                                                                                                                    y8);
                                                                                                                                                                 _ -> mzero};
                                                                                                                                                        ___stepEvalII x7 x8;
                                                                                                                                                        return x5},
                                                                                                                                                    do {let {x191 = Cabbage};
                                                                                                                                                        let {x192 = x191};
                                                                                                                                                        x9 <- ______eval155555O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                        let {x5 = Cons x192 x9};
                                                                                                                                                        return x5}]
______eval155555I x9 = Immature $ msum [do {let {x193 = Cabbage};
                                 (x194, x10) <- case x9 of
                                                {Cons y194 y10 -> return (y194, y10); _ -> mzero};
                                 guard (x194 == x193);
                                 _____evalI x10;
                                 return ()},
                             do {let {x195 = Term.Empty};
                                 (x196, x10) <- case x9 of
                                                {Cons y196 y10 -> return (y196, y10); _ -> mzero};
                                 guard (x196 == x195);
                                 ______evalI x10;
                                 return ()}]
______eval155555O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x193 = Cabbage};
                                                                                                                                                         let {x194 = x193};
                                                                                                                                                         x10 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                         let {x9 = Cons x194 x10};
                                                                                                                                                         return x9},
                                                                                                                                                     do {let {x195 = Term.Empty};
                                                                                                                                                         let {x196 = x195};
                                                                                                                                                         x10 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                         let {x9 = Cons x196 x10};
                                                                                                                                                         return x9}]
_____evalI x0 = Immature $ msum [do {(x1, x2) <- case x0 of
                                      {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                          _____eval1II x1 x2;
                          return ()}]
_____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {(x1,
                                                                                                                                                   x2) <- _____eval1OO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                  let {x0 = Cons x1 x2};
                                                                                                                                                  return x0}]
_____eval1II x1 x2 = Immature $ msum [do {let {x155 = Term.Empty};
                               guard (x1 == Term.Empty);
                               (x156, x3) <- case x2 of
                                             {Cons y156 y3 -> return (y156, y3); _ -> mzero};
                               guard (x156 == x155);
                               _____evalI x3;
                               return ()},
                           do {guard (x1 == Wolf);
                               (x4, x5) <- case x2 of
                                           {Cons y4 y5 -> return (y4, y5); _ -> mzero};
                               ___stepEvalII x4 x5;
                               return ()},
                           do {_____eval15I x2; guard (x1 == Cabbage); return ()}]
_____eval1OO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x1 = Term.Empty};
                                                                                                                                                    let {x155 = Term.Empty};
                                                                                                                                                    let {x156 = x155};
                                                                                                                                                    x3 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                    let {x2 = Cons x156 x3};
                                                                                                                                                    return (x1,
                                                                                                                                                            x2)},
                                                                                                                                                do {let {x1 = Wolf};
                                                                                                                                                    (x4,
                                                                                                                                                     x5) <- ___stepEvalOO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                    let {x2 = Cons x4 x5};
                                                                                                                                                    return (x1,
                                                                                                                                                            x2)},
                                                                                                                                                do {let {x1 = Cabbage};
                                                                                                                                                    x2 <- _____eval15O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                    return (x1,
                                                                                                                                                            x2)}]
_____eval15I x2 = Immature $ msum [do {let {x157 = Cabbage};
                            (x158, x6) <- case x2 of
                                          {Cons y158 y6 -> return (y158, y6); _ -> mzero};
                            guard (x158 == x157);
                            _____evalI x6;
                            return ()},
                        do {let {x159 = Term.Empty};
                            (x160, x6) <- case x2 of
                                          {Cons y160 y6 -> return (y160, y6); _ -> mzero};
                            guard (x160 == x159);
                            ______evalI x6;
                            return ()}]
_____eval15O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x157 = Cabbage};
                                                                                                                                                    let {x158 = x157};
                                                                                                                                                    x6 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                    let {x2 = Cons x158 x6};
                                                                                                                                                    return x2},
                                                                                                                                                do {let {x159 = Term.Empty};
                                                                                                                                                    let {x160 = x159};
                                                                                                                                                    x6 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                    let {x2 = Cons x160 x6};
                                                                                                                                                    return x2}]
_____stepEvalII x0 x1 = Immature $ msum [do {_____stepEval1I x1;
                                  guard (x0 == Goat);
                                  return ()},
                              do {let {x411 = Term.Empty};
                                  guard (x0 == Term.Empty);
                                  (x412, x32) <- case x1 of
                                                 {Cons y412 y32 -> return (y412, y32); _ -> mzero};
                                  guard (x412 == x411);
                                  _________evalI x32;
                                  return ()}]
_____stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x0 = Goat};
x1 <- _____stepEval1O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
return (x0,
x1)},
do {let {x0 = Term.Empty};
let {x411 = Term.Empty};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          let {x412 = x411};
x32 <- _________evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x1 = Cons x412 x32};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          return (x0,
x1)}]
_____stepEval1I x1 = Immature $ msum [do {let {x330 = Term.Empty};
                               (x331, x2) <- case x1 of
                                             {Cons y331 y2 -> return (y331, y2); _ -> mzero};
                               guard (x331 == x330);
                               _____stepEval15I x2;
                               return ()},
                           do {let {x407 = Goat};
                               (x409, x410) <- case x1 of
                                               {Cons y409 y410 -> return (y409, y410); _ -> mzero};
                               guard (x409 == x407);
                               let {x408 = x410};
                               (x30, x31) <- case x408 of
                                             {Cons y30 y31 -> return (y30, y31); _ -> mzero};
                               _____stepEvalII x30 x31;
                               return ()}]
_____stepEval1O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x330 = Term.Empty};
let {x331 = x330};
x2 <- _____stepEval15O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x1 = Cons x331 x2};
return x1},
do {let {x407 = Goat};
let {x409 = x407};
x410,
x408) <- do {x408 <- gen______stepEval1O_x408;
return (x408,
x408)};
let {x1 = Cons x409 x410};
x30,
x31) <- case x408 of
{Cons y30
y31 -> return (y30,
y31);
mzero};
stepEvalII x30 x31;
return x1}]
_____stepEval15I x2 = Immature $ msum [do {let {x332 = Cabbage};
                                (x333, x3) <- case x2 of
                                              {Cons y333 y3 -> return (y333, y3); _ -> mzero};
                                guard (x333 == x332);
                                _____stepEval155I x3;
                                return ()},
                            do {let {x366 = Wolf};
                                (x367, x3) <- case x2 of
                                              {Cons y367 y3 -> return (y367, y3); _ -> mzero};
                                guard (x367 == x366);
                                _____stepEval156I x3;
                                return ()},
                            do {let {x405 = Term.Empty};
                                (x406, x3) <- case x2 of
                                              {Cons y406 y3 -> return (y406, y3); _ -> mzero};
                                guard (x406 == x405);
                                ________evalI x3;
                                return ()}]
_____stepEval15O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x332 = Cabbage};
let {x333 = x332};
x3 <- _____stepEval155O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x333 x3};
return x2},
do {let {x366 = Wolf};
let {x367 = x366};
x3 <- _____stepEval156O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen_____stepEval177O_x238 gen____stepEval1O_x167;
let {x2 = Cons x367 x3};
return x2},
do {let {x405 = Term.Empty};
let {x406 = x405};
x3 <- ________evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x406 x3};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           return x2}]
_____stepEval155I x3 = Immature $ msum [do {let {x334 = Goat};
                                 (x335, x4) <- case x3 of
                                               {Cons y335 y4 -> return (y335, y4); _ -> mzero};
                                 guard (x335 == x334);
                                 _____stepEval1556I x4;
                                 return ()},
                             do {let {x362 = Cabbage};
                                 (x364, x365) <- case x3 of
                                                 {Cons y364 y365 -> return (y364, y365);
                                                  _ -> mzero};
                                 guard (x364 == x362);
                                 let {x363 = x365};
                                 (x17, x18) <- case x363 of
                                               {Cons y17 y18 -> return (y17, y18); _ -> mzero};
                                 __stepEvalII x17 x18;
                                 return ()}]
_____stepEval155O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x334 = Goat};
let {x335 = x334};
x4 <- _____stepEval1556O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x3 = Cons x335 x4};
return x3},
do {let {x362 = Cabbage};
let {x364 = x362};
x365,
x363) <- do {x363 <- gen______stepEval155O_x363;
return (x363,
x363)};
let {x3 = Cons x364 x365};
x17,
x18) <- case x363 of
{Cons y17
y18 -> return (y17,
y18);
mzero};
stepEvalII x17 x18;
return x3}]
_____stepEval1556I x4 = Immature $ msum [do {let {x336 = Wolf};
                                  (x337, x5) <- case x4 of
                                                {Cons y337 y5 -> return (y337, y5); _ -> mzero};
                                  guard (x337 == x336);
                                  _____stepEval15566I x5;
                                  return ()},
                              do {let {x360 = Goat};
                                  (x361, x5) <- case x4 of
                                                {Cons y361 y5 -> return (y361, y5); _ -> mzero};
                                  guard (x361 == x360);
                                  ___evalI x5;
                                  return ()}]
_____stepEval1556O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x336 = Wolf};
let {x337 = x336};
x5 <- _____stepEval15566O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             let {x4 = Cons x337 x5};
return x4},
do {let {x360 = Goat};
let {x361 = x360};
x5 <- ___evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x4 = Cons x361 x5};
return x4}]
_____stepEval15566I x5 = Immature $ msum [do {let {x338 = Term.Empty};
                                   (x339, x6) <- case x5 of
                                                 {Cons y339 y6 -> return (y339, y6); _ -> mzero};
                                   guard (x339 == x338);
                                   _____stepEval155666I x6;
                                   return ()},
                               do {let {x346 = Wolf};
                                   (x347, x6) <- case x5 of
                                                 {Cons y347 y6 -> return (y347, y6); _ -> mzero};
                                   guard (x347 == x346);
                                   swapEvalI x6;
                                   return ()},
                               do {let {x348 = Cabbage};
                                   (x349, x6) <- case x5 of
                                                 {Cons y349 y6 -> return (y349, y6); _ -> mzero};
                                   guard (x349 == x348);
                                   _____stepEval155667I x6;
                                   return ()}]
_____stepEval15566O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x338 = Term.Empty};
let {x339 = x338};
x6 <- _____stepEval155666O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x5 = Cons x339 x6};
return x5},
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          do {let {x346 = Wolf};
let {x347 = x346};
x6 <- swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
let {x5 = Cons x347 x6};
return x5},
do {let {x348 = Cabbage};
let {x349 = x348};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              x6 <- _____stepEval155667O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x5 = Cons x349 x6};
return x5}]
_____stepEval155666I x6 = Immature $ msum [do {let {x340 = Goat};
                                    (x341, x7) <- case x6 of
                                                  {Cons y341 y7 -> return (y341, y7); _ -> mzero};
                                    guard (x341 == x340);
                                    _____stepEval1556667I x7;
                                    return ()},
                                do {let {x344 = Term.Empty};
                                    (x345, x7) <- case x6 of
                                                  {Cons y345 y7 -> return (y345, y7); _ -> mzero};
                                    guard (x345 == x344);
                                    __evalI x7;
                                    return ()}]
_____stepEval155666O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x340 = Goat};
let {x341 = x340};
x7 <- _____stepEval1556667O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x6 = Cons x341 x7};
return x6},
do {let {x344 = Term.Empty};
let {x345 = x344};
x7 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x6 = Cons x345 x7};
return x6}]
_____stepEval1556667I x7 = Immature $ msum [do {guard (x7 == Nil); return ()},
                                 do {(x8, x9) <- case x7 of
                                                 {Cons y8 y9 -> return (y8, y9); _ -> mzero};
                                     _____stepEval15566677II x8 x9;
                                     return ()}]
_____stepEval1556667O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x7 = Nil};
return x7},
do {(x8,
x9) <- _____stepEval15566677OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x7 = Cons x8 x9};
return x7}]
_____stepEval15566677II x8 x9 = Immature $ msum [do {let {x342 = Term.Empty};
                                          guard (x8 == Term.Empty);
                                          (x343, x10) <- case x9 of
                                                         {Cons y343 y10 -> return (y343, y10);
                                                          _ -> mzero};
                                          guard (x343 == x342);
                                          _evalI x10;
                                          return ()},
                                      do {guard (x8 == Goat);
                                          (x11, x12) <- case x9 of
                                                        {Cons y11 y12 -> return (y11, y12);
                                                         _ -> mzero};
                                          stepEvalII x11 x12;
                                          return ()}]
_____stepEval15566677OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x8 = Term.Empty};
let {x342 = Term.Empty};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  let {x343 = x342};
x10 <- _evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x9 = Cons x343 x10};
return (x8,
x9)},
do {let {x8 = Goat};
x11,
x12) <- stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x9 = Cons x11 x12};
return (x8,
x9)}]
_____stepEval155667I x6 = Immature $ msum [do {let {x350 = Cabbage};
                                    (x351, x13) <- case x6 of
                                                   {Cons y351 y13 -> return (y351, y13);
                                                    _ -> mzero};
                                    guard (x351 == x350);
                                    __evalI x13;
                                    return ()},
                                do {let {x352 = Goat};
                                    (x353, x13) <- case x6 of
                                                   {Cons y353 y13 -> return (y353, y13);
                                                    _ -> mzero};
                                    guard (x353 == x352);
                                    _____stepEval1556677I x13;
                                    return ()}]
_____stepEval155667O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x350 = Cabbage};
let {x351 = x350};
x13 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x6 = Cons x351 x13};
return x6},
do {let {x352 = Goat};
let {x353 = x352};
x13 <- _____stepEval1556677O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x6 = Cons x353 x13};
return x6}]
_____stepEval1556677I x13 = Immature $ msum [do {let {x354 = Goat};
                                      (x356, x357) <- case x13 of
                                                      {Cons y356 y357 -> return (y356, y357);
                                                       _ -> mzero};
                                      guard (x356 == x354);
                                      let {x355 = x357};
                                      (x14, x15) <- case x355 of
                                                    {Cons y14 y15 -> return (y14, y15); _ -> mzero};
                                      _stepEvalII x14 x15;
                                      return ()},
                                  do {let {x358 = Wolf};
                                      (x359, x16) <- case x13 of
                                                     {Cons y359 y16 -> return (y359, y16);
                                                      _ -> mzero};
                                      guard (x359 == x358);
                                      _swapEvalI x16;
                                      return ()}]
_____stepEval1556677O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x354 = Goat};
let {x356 = x354};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                (x357,
x355) <- do {x355 <- gen______stepEval1556677O_x355;
return (x355,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      x355)};
let {x13 = Cons x356 x357};
x14,
x15) <- case x355 of
{Cons y14
y15 -> return (y14,
y15);
mzero};
stepEvalII x14 x15;
return x13},
do {let {x358 = Wolf};
let {x359 = x358};
x16 <- _swapEvalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x13 = Cons x359 x16};
return x13}]
_____stepEval156I x3 = Immature $ msum [do {let {x368 = Term.Empty};
                                 (x369, x19) <- case x3 of
                                                {Cons y369 y19 -> return (y369, y19); _ -> mzero};
                                 guard (x369 == x368);
                                 ____evalI x19;
                                 return ()},
                             do {let {x370 = Wolf};
                                 (x371, x19) <- case x3 of
                                                {Cons y371 y19 -> return (y371, y19); _ -> mzero};
                                 guard (x371 == x370);
                                 _____stepEval1567I x19;
                                 return ()}]
_____stepEval156O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x368 = Term.Empty};
                                                                                                                                                                                                                    let {x369 = x368};
                                                                                                                                                                                                                    x19 <- ____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                    let {x3 = Cons x369 x19};
                                                                                                                                                                                                                    return x3},
                                                                                                                                                                                                                do {let {x370 = Wolf};
                                                                                                                                                                                                                    let {x371 = x370};
                                                                                                                                                                                                                    x19 <- _____stepEval1567O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                    let {x3 = Cons x371 x19};
                                                                                                                                                                                                                    return x3}]
_____stepEval1567I x19 = Immature $ msum [do {let {x372 = Cabbage};
                                   (x373, x20) <- case x19 of
                                                  {Cons y373 y20 -> return (y373, y20); _ -> mzero};
                                   guard (x373 == x372);
                                   _____stepEval15677I x20;
                                   return ()},
                               do {let {x397 = Wolf};
                                   (x398, x20) <- case x19 of
                                                  {Cons y398 y20 -> return (y398, y20); _ -> mzero};
                                   guard (x398 == x397);
                                   ______evalI x20;
                                   return ()},
                               do {let {x399 = Term.Empty};
                                   let {x401 = Term.Empty};
                                   (x403, x404) <- case x19 of
                                                   {Cons y403 y404 -> return (y403, y404);
                                                    _ -> mzero};
                                   guard (x403 == x399);
                                   let {x400 = x404};
                                   x402 <- case x400 of
                                           {Cons y401 y402 -> do {guard (x401 == y401);
                                                                  return y402};
                                            _ -> mzero};
                                   (x28, x29) <- case x402 of
                                                 {Cons y28 y29 -> return (y28, y29); _ -> mzero};
                                   ____stepEvalII x28 x29;
                                   return ()}]
_____stepEval1567O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x372 = Cabbage};
                                                                                                                                                                                                                     let {x373 = x372};
                                                                                                                                                                                                                     x20 <- _____stepEval15677O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1567777O_x384 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                     let {x19 = Cons x373 x20};
                                                                                                                                                                                                                     return x19},
                                                                                                                                                                                                                 do {let {x397 = Wolf};
                                                                                                                                                                                                                     let {x398 = x397};
                                                                                                                                                                                                                     x20 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                                     let {x19 = Cons x398 x20};
                                                                                                                                                                                                                     return x19},
                                                                                                                                                                                                                 do {let {x399 = Term.Empty};
                                                                                                                                                                                                                     let {x401 = Term.Empty};
                                                                                                                                                                                                                     let {x403 = x399};
                                                                                                                                                                                                                     (x404,
                                                                                                                                                                                                                      x400) <- do {x400 <- gen______stepEval1567O_x400;
                                                                                                                                                                                                                                   return (x400,
                                                                                                                                                                                                                                           x400)};
                                                                                                                                                                                                                     let {x19 = Cons x403 x404};
                                                                                                                                                                                                                     x402 <- case x400 of
                                                                                                                                                                                                                             {Cons y401
                                                                                                                                                                                                                                   y402 -> do {guard (x401 == y401);
                                                                                                                                                                                                                                               return y402};
                                                                                                                                                                                                                              _ -> mzero};
                                                                                                                                                                                                                     (x28,
                                                                                                                                                                                                                      x29) <- case x402 of
                                                                                                                                                                                                                              {Cons y28
                                                                                                                                                                                                                                    y29 -> return (y28,
                                                                                                                                                                                                                                                   y29);
                                                                                                                                                                                                                               _ -> mzero};
                                                                                                                                                                                                                     ____stepEvalII x28 x29;
                                                                                                                                                                                                                     return x19}]
_____stepEval15677I x20 = Immature $ msum [do {let {x374 = Term.Empty};
                                    (x375, x21) <- case x20 of
                                                   {Cons y375 y21 -> return (y375, y21);
                                                    _ -> mzero};
                                    guard (x375 == x374);
                                    _____stepEval156777I x21;
                                    return ()},
                                do {let {x395 = Cabbage};
                                    (x396, x21) <- case x20 of
                                                   {Cons y396 y21 -> return (y396, y21);
                                                    _ -> mzero};
                                    guard (x396 == x395);
                                    __swapEvalI x21;
                                    return ()}]
_____stepEval15677O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1567777O_x384 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x374 = Term.Empty};
                                                                                                                                                                                          let {x375 = x374};
                                                                                                                                                                                          x21 <- _____stepEval156777O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1567777O_x384 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                          let {x20 = Cons x375 x21};
                                                                                                                                                                                          return x20},
                                                                                                                                                                                      do {let {x395 = Cabbage};
                                                                                                                                                                                          let {x396 = x395};
                                                                                                                                                                                          x21 <- __swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                          let {x20 = Cons x396 x21};
                                                                                                                                                                                          return x20}]
_____stepEval156777I x21 = Immature $ msum [do {let {x376 = Wolf};
                                     (x377, x22) <- case x21 of
                                                    {Cons y377 y22 -> return (y377, y22);
                                                     _ -> mzero};
                                     guard (x377 == x376);
                                     _____stepEval1567777I x22;
                                     return ()},
                                 do {let {x393 = Term.Empty};
                                     (x394, x22) <- case x21 of
                                                    {Cons y394 y22 -> return (y394, y22);
                                                     _ -> mzero};
                                     guard (x394 == x393);
                                     _______evalI x22;
                                     return ()}]
_____stepEval156777O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1567777O_x384 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x376 = Wolf};
                                                                                                                                                                                           let {x377 = x376};
                                                                                                                                                                                           x22 <- _____stepEval1567777O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1567777O_x384 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                           let {x21 = Cons x377 x22};
                                                                                                                                                                                           return x21},
                                                                                                                                                                                       do {let {x393 = Term.Empty};
                                                                                                                                                                                           let {x394 = x393};
                                                                                                                                                                                           x22 <- _______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                           let {x21 = Cons x394 x22};
                                                                                                                                                                                           return x21}]
_____stepEval1567777I x22 = Immature $ msum [do {let {x378 = Term.Empty};
                                      let {x380 = Term.Empty};
                                      (x381, x382) <- case x22 of
                                                      {Cons y381 y382 -> return (y381, y382);
                                                       _ -> mzero};
                                      guard (x381 == x378);
                                      let {x379 = x382};
                                      x23 <- case x379 of
                                             {Cons y380 y23 -> do {guard (x380 == y380);
                                                                   return y23};
                                              _ -> mzero};
                                      _____evalI x23;
                                      return ()},
                                  do {let {x383 = Wolf};
                                      (x385, x386) <- case x22 of
                                                      {Cons y385 y386 -> return (y385, y386);
                                                       _ -> mzero};
                                      guard (x385 == x383);
                                      let {x384 = x386};
                                      (x24, x25) <- case x384 of
                                                    {Cons y24 y25 -> return (y24, y25); _ -> mzero};
                                      ___stepEvalII x24 x25;
                                      return ()},
                                  do {let {x387 = Cabbage};
                                      (x388, x26) <- case x22 of
                                                     {Cons y388 y26 -> return (y388, y26);
                                                      _ -> mzero};
                                      guard (x388 == x387);
                                      _____stepEval15677777I x26;
                                      return ()}]
_____stepEval1567777O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1567777O_x384 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x378 = Term.Empty};
                                                                                                                                                                                            let {x380 = Term.Empty};
                                                                                                                                                                                            let {x381 = x378};
                                                                                                                                                                                            x23 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                            let {x379 = Cons x380 x23};
                                                                                                                                                                                            let {x382 = x379};
                                                                                                                                                                                            let {x22 = Cons x381 x382};
                                                                                                                                                                                            return x22},
                                                                                                                                                                                        do {let {x383 = Wolf};
                                                                                                                                                                                            let {x385 = x383};
                                                                                                                                                                                            (x386,
                                                                                                                                                                                             x384) <- do {x384 <- gen______stepEval1567777O_x384;
                                                                                                                                                                                                          return (x384,
                                                                                                                                                                                                                  x384)};
                                                                                                                                                                                            let {x22 = Cons x385 x386};
                                                                                                                                                                                            (x24,
                                                                                                                                                                                             x25) <- case x384 of
                                                                                                                                                                                                     {Cons y24
                                                                                                                                                                                                           y25 -> return (y24,
                                                                                                                                                                                                                          y25);
                                                                                                                                                                                                      _ -> mzero};
                                                                                                                                                                                            ___stepEvalII x24 x25;
                                                                                                                                                                                            return x22},
                                                                                                                                                                                        do {let {x387 = Cabbage};
                                                                                                                                                                                            let {x388 = x387};
                                                                                                                                                                                            x26 <- _____stepEval15677777O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                            let {x22 = Cons x388 x26};
                                                                                                                                                                                            return x22}]
_____stepEval15677777I x26 = Immature $ msum [do {let {x389 = Cabbage};
                                       (x390, x27) <- case x26 of
                                                      {Cons y390 y27 -> return (y390, y27);
                                                       _ -> mzero};
                                       guard (x390 == x389);
                                       _____evalI x27;
                                       return ()},
                                   do {let {x391 = Term.Empty};
                                       (x392, x27) <- case x26 of
                                                      {Cons y392 y27 -> return (y392, y27);
                                                       _ -> mzero};
                                       guard (x392 == x391);
                                       ______evalI x27;
                                       return ()}]
_____stepEval15677777O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x389 = Cabbage};
                                                                                                                                                              let {x390 = x389};
                                                                                                                                                              x27 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                              let {x26 = Cons x390 x27};
                                                                                                                                                              return x26},
                                                                                                                                                          do {let {x391 = Term.Empty};
                                                                                                                                                              let {x392 = x391};
                                                                                                                                                              x27 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                              let {x26 = Cons x392 x27};
                                                                                                                                                              return x26}]
____evalI x0 = Immature $ msum [do {(x1, x2) <- case x0 of
                                     {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                         ____eval1II x1 x2;
                         return ()}]
____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {(x1,
                                                                                                                                                  x2) <- ____eval1OO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                 let {x0 = Cons x1 x2};
                                                                                                                                                 return x0}]
____eval1II x1 x2 = Immature $ msum [do {_____evalI x2;
                              guard (x1 == Cabbage);
                              return ()},
                          do {______evalI x2; guard (x1 == Term.Empty); return ()}]
____eval1OO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x1 = Cabbage};
                                                                                                                                                   x2 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                   return (x1,
                                                                                                                                                           x2)},
                                                                                                                                               do {let {x1 = Term.Empty};
                                                                                                                                                   x2 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                   return (x1,
                                                                                                                                                           x2)}]
____stepEvalII x0 x1 = Immature $ msum [do {____stepEval1I x1;
                                 guard (x0 == Cabbage);
                                 return ()},
                             do {______evalI x1; guard (x0 == Wolf); return ()},
                             do {let {x251 = Term.Empty};
                                 guard (x0 == Term.Empty);
                                 (x253, x254) <- case x1 of
                                                 {Cons y253 y254 -> return (y253, y254);
                                                  _ -> mzero};
                                 guard (x253 == x251);
                                 let {x252 = x254};
                                 (x9, x10) <- case x252 of
                                              {Cons y9 y10 -> return (y9, y10); _ -> mzero};
                                 ____stepEvalII x9 x10;
                                 return ()}]
____stepEval1I x1 = Immature $ msum [do {let {x228 = Term.Empty};
                              (x229, x2) <- case x1 of
                                            {Cons y229 y2 -> return (y229, y2); _ -> mzero};
                              guard (x229 == x228);
                              ____stepEval17I x2;
                              return ()},
                          do {let {x249 = Cabbage};
                              (x250, x2) <- case x1 of
                                            {Cons y250 y2 -> return (y250, y2); _ -> mzero};
                              guard (x250 == x249);
                              __swapEvalI x2;
                              return ()}]
____stepEval17I x2 = Immature $ msum [do {let {x230 = Wolf};
                               (x231, x3) <- case x2 of
                                             {Cons y231 y3 -> return (y231, y3); _ -> mzero};
                               guard (x231 == x230);
                               ____stepEval177I x3;
                               return ()},
                           do {let {x247 = Term.Empty};
                               (x248, x3) <- case x2 of
                                             {Cons y248 y3 -> return (y248, y3); _ -> mzero};
                               guard (x248 == x247);
                               _______evalI x3;
                               return ()}]
____stepEval177I x3 = Immature $ msum [do {let {x232 = Term.Empty};
                                let {x234 = Term.Empty};
                                (x235, x236) <- case x3 of
                                                {Cons y235 y236 -> return (y235, y236); _ -> mzero};
                                guard (x235 == x232);
                                let {x233 = x236};
                                x4 <- case x233 of
                                      {Cons y234 y4 -> do {guard (x234 == y234); return y4};
                                       _ -> mzero};
                                _____evalI x4;
                                return ()},
                            do {let {x237 = Wolf};
                                (x239, x240) <- case x3 of
                                                {Cons y239 y240 -> return (y239, y240); _ -> mzero};
                                guard (x239 == x237);
                                let {x238 = x240};
                                (x5, x6) <- case x238 of
                                            {Cons y5 y6 -> return (y5, y6); _ -> mzero};
                                ___stepEvalII x5 x6;
                                return ()},
                            do {let {x241 = Cabbage};
                                (x242, x7) <- case x3 of
                                              {Cons y242 y7 -> return (y242, y7); _ -> mzero};
                                guard (x242 == x241);
                                ____stepEval1777I x7;
                                return ()}]
____stepEval1777I x7 = Immature $ msum [do {let {x243 = Cabbage};
                                 (x244, x8) <- case x7 of
                                               {Cons y244 y8 -> return (y244, y8); _ -> mzero};
                                 guard (x244 == x243);
                                 _____evalI x8;
                                 return ()},
                             do {let {x245 = Term.Empty};
                                 (x246, x8) <- case x7 of
                                               {Cons y246 y8 -> return (y246, y8); _ -> mzero};
                                 guard (x246 == x245);
                                 ______evalI x8;
                                 return ()}]
___evalI x0 = Immature $ msum [do {(x1, x2) <- case x0 of
                                    {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                        ___eval0II x1 x2;
                        return ()}]
___evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {(x1,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    x2) <- ___eval0OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x0 = Cons x1 x2};
return x0}]
___eval0II x1 x2 = Immature $ msum [do {___eval07I x2;
                             guard (x1 == Goat);
                             return ()},
                         do {guard (x1 == Cabbage);
                             (x15, x16) <- case x2 of
                                           {Cons y15 y16 -> return (y15, y16); _ -> mzero};
                             __stepEvalII x15 x16;
                             return ()}]
___eval0OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x1 = Goat};
x2 <- ___eval07O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
return (x1,
x2)},
do {let {x1 = Cabbage};
x15,
x16) <- __stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x15 x16};
return (x1,
x2)}]
___eval07I x2 = Immature $ msum [do {let {x60 = Wolf};
                          (x61, x3) <- case x2 of
                                       {Cons y61 y3 -> return (y61, y3); _ -> mzero};
                          guard (x61 == x60);
                          ___eval077I x3;
                          return ()},
                      do {let {x84 = Goat};
                          (x85, x3) <- case x2 of
                                       {Cons y85 y3 -> return (y85, y3); _ -> mzero};
                          guard (x85 == x84);
                          ___evalI x3;
                          return ()}]
___eval07O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x60 = Wolf};
let {x61 = x60};
x3 <- ___eval077O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x61 x3};
return x2},
do {let {x84 = Goat};
let {x85 = x84};
x3 <- ___evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x85 x3};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     return x2}]
___eval077I x3 = Immature $ msum [do {let {x62 = Term.Empty};
                           (x63, x4) <- case x3 of
                                        {Cons y63 y4 -> return (y63, y4); _ -> mzero};
                           guard (x63 == x62);
                           ___eval0777I x4;
                           return ()},
                       do {let {x70 = Wolf};
                           (x71, x4) <- case x3 of
                                        {Cons y71 y4 -> return (y71, y4); _ -> mzero};
                           guard (x71 == x70);
                           swapEvalI x4;
                           return ()},
                       do {let {x72 = Cabbage};
                           (x73, x4) <- case x3 of
                                        {Cons y73 y4 -> return (y73, y4); _ -> mzero};
                           guard (x73 == x72);
                           ___eval0778I x4;
                           return ()}]
___eval077O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x62 = Term.Empty};
let {x63 = x62};
x4 <- ___eval0777O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x3 = Cons x63 x4};
return x3},
do {let {x70 = Wolf};
let {x71 = x70};
x4 <- swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
let {x3 = Cons x71 x4};
return x3},
do {let {x72 = Cabbage};
let {x73 = x72};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      x4 <- ___eval0778O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x3 = Cons x73 x4};
return x3}]
___eval0777I x4 = Immature $ msum [do {let {x64 = Goat};
                            (x65, x5) <- case x4 of
                                         {Cons y65 y5 -> return (y65, y5); _ -> mzero};
                            guard (x65 == x64);
                            ___eval07778I x5;
                            return ()},
                        do {let {x68 = Term.Empty};
                            (x69, x5) <- case x4 of
                                         {Cons y69 y5 -> return (y69, y5); _ -> mzero};
                            guard (x69 == x68);
                            __evalI x5;
                            return ()}]
___eval0777O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x64 = Goat};
let {x65 = x64};
x5 <- ___eval07778O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x4 = Cons x65 x5};
return x4},
do {let {x68 = Term.Empty};
let {x69 = x68};
x5 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x4 = Cons x69 x5};
return x4}]
___eval07778I x5 = Immature $ msum [do {guard (x5 == Nil); return ()},
                         do {(x6, x7) <- case x5 of
                                         {Cons y6 y7 -> return (y6, y7); _ -> mzero};
                             ___eval077788II x6 x7;
                             return ()}]
___eval07778O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x5 = Nil};
return x5},
do {(x6,
x7) <- ___eval077788OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x5 = Cons x6 x7};
return x5}]
___eval077788II x6 x7 = Immature $ msum [do {let {x66 = Term.Empty};
                                  guard (x6 == Term.Empty);
                                  (x67, x8) <- case x7 of
                                               {Cons y67 y8 -> return (y67, y8); _ -> mzero};
                                  guard (x67 == x66);
                                  _evalI x8;
                                  return ()},
                              do {guard (x6 == Goat);
                                  (x9, x10) <- case x7 of
                                               {Cons y9 y10 -> return (y9, y10); _ -> mzero};
                                  stepEvalII x9 x10;
                                  return ()}]
___eval077788OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x6 = Term.Empty};
let {x66 = Term.Empty};
let {x67 = x66};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          x8 <- _evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x7 = Cons x67 x8};
return (x6,
x7)},
do {let {x6 = Goat};
x9,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           x10) <- stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x7 = Cons x9 x10};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          return (x6,
x7)}]
___eval0778I x4 = Immature $ msum [do {let {x74 = Cabbage};
                            (x75, x11) <- case x4 of
                                          {Cons y75 y11 -> return (y75, y11); _ -> mzero};
                            guard (x75 == x74);
                            __evalI x11;
                            return ()},
                        do {let {x76 = Goat};
                            (x77, x11) <- case x4 of
                                          {Cons y77 y11 -> return (y77, y11); _ -> mzero};
                            guard (x77 == x76);
                            ___eval07788I x11;
                            return ()}]
___eval0778O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x74 = Cabbage};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       let {x75 = x74};
x11 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x4 = Cons x75 x11};
return x4},
do {let {x76 = Goat};
let {x77 = x76};
x11 <- ___eval07788O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x4 = Cons x77 x11};
return x4}]
___eval07788I x11 = Immature $ msum [do {let {x78 = Goat};
                              (x80, x81) <- case x11 of
                                            {Cons y80 y81 -> return (y80, y81); _ -> mzero};
                              guard (x80 == x78);
                              let {x79 = x81};
                              (x12, x13) <- case x79 of
                                            {Cons y12 y13 -> return (y12, y13); _ -> mzero};
                              _stepEvalII x12 x13;
                              return ()},
                          do {let {x82 = Wolf};
                              (x83, x14) <- case x11 of
                                            {Cons y83 y14 -> return (y83, y14); _ -> mzero};
                              guard (x83 == x82);
                              _swapEvalI x14;
                              return ()}]
___eval07788O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x78 = Goat};
let {x80 = x78};
x81,
x79) <- do {x79 <- gen____eval07788O_x79;
return (x79,
x79)};
let {x11 = Cons x80 x81};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        (x12,
x13) <- case x79 of
{Cons y12
y13 -> return (y12,
y13);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  _ -> mzero};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        _stepEvalII x12 x13;
return x11},
do {let {x82 = Wolf};
let {x83 = x82};
x14 <- _swapEvalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x11 = Cons x83 x14};
return x11}]
___stepEvalII x0 x1 = Immature $ msum [do {___stepEval1I x1;
                                guard (x0 == Wolf);
                                return ()},
                            do {_______evalI x1; guard (x0 == Term.Empty); return ()}]
___stepEvalOO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x0 = Wolf};
                                                                                                                                                     x1 <- ___stepEval1O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                     return (x0,
                                                                                                                                                             x1)},
                                                                                                                                                 do {let {x0 = Term.Empty};
                                                                                                                                                     x1 <- _______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                     return (x0,
                                                                                                                                                             x1)}]
___stepEval1I x1 = Immature $ msum [do {let {x161 = Term.Empty};
                             let {x163 = Term.Empty};
                             (x164, x165) <- case x1 of
                                             {Cons y164 y165 -> return (y164, y165); _ -> mzero};
                             guard (x164 == x161);
                             let {x162 = x165};
                             x2 <- case x162 of
                                   {Cons y163 y2 -> do {guard (x163 == y163); return y2};
                                    _ -> mzero};
                             _____evalI x2;
                             return ()},
                         do {let {x166 = Wolf};
                             (x168, x169) <- case x1 of
                                             {Cons y168 y169 -> return (y168, y169); _ -> mzero};
                             guard (x168 == x166);
                             let {x167 = x169};
                             (x3, x4) <- case x167 of
                                         {Cons y3 y4 -> return (y3, y4); _ -> mzero};
                             ___stepEvalII x3 x4;
                             return ()},
                         do {let {x170 = Cabbage};
                             (x171, x5) <- case x1 of
                                           {Cons y171 y5 -> return (y171, y5); _ -> mzero};
                             guard (x171 == x170);
                             ___stepEval18I x5;
                             return ()}]
___stepEval1O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x161 = Term.Empty};
                                                                                                                                                     let {x163 = Term.Empty};
                                                                                                                                                     let {x164 = x161};
                                                                                                                                                     x2 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                     let {x162 = Cons x163 x2};
                                                                                                                                                     let {x165 = x162};
                                                                                                                                                     let {x1 = Cons x164 x165};
                                                                                                                                                     return x1},
                                                                                                                                                 do {let {x166 = Wolf};
                                                                                                                                                     let {x168 = x166};
                                                                                                                                                     (x169,
                                                                                                                                                      x167) <- do {x167 <- gen____stepEval1O_x167;
                                                                                                                                                                   return (x167,
                                                                                                                                                                           x167)};
                                                                                                                                                     let {x1 = Cons x168 x169};
                                                                                                                                                     (x3,
                                                                                                                                                      x4) <- case x167 of
                                                                                                                                                             {Cons y3
                                                                                                                                                                   y4 -> return (y3,
                                                                                                                                                                                 y4);
                                                                                                                                                              _ -> mzero};
                                                                                                                                                     ___stepEvalII x3 x4;
                                                                                                                                                     return x1},
                                                                                                                                                 do {let {x170 = Cabbage};
                                                                                                                                                     let {x171 = x170};
                                                                                                                                                     x5 <- ___stepEval18O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                     let {x1 = Cons x171 x5};
                                                                                                                                                     return x1}]
___stepEval18I x5 = Immature $ msum [do {let {x172 = Cabbage};
                              (x173, x6) <- case x5 of
                                            {Cons y173 y6 -> return (y173, y6); _ -> mzero};
                              guard (x173 == x172);
                              _____evalI x6;
                              return ()},
                          do {let {x174 = Term.Empty};
                              (x175, x6) <- case x5 of
                                            {Cons y175 y6 -> return (y175, y6); _ -> mzero};
                              guard (x175 == x174);
                              ______evalI x6;
                              return ()}]
___stepEval18O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x172 = Cabbage};
                                                                                                                                                      let {x173 = x172};
                                                                                                                                                      x6 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      let {x5 = Cons x173 x6};
                                                                                                                                                      return x5},
                                                                                                                                                  do {let {x174 = Term.Empty};
                                                                                                                                                      let {x175 = x174};
                                                                                                                                                      x6 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      let {x5 = Cons x175 x6};
                                                                                                                                                      return x5}]
__evalI x0 = Immature $ msum [do {(x1, x2) <- case x0 of
                                   {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                       __eval0II x1 x2;
                       return ()}]
__evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {(x1,
x2) <- __eval0OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x0 = Cons x1 x2};
return x0}]
__eval0II x1 x2 = Immature $ msum [do {__eval08I x2;
                            guard (x1 == Term.Empty);
                            return ()},
                        do {swapEvalI x2; guard (x1 == Wolf); return ()},
                        do {__eval09I x2; guard (x1 == Cabbage); return ()}]
__eval0OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x1 = Term.Empty};
x2 <- __eval08O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
return (x1,
x2)},
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                do {let {x1 = Wolf};
x2 <- swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
return (x1,
x2)},
do {let {x1 = Cabbage};
x2 <- __eval09O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
return (x1,
x2)}]
__eval08I x2 = Immature $ msum [do {let {x38 = Goat};
                         (x39, x3) <- case x2 of
                                      {Cons y39 y3 -> return (y39, y3); _ -> mzero};
                         guard (x39 == x38);
                         __eval089I x3;
                         return ()},
                     do {let {x42 = Term.Empty};
                         (x43, x3) <- case x2 of
                                      {Cons y43 y3 -> return (y43, y3); _ -> mzero};
                         guard (x43 == x42);
                         __evalI x3;
                         return ()}]
__eval08O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x38 = Goat};
let {x39 = x38};
x3 <- __eval089O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x39 x3};
return x2},
do {let {x42 = Term.Empty};
let {x43 = x42};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    x3 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x43 x3};
return x2}]
__eval089I x3 = Immature $ msum [do {guard (x3 == Nil); return ()},
                      do {(x4, x5) <- case x3 of
                                      {Cons y4 y5 -> return (y4, y5); _ -> mzero};
                          __eval0899II x4 x5;
                          return ()}]
__eval089O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x3 = Nil};
return x3},
do {(x4,
x5) <- __eval0899OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x3 = Cons x4 x5};
return x3}]
__eval0899II x4 x5 = Immature $ msum [do {let {x40 = Term.Empty};
                               guard (x4 == Term.Empty);
                               (x41, x6) <- case x5 of
                                            {Cons y41 y6 -> return (y41, y6); _ -> mzero};
                               guard (x41 == x40);
                               _evalI x6;
                               return ()},
                           do {guard (x4 == Goat);
                               (x7, x8) <- case x5 of
                                           {Cons y7 y8 -> return (y7, y8); _ -> mzero};
                               stepEvalII x7 x8;
                               return ()}]
__eval0899OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x4 = Term.Empty};
let {x40 = Term.Empty};
let {x41 = x40};
x6 <- _evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x5 = Cons x41 x6};
return (x4,
x5)},
do {let {x4 = Goat};
x7,
x8) <- stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x5 = Cons x7 x8};
return (x4,
x5)}]
__eval09I x2 = Immature $ msum [do {let {x44 = Cabbage};
                         (x45, x9) <- case x2 of
                                      {Cons y45 y9 -> return (y45, y9); _ -> mzero};
                         guard (x45 == x44);
                         __evalI x9;
                         return ()},
                     do {let {x46 = Goat};
                         (x47, x9) <- case x2 of
                                      {Cons y47 y9 -> return (y47, y9); _ -> mzero};
                         guard (x47 == x46);
                         __eval099I x9;
                         return ()}]
__eval09O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x44 = Cabbage};
let {x45 = x44};
x9 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x45 x9};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    return x2},
do {let {x46 = Goat};
let {x47 = x46};
x9 <- __eval099O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x47 x9};
return x2}]
__eval099I x9 = Immature $ msum [do {let {x48 = Goat};
                          (x50, x51) <- case x9 of
                                        {Cons y50 y51 -> return (y50, y51); _ -> mzero};
                          guard (x50 == x48);
                          let {x49 = x51};
                          (x10, x11) <- case x49 of
                                        {Cons y10 y11 -> return (y10, y11); _ -> mzero};
                          _stepEvalII x10 x11;
                          return ()},
                      do {let {x52 = Wolf};
                          (x53, x12) <- case x9 of
                                        {Cons y53 y12 -> return (y53, y12); _ -> mzero};
                          guard (x53 == x52);
                          _swapEvalI x12;
                          return ()}]
__eval099O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x48 = Goat};
let {x50 = x48};
x51,
x49) <- do {x49 <- gen___eval099O_x49;
return (x49,
x49)};
let {x9 = Cons x50 x51};
x10,
x11) <- case x49 of
{Cons y10
y11 -> return (y10,
y11);
mzero};
stepEvalII x10 x11;
return x9},
do {let {x52 = Wolf};
let {x53 = x52};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     x12 <- _swapEvalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x9 = Cons x53 x12};
return x9}]
__stepEvalII x0 x1 = Immature $ msum [do {__stepEval0I x1;
                               guard (x0 == Cabbage);
                               return ()},
                           do {__stepEval1I x1; guard (x0 == Wolf); return ()},
                           do {________evalI x1; guard (x0 == Term.Empty); return ()}]
__stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x0 = Cabbage};
x1 <- __stepEval0O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
return (x0,
x1)},
do {let {x0 = Wolf};
x1 <- __stepEval1O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
return (x0,
x1)},
do {let {x0 = Term.Empty};
x1 <- ________evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
return (x0,
x1)}]
__stepEval0I x1 = Immature $ msum [do {let {x86 = Goat};
                            (x87, x2) <- case x1 of
                                         {Cons y87 y2 -> return (y87, y2); _ -> mzero};
                            guard (x87 == x86);
                            __stepEval09I x2;
                            return ()},
                        do {let {x114 = Cabbage};
                            (x116, x117) <- case x1 of
                                            {Cons y116 y117 -> return (y116, y117); _ -> mzero};
                            guard (x116 == x114);
                            let {x115 = x117};
                            (x15, x16) <- case x115 of
                                          {Cons y15 y16 -> return (y15, y16); _ -> mzero};
                            __stepEvalII x15 x16;
                            return ()}]
__stepEval0O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x86 = Goat};
let {x87 = x86};
x2 <- __stepEval09O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       let {x1 = Cons x87 x2};
return x1},
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   do {let {x114 = Cabbage};
let {x116 = x114};
x117,
x115) <- do {x115 <- gen___stepEval0O_x115;
return (x115,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             x115)};
let {x1 = Cons x116 x117};
x15,
x16) <- case x115 of
{Cons y15
y16 -> return (y15,
y16);
mzero};
stepEvalII x15 x16;
return x1}]
__stepEval09I x2 = Immature $ msum [do {let {x88 = Wolf};
                             (x89, x3) <- case x2 of
                                          {Cons y89 y3 -> return (y89, y3); _ -> mzero};
                             guard (x89 == x88);
                             __stepEval099I x3;
                             return ()},
                         do {let {x112 = Goat};
                             (x113, x3) <- case x2 of
                                           {Cons y113 y3 -> return (y113, y3); _ -> mzero};
                             guard (x113 == x112);
                             ___evalI x3;
                             return ()}]
__stepEval09O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x88 = Wolf};
let {x89 = x88};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        x3 <- __stepEval099O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x89 x3};
return x2},
do {let {x112 = Goat};
let {x113 = x112};
x3 <- ___evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x113 x3};
return x2}]
__stepEval099I x3 = Immature $ msum [do {let {x90 = Term.Empty};
                              (x91, x4) <- case x3 of
                                           {Cons y91 y4 -> return (y91, y4); _ -> mzero};
                              guard (x91 == x90);
                              __stepEval0999I x4;
                              return ()},
                          do {let {x98 = Wolf};
                              (x99, x4) <- case x3 of
                                           {Cons y99 y4 -> return (y99, y4); _ -> mzero};
                              guard (x99 == x98);
                              swapEvalI x4;
                              return ()},
                          do {let {x100 = Cabbage};
                              (x101, x4) <- case x3 of
                                            {Cons y101 y4 -> return (y101, y4); _ -> mzero};
                              guard (x101 == x100);
                              __stepEval09910I x4;
                              return ()}]
__stepEval099O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x90 = Term.Empty};
let {x91 = x90};
x4 <- __stepEval0999O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x3 = Cons x91 x4};
return x3},
do {let {x98 = Wolf};
let {x99 = x98};
x4 <- swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
let {x3 = Cons x99 x4};
return x3},
do {let {x100 = Cabbage};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         let {x101 = x100};
x4 <- __stepEval09910O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x3 = Cons x101 x4};
return x3}]
__stepEval09910I x4 = Immature $ msum [do {let {x102 = Cabbage};
                                (x103, x11) <- case x4 of
                                               {Cons y103 y11 -> return (y103, y11); _ -> mzero};
                                guard (x103 == x102);
                                __evalI x11;
                                return ()},
                            do {let {x104 = Goat};
                                (x105, x11) <- case x4 of
                                               {Cons y105 y11 -> return (y105, y11); _ -> mzero};
                                guard (x105 == x104);
                                __stepEval0991010I x11;
                                return ()}]
__stepEval09910O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x102 = Cabbage};
let {x103 = x102};
x11 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x4 = Cons x103 x11};
return x4},
do {let {x104 = Goat};
let {x105 = x104};
x11 <- __stepEval0991010O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x4 = Cons x105 x11};
return x4}]
__stepEval0991010I x11 = Immature $ msum [do {let {x106 = Goat};
                                   (x108, x109) <- case x11 of
                                                   {Cons y108 y109 -> return (y108, y109);
                                                    _ -> mzero};
                                   guard (x108 == x106);
                                   let {x107 = x109};
                                   (x12, x13) <- case x107 of
                                                 {Cons y12 y13 -> return (y12, y13); _ -> mzero};
                                   _stepEvalII x12 x13;
                                   return ()},
                               do {let {x110 = Wolf};
                                   (x111, x14) <- case x11 of
                                                  {Cons y111 y14 -> return (y111, y14); _ -> mzero};
                                   guard (x111 == x110);
                                   _swapEvalI x14;
                                   return ()}]
__stepEval0991010O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x106 = Goat};
let {x108 = x106};
x109,
x107) <- do {x107 <- gen___stepEval0991010O_x107;
return (x107,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   x107)};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             let {x11 = Cons x108 x109};
x12,
x13) <- case x107 of
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {Cons y12
y13 -> return (y12,
y13);
mzero};
stepEvalII x12 x13;
return x11},
do {let {x110 = Wolf};
let {x111 = x110};
x14 <- _swapEvalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x11 = Cons x111 x14};
return x11}]
__stepEval0999I x4 = Immature $ msum [do {let {x92 = Goat};
                               (x93, x5) <- case x4 of
                                            {Cons y93 y5 -> return (y93, y5); _ -> mzero};
                               guard (x93 == x92);
                               __stepEval099910I x5;
                               return ()},
                           do {let {x96 = Term.Empty};
                               (x97, x5) <- case x4 of
                                            {Cons y97 y5 -> return (y97, y5); _ -> mzero};
                               guard (x97 == x96);
                               __evalI x5;
                               return ()}]
__stepEval0999O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x92 = Goat};
let {x93 = x92};
x5 <- __stepEval099910O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x4 = Cons x93 x5};
return x4},
do {let {x96 = Term.Empty};
let {x97 = x96};
x5 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x4 = Cons x97 x5};
return x4}]
__stepEval099910I x5 = Immature $ msum [do {guard (x5 == Nil); return ()},
                             do {(x6, x7) <- case x5 of
                                             {Cons y6 y7 -> return (y6, y7); _ -> mzero};
                                 __stepEval09991010II x6 x7;
                                 return ()}]
__stepEval099910O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x5 = Nil};
return x5},
do {(x6,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             x7) <- __stepEval09991010OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x5 = Cons x6 x7};
return x5}]
__stepEval09991010II x6 x7 = Immature $ msum [do {let {x94 = Term.Empty};
                                       guard (x6 == Term.Empty);
                                       (x95, x8) <- case x7 of
                                                    {Cons y95 y8 -> return (y95, y8); _ -> mzero};
                                       guard (x95 == x94);
                                       _evalI x8;
                                       return ()},
                                   do {guard (x6 == Goat);
                                       (x9, x10) <- case x7 of
                                                    {Cons y9 y10 -> return (y9, y10); _ -> mzero};
                                       stepEvalII x9 x10;
                                       return ()}]
__stepEval09991010OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x6 = Term.Empty};
let {x94 = Term.Empty};
let {x95 = x94};
x8 <- _evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               let {x7 = Cons x95 x8};
return (x6,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       x7)},
do {let {x6 = Goat};
x9,
x10) <- stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x7 = Cons x9 x10};
return (x6,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       x7)}]
__stepEval1I x1 = Immature $ msum [do {let {x118 = Term.Empty};
                            (x119, x17) <- case x1 of
                                           {Cons y119 y17 -> return (y119, y17); _ -> mzero};
                            guard (x119 == x118);
                            ____evalI x17;
                            return ()},
                        do {let {x120 = Wolf};
                            (x121, x17) <- case x1 of
                                           {Cons y121 y17 -> return (y121, y17); _ -> mzero};
                            guard (x121 == x120);
                            __stepEval110I x17;
                            return ()}]
__stepEval1O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x118 = Term.Empty};
                                                                                                                                                                                                          let {x119 = x118};
                                                                                                                                                                                                          x17 <- ____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                          let {x1 = Cons x119 x17};
                                                                                                                                                                                                          return x1},
                                                                                                                                                                                                      do {let {x120 = Wolf};
                                                                                                                                                                                                          let {x121 = x120};
                                                                                                                                                                                                          x17 <- __stepEval110O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
                                                                                                                                                                                                          let {x1 = Cons x121 x17};
                                                                                                                                                                                                          return x1}]
__stepEval110I x17 = Immature $ msum [do {let {x122 = Cabbage};
                               (x123, x18) <- case x17 of
                                              {Cons y123 y18 -> return (y123, y18); _ -> mzero};
                               guard (x123 == x122);
                               __stepEval11010I x18;
                               return ()},
                           do {let {x147 = Wolf};
                               (x148, x18) <- case x17 of
                                              {Cons y148 y18 -> return (y148, y18); _ -> mzero};
                               guard (x148 == x147);
                               ______evalI x18;
                               return ()},
                           do {let {x149 = Term.Empty};
                               let {x151 = Term.Empty};
                               (x153, x154) <- case x17 of
                                               {Cons y153 y154 -> return (y153, y154); _ -> mzero};
                               guard (x153 == x149);
                               let {x150 = x154};
                               x152 <- case x150 of
                                       {Cons y151 y152 -> do {guard (x151 == y151); return y152};
                                        _ -> mzero};
                               (x26, x27) <- case x152 of
                                             {Cons y26 y27 -> return (y26, y27); _ -> mzero};
                               ____stepEvalII x26 x27;
                               return ()}]
__stepEval110O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x122 = Cabbage};
                                                                                                                                                                                                            let {x123 = x122};
                                                                                                                                                                                                            x18 <- __stepEval11010O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 gen___stepEval110101010O_x134;
                                                                                                                                                                                                            let {x17 = Cons x123 x18};
                                                                                                                                                                                                            return x17},
                                                                                                                                                                                                        do {let {x147 = Wolf};
                                                                                                                                                                                                            let {x148 = x147};
                                                                                                                                                                                                            x18 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                                            let {x17 = Cons x148 x18};
                                                                                                                                                                                                            return x17},
                                                                                                                                                                                                        do {let {x149 = Term.Empty};
                                                                                                                                                                                                            let {x151 = Term.Empty};
                                                                                                                                                                                                            let {x153 = x149};
                                                                                                                                                                                                            (x154,
                                                                                                                                                                                                             x150) <- do {x150 <- gen___stepEval110O_x150;
                                                                                                                                                                                                                          return (x150,
                                                                                                                                                                                                                                  x150)};
                                                                                                                                                                                                            let {x17 = Cons x153 x154};
                                                                                                                                                                                                            x152 <- case x150 of
                                                                                                                                                                                                                    {Cons y151
                                                                                                                                                                                                                          y152 -> do {guard (x151 == y151);
                                                                                                                                                                                                                                      return y152};
                                                                                                                                                                                                                     _ -> mzero};
                                                                                                                                                                                                            (x26,
                                                                                                                                                                                                             x27) <- case x152 of
                                                                                                                                                                                                                     {Cons y26
                                                                                                                                                                                                                           y27 -> return (y26,
                                                                                                                                                                                                                                          y27);
                                                                                                                                                                                                                      _ -> mzero};
                                                                                                                                                                                                            ____stepEvalII x26 x27;
                                                                                                                                                                                                            return x17}]
__stepEval11010I x18 = Immature $ msum [do {let {x124 = Term.Empty};
                                 (x125, x19) <- case x18 of
                                                {Cons y125 y19 -> return (y125, y19); _ -> mzero};
                                 guard (x125 == x124);
                                 __stepEval1101010I x19;
                                 return ()},
                             do {let {x145 = Cabbage};
                                 (x146, x19) <- case x18 of
                                                {Cons y146 y19 -> return (y146, y19); _ -> mzero};
                                 guard (x146 == x145);
                                 __swapEvalI x19;
                                 return ()}]
__stepEval11010O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 gen___stepEval110101010O_x134 = Immature $ msum [do {let {x124 = Term.Empty};
                                                                                                                                                                                      let {x125 = x124};
                                                                                                                                                                                      x19 <- __stepEval1101010O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 gen___stepEval110101010O_x134;
                                                                                                                                                                                      let {x18 = Cons x125 x19};
                                                                                                                                                                                      return x18},
                                                                                                                                                                                  do {let {x145 = Cabbage};
                                                                                                                                                                                      let {x146 = x145};
                                                                                                                                                                                      x19 <- __swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                      let {x18 = Cons x146 x19};
                                                                                                                                                                                      return x18}]
__stepEval1101010I x19 = Immature $ msum [do {let {x126 = Wolf};
                                   (x127, x20) <- case x19 of
                                                  {Cons y127 y20 -> return (y127, y20); _ -> mzero};
                                   guard (x127 == x126);
                                   __stepEval110101010I x20;
                                   return ()},
                               do {let {x143 = Term.Empty};
                                   (x144, x20) <- case x19 of
                                                  {Cons y144 y20 -> return (y144, y20); _ -> mzero};
                                   guard (x144 == x143);
                                   _______evalI x20;
                                   return ()}]
__stepEval1101010O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 gen___stepEval110101010O_x134 = Immature $ msum [do {let {x126 = Wolf};
                                                                                                                                                                                        let {x127 = x126};
                                                                                                                                                                                        x20 <- __stepEval110101010O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 gen___stepEval110101010O_x134;
                                                                                                                                                                                        let {x19 = Cons x127 x20};
                                                                                                                                                                                        return x19},
                                                                                                                                                                                    do {let {x143 = Term.Empty};
                                                                                                                                                                                        let {x144 = x143};
                                                                                                                                                                                        x20 <- _______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                        let {x19 = Cons x144 x20};
                                                                                                                                                                                        return x19}]
__stepEval110101010I x20 = Immature $ msum [do {let {x128 = Term.Empty};
                                     let {x130 = Term.Empty};
                                     (x131, x132) <- case x20 of
                                                     {Cons y131 y132 -> return (y131, y132);
                                                      _ -> mzero};
                                     guard (x131 == x128);
                                     let {x129 = x132};
                                     x21 <- case x129 of
                                            {Cons y130 y21 -> do {guard (x130 == y130); return y21};
                                             _ -> mzero};
                                     _____evalI x21;
                                     return ()},
                                 do {let {x133 = Wolf};
                                     (x135, x136) <- case x20 of
                                                     {Cons y135 y136 -> return (y135, y136);
                                                      _ -> mzero};
                                     guard (x135 == x133);
                                     let {x134 = x136};
                                     (x22, x23) <- case x134 of
                                                   {Cons y22 y23 -> return (y22, y23); _ -> mzero};
                                     ___stepEvalII x22 x23;
                                     return ()},
                                 do {let {x137 = Cabbage};
                                     (x138, x24) <- case x20 of
                                                    {Cons y138 y24 -> return (y138, y24);
                                                     _ -> mzero};
                                     guard (x138 == x137);
                                     __stepEval11010101010I x24;
                                     return ()}]
__stepEval110101010O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 gen___stepEval110101010O_x134 = Immature $ msum [do {let {x128 = Term.Empty};
                                                                                                                                                                                          let {x130 = Term.Empty};
                                                                                                                                                                                          let {x131 = x128};
                                                                                                                                                                                          x21 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                          let {x129 = Cons x130 x21};
                                                                                                                                                                                          let {x132 = x129};
                                                                                                                                                                                          let {x20 = Cons x131 x132};
                                                                                                                                                                                          return x20},
                                                                                                                                                                                      do {let {x133 = Wolf};
                                                                                                                                                                                          let {x135 = x133};
                                                                                                                                                                                          (x136,
                                                                                                                                                                                           x134) <- do {x134 <- gen___stepEval110101010O_x134;
                                                                                                                                                                                                        return (x134,
                                                                                                                                                                                                                x134)};
                                                                                                                                                                                          let {x20 = Cons x135 x136};
                                                                                                                                                                                          (x22,
                                                                                                                                                                                           x23) <- case x134 of
                                                                                                                                                                                                   {Cons y22
                                                                                                                                                                                                         y23 -> return (y22,
                                                                                                                                                                                                                        y23);
                                                                                                                                                                                                    _ -> mzero};
                                                                                                                                                                                          ___stepEvalII x22 x23;
                                                                                                                                                                                          return x20},
                                                                                                                                                                                      do {let {x137 = Cabbage};
                                                                                                                                                                                          let {x138 = x137};
                                                                                                                                                                                          x24 <- __stepEval11010101010O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                                                          let {x20 = Cons x138 x24};
                                                                                                                                                                                          return x20}]
__stepEval11010101010I x24 = Immature $ msum [do {let {x139 = Cabbage};
                                       (x140, x25) <- case x24 of
                                                      {Cons y140 y25 -> return (y140, y25);
                                                       _ -> mzero};
                                       guard (x140 == x139);
                                       _____evalI x25;
                                       return ()},
                                   do {let {x141 = Term.Empty};
                                       (x142, x25) <- case x24 of
                                                      {Cons y142 y25 -> return (y142, y25);
                                                       _ -> mzero};
                                       guard (x142 == x141);
                                       ______evalI x25;
                                       return ()}]
__stepEval11010101010O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x139 = Cabbage};
                                                                                                                                                              let {x140 = x139};
                                                                                                                                                              x25 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                              let {x24 = Cons x140 x25};
                                                                                                                                                              return x24},
                                                                                                                                                          do {let {x141 = Term.Empty};
                                                                                                                                                              let {x142 = x141};
                                                                                                                                                              x25 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                              let {x24 = Cons x142 x25};
                                                                                                                                                              return x24}]
__swapEvalI x0 = Immature $ msum [do {(x1, x2) <- case x0 of
                                       {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                           ____stepEvalII x1 x2;
                           return ()}]
__swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {(x1,
                                                                                                                                                    x2) <- ____stepEvalOO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                   let {x0 = Cons x1 x2};
                                                                                                                                                   return x0}]
____stepEvalOO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x0 = Cabbage};
                                                                                                                                                      x1 <- ____stepEval1O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      return (x0,
                                                                                                                                                              x1)},
                                                                                                                                                  do {let {x0 = Wolf};
                                                                                                                                                      x1 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      return (x0,
                                                                                                                                                              x1)},
                                                                                                                                                  do {let {x0 = Term.Empty};
                                                                                                                                                      let {x251 = Term.Empty};
                                                                                                                                                      let {x253 = x251};
                                                                                                                                                      (x9,
                                                                                                                                                       x10) <- ____stepEvalOO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      let {x252 = Cons x9 x10};
                                                                                                                                                      let {x254 = x252};
                                                                                                                                                      let {x1 = Cons x253 x254};
                                                                                                                                                      return (x0,
                                                                                                                                                              x1)}]
____stepEval1O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x228 = Term.Empty};
                                                                                                                                                      let {x229 = x228};
                                                                                                                                                      x2 <- ____stepEval17O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      let {x1 = Cons x229 x2};
                                                                                                                                                      return x1},
                                                                                                                                                  do {let {x249 = Cabbage};
                                                                                                                                                      let {x250 = x249};
                                                                                                                                                      x2 <- __swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                      let {x1 = Cons x250 x2};
                                                                                                                                                      return x1}]
____stepEval17O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x230 = Wolf};
                                                                                                                                                       let {x231 = x230};
                                                                                                                                                       x3 <- ____stepEval177O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                       let {x2 = Cons x231 x3};
                                                                                                                                                       return x2},
                                                                                                                                                   do {let {x247 = Term.Empty};
                                                                                                                                                       let {x248 = x247};
                                                                                                                                                       x3 <- _______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                       let {x2 = Cons x248 x3};
                                                                                                                                                       return x2}]
____stepEval177O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x232 = Term.Empty};
                                                                                                                                                        let {x234 = Term.Empty};
                                                                                                                                                        let {x235 = x232};
                                                                                                                                                        x4 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                        let {x233 = Cons x234 x4};
                                                                                                                                                        let {x236 = x233};
                                                                                                                                                        let {x3 = Cons x235 x236};
                                                                                                                                                        return x3},
                                                                                                                                                    do {let {x237 = Wolf};
                                                                                                                                                        let {x239 = x237};
                                                                                                                                                        (x240,
                                                                                                                                                         x238) <- do {x238 <- gen_____stepEval177O_x238;
                                                                                                                                                                      return (x238,
                                                                                                                                                                              x238)};
                                                                                                                                                        let {x3 = Cons x239 x240};
                                                                                                                                                        (x5,
                                                                                                                                                         x6) <- case x238 of
                                                                                                                                                                {Cons y5
                                                                                                                                                                      y6 -> return (y5,
                                                                                                                                                                                    y6);
                                                                                                                                                                 _ -> mzero};
                                                                                                                                                        ___stepEvalII x5 x6;
                                                                                                                                                        return x3},
                                                                                                                                                    do {let {x241 = Cabbage};
                                                                                                                                                        let {x242 = x241};
                                                                                                                                                        x7 <- ____stepEval1777O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                        let {x3 = Cons x242 x7};
                                                                                                                                                        return x3}]
____stepEval1777O gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {let {x243 = Cabbage};
                                                                                                                                                         let {x244 = x243};
                                                                                                                                                         x8 <- _____evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                         let {x7 = Cons x244 x8};
                                                                                                                                                         return x7},
                                                                                                                                                     do {let {x245 = Term.Empty};
                                                                                                                                                         let {x246 = x245};
                                                                                                                                                         x8 <- ______evalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                         let {x7 = Cons x246 x8};
                                                                                                                                                         return x7}]
_evalI x0 = Immature $ msum [do {guard (x0 == Nil); return ()},
                  do {(x1, x2) <- case x0 of
                                  {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                      _eval0II x1 x2;
                      return ()}]
_evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x0 = Nil};
return x0},
do {(x1,
x2) <- _eval0OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x0 = Cons x1 x2};
return x0}]
_eval0II x1 x2 = Immature $ msum [do {let {x34 = Term.Empty};
                           guard (x1 == Term.Empty);
                           (x35, x3) <- case x2 of
                                        {Cons y35 y3 -> return (y35, y3); _ -> mzero};
                           guard (x35 == x34);
                           _evalI x3;
                           return ()},
                       do {guard (x1 == Goat);
                           (x4, x5) <- case x2 of
                                       {Cons y4 y5 -> return (y4, y5); _ -> mzero};
                           stepEvalII x4 x5;
                           return ()}]
_eval0OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x1 = Term.Empty};
let {x34 = Term.Empty};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   let {x35 = x34};
x3 <- _evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x35 x3};
return (x1,
x2)},
do {let {x1 = Goat};
x4,
x5) <- stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x2 = Cons x4 x5};
return (x1,
x2)}]
_stepEvalII x0 x1 = Immature $ msum [do {__evalI x1;
                              guard (x0 == Cabbage);
                              return ()},
                          do {_stepEval0I x1; guard (x0 == Goat); return ()}]
_stepEval0I x1 = Immature $ msum [do {let {x54 = Goat};
                           (x56, x57) <- case x1 of
                                         {Cons y56 y57 -> return (y56, y57); _ -> mzero};
                           guard (x56 == x54);
                           let {x55 = x57};
                           (x2, x3) <- case x55 of
                                       {Cons y2 y3 -> return (y2, y3); _ -> mzero};
                           _stepEvalII x2 x3;
                           return ()},
                       do {let {x58 = Wolf};
                           (x59, x4) <- case x1 of
                                        {Cons y59 y4 -> return (y59, y4); _ -> mzero};
                           guard (x59 == x58);
                           _swapEvalI x4;
                           return ()}]
_swapEvalI x0 = Immature $ msum [do {(x1, x2) <- case x0 of
                                      {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                          __stepEvalII x1 x2;
                          return ()}]
_swapEvalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {(x1,
x2) <- __stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x0 = Cons x1 x2};
return x0}]
stepEvalII x0 x1 = Immature $ msum [do {stepEval0I x1;
                             guard (x0 == Goat);
                             return ()},
                         do {__evalI x1; guard (x0 == Term.Empty); return ()}]
stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x0 = Goat};
x1 <- stepEval0O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
return (x0,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             x1)},
do {let {x0 = Term.Empty};
x1 <- __evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     return (x0,
x1)}]
stepEval0I x1 = Immature $ msum [do {guard (x1 == Nil); return ()},
                      do {(x2, x3) <- case x1 of
                                      {Cons y2 y3 -> return (y2, y3); _ -> mzero};
                          stepEval010II x2 x3;
                          return ()}]
stepEval0O gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x1 = Nil};
return x1},
do {(x2,
x3) <- stepEval010OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x1 = Cons x2 x3};
return x1}]
stepEval010II x2 x3 = Immature $ msum [do {let {x36 = Term.Empty};
                                guard (x2 == Term.Empty);
                                (x37, x4) <- case x3 of
                                             {Cons y37 y4 -> return (y37, y4); _ -> mzero};
                                guard (x37 == x36);
                                _evalI x4;
                                return ()},
                            do {guard (x2 == Goat);
                                (x5, x6) <- case x3 of
                                            {Cons y5 y6 -> return (y5, y6); _ -> mzero};
                                stepEvalII x5 x6;
                                return ()}]
stepEval010OO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150 = Immature $ msum [do {let {x2 = Term.Empty};
let {x36 = Term.Empty};
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        let {x37 = x36};
x4 <- _evalO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x3 = Cons x37 x4};
return (x2,
x3)},
do {let {x2 = Goat};
x5,
x6) <- stepEvalOO gen__________eval11112233O_x438 gen__________eval1111O_x446 gen__________eval11123333O_x467 gen__________eval11123O_x483 gen__________eval11O_x491 gen_________eval1334455O_x278 gen_________eval133O_x286 gen_________eval1345555O_x307 gen_________eval1345O_x323 gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen______stepEval1556677O_x355 gen______stepEval155O_x363 gen______stepEval1567777O_x384 gen______stepEval1567O_x400 gen______stepEval1O_x408 gen_____stepEval177O_x238 gen____eval07788O_x79 gen____stepEval1O_x167 gen___eval099O_x49 gen___stepEval0991010O_x107 gen___stepEval0O_x115 gen___stepEval110101010O_x134 gen___stepEval110O_x150;
let {x3 = Cons x5 x6};
return (x2,
x3)}]
swapEvalI x0 = Immature $ msum [do {(x1, x2) <- case x0 of
                                     {Cons y1 y2 -> return (y1, y2); _ -> mzero};
                         ___stepEvalII x1 x2;
                         return ()}]
swapEvalO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167 = Immature $ msum [do {(x1,
                                                                                                                                                  x2) <- ___stepEvalOO gen________eval155O_x217 gen_______eval15555O_x188 gen_______eval15O_x204 gen_____stepEval177O_x238 gen____stepEval1O_x167;
                                                                                                                                                 let {x0 = Cons x1 x2};
                                                                                                                                                 return x0}]