eval(St, var(X), R) :- elem(X, St, R).
eval(St, conj(X,Y), true)  :- eval(St, X, true), eval(St, Y, true).
eval(St, conj(X,Y), false) :- eval(St, X, false).
eval(St, conj(X,Y), false) :- eval(St, Y, false).
eval(St, disj(X,Y), false) :- eval(St, X, false), eval(St, Y, false).
eval(St, disj(X,Y), true)  :- eval(St, X, true).
eval(St, disj(X,Y), true)  :- eval(St, Y, true).
eval(St, not(X), true) :- eval(St, X, false).
eval(St, not(X), false) :- eval(St, X, true).

elem(zero, [H|T], H).
elem(succ(N), [H|T], V) :- elem(N, T, V).



/* Specialised Predicates:
eval__1(A,B) :- eval(A,B,true).
elem__2(A,B,C,D) :- elem(A,[B|C],D).
eval__3(A,B) :- eval(A,B,false).
*/

eval(A,B,true) :-
  eval__1(A,B).
eval__1([A|B],var(C)) :-
  elem__2(C,A,B,true).
eval__1(A,conj(B,C)) :-
  eval__1(A,B),
  eval__1(A,C).
eval__1(A,disj(B,C)) :-
  eval__1(A,B).
eval__1(A,disj(B,C)) :-
  eval__1(A,C).
eval__1(A,not(B)) :-
  eval__3(A,B).

elem__2(zero,A,B,A).
elem__2(succ(A),B,[C|D],E) :-
  elem__2(A,C,D,E).

/* Лишний анфолдинг (с другой стороны, у нас тоже) */
eval__3([A|B],var(C)) :-
  elem__2(C,A,B,false).
eval__3(A,conj(B,C)) :-
  eval__3(A,B).
eval__3(A,conj(B,C)) :-
  eval__3(A,C).
eval__3(A,disj(B,C)) :-
  eval__3(A,B),
  eval__3(A,C).
eval__3(A,not(B)) :-
  eval__1(A,B).

/* Conjunctive fast */

/* Specialised program generated by ECCE 2.0 */
/* PD Goal: A */
/* Parameters: Abs:l InstCheck:a Msv:s NgSlv:g Part:e Prun:n Sel:t Whstl:f Raf:yesFar:yes Dce:yes Poly:y Dpu:yes ParAbs:yes Msvp:no Rrc:yes */
/* Transformation time: 20 ms */
/* Unfolding time: 20 ms */
/* Post-Processing time: 20 ms */

/* Specialised Predicates:
eval__1(A,B) :- eval(A,B,true).
elem__2(A,B,C,D) :- elem(A,[B|C],D).
eval__3(A,B) :- eval(A,B,false).
*/

eval(A,B,true) :-
  eval__1(A,B).
eval__1([A|B],var(C)) :-
  elem__2(C,A,B,true).
eval__1(A,conj(B,C)) :-
  eval__1(A,B),
  eval__1(A,C).
eval__1(A,disj(B,C)) :-
  eval__1(A,B).
eval__1(A,disj(B,C)) :-
  eval__1(A,C).
eval__1(A,not(B)) :-
  eval__3(A,B).
elem__2(zero,A,B,A).
elem__2(succ(A),B,[C|D],E) :-
  elem__2(A,C,D,E).
eval__3([A|B],var(C)) :-
  elem__2(C,A,B,false).
eval__3(A,conj(B,C)) :-
  eval__3(A,B).
eval__3(A,conj(B,C)) :-
  eval__3(A,C).
eval__3(A,disj(B,C)) :-
  eval__3(A,B),
  eval__3(A,C).
eval__3(A,not(B)) :-
  eval__1(A,B).

/* classic */

/* Specialised program generated by ECCE 2.0 */
/* PD Goal: A */
/* Parameters: Abs:c InstCheck:v Msv:s NgSlv:g Part:s Prun:x Sel:x Whstl:h Raf:yesFar:yes Dce:yes Poly:y Dpu:yes ParAbs:yes Msvp:no Rrc:yes */
/* Transformation time: 20 ms */
/* Unfolding time: 20 ms */
/* Post-Processing time: 20 ms */

/* Specialised Predicates:
eval__1(A,B) :- eval(A,B,true).
elem__2(A,B,C,D) :- elem(A,[B|C],D).
eval__3(A,B) :- eval(A,B,false).
*/

eval(A,B,true) :-
  eval__1(A,B).
eval__1([A|B],var(C)) :-
  elem__2(C,A,B,true).
eval__1(A,conj(B,C)) :-
  eval__1(A,B),
  eval__1(A,C).
eval__1(A,disj(B,C)) :-
  eval__1(A,B).
eval__1(A,disj(B,C)) :-
  eval__1(A,C).
eval__1(A,not(B)) :-
  eval__3(A,B).
elem__2(zero,A,B,A).
elem__2(succ(A),B,[C|D],E) :-
  elem__2(A,C,D,E).
eval__3([A|B],var(C)) :-
  elem__2(C,A,B,false).
eval__3(A,conj(B,C)) :-
  eval__3(A,B).
eval__3(A,conj(B,C)) :-
  eval__3(A,C).
eval__3(A,disj(B,C)) :-
  eval__3(A,B),
  eval__3(A,C).
eval__3(A,not(B)) :-
  eval__1(A,B).

/* Mixtus Style */


/* Specialised program generated by ECCE 2.0 */
/* PD Goal: A */
/* Parameters: Abs:l InstCheck:v Msv:s NgSlv:g Part:e Prun:x Sel:x Whstl:f Raf:yesFar:yes Dce:yes Poly:y Dpu:yes ParAbs:yes Msvp:no Rrc:yes */
/* Transformation time: 20 ms */
/* Unfolding time: 20 ms */
/* Post-Processing time: 20 ms */

/* Specialised Predicates:
eval__1(A,B) :- eval(A,B,true).
elem__2(A,B,C,D) :- elem(A,[B|C],D).
eval__3(A,B) :- eval(A,B,false).
*/

eval(A,B,true) :-
  eval__1(A,B).
eval__1([A|B],var(C)) :-
  elem__2(C,A,B,true).
eval__1(A,conj(B,C)) :-
  eval__1(A,B),
  eval__1(A,C).
eval__1(A,disj(B,C)) :-
  eval__1(A,B).
eval__1(A,disj(B,C)) :-
  eval__1(A,C).
eval__1(A,not(B)) :-
  eval__3(A,B).
elem__2(zero,A,B,A).
elem__2(succ(A),B,[C|D],E) :-
  elem__2(A,C,D,E).
eval__3([A|B],var(C)) :-
  elem__2(C,A,B,false).
eval__3(A,conj(B,C)) :-
  eval__3(A,B).
eval__3(A,conj(B,C)) :-
  eval__3(A,C).
eval__3(A,disj(B,C)) :-
  eval__3(A,B),
  eval__3(A,C).
eval__3(A,not(B)) :-
  eval__1(A,B).

/* classic fast */

/* Specialised program generated by ECCE 2.0 */
/* PD Goal: A */
/* Parameters: Abs:c InstCheck:v Msv:s NgSlv:g Part:s Prun:n Sel:o Whstl:h Raf:yesFar:yes Dce:yes Poly:y Dpu:yes ParAbs:yes Msvp:no Rrc:yes */
/* Transformation time: 20 ms */
/* Unfolding time: 0 ms */
/* Post-Processing time: 20 ms */

/* Specialised Predicates:
eval__1(A,B) :- eval(A,B,true).
elem__2(A,B,C,D) :- elem(A,[B|C],D).
eval__3(A,B) :- eval(A,B,false).
*/

eval(A,B,true) :-
  eval__1(A,B).
eval__1([A|B],var(C)) :-
  elem__2(C,A,B,true).
eval__1(A,conj(B,C)) :-
  eval__1(A,B),
  eval__1(A,C).
eval__1(A,disj(B,C)) :-
  eval__1(A,B).
eval__1(A,disj(B,C)) :-
  eval__1(A,C).
eval__1(A,not(B)) :-
  eval__3(A,B).
elem__2(zero,A,B,A).
elem__2(succ(A),B,[C|D],E) :-
  elem__2(A,C,D,E).
eval__3([A|B],var(C)) :-
  elem__2(C,A,B,false).
eval__3(A,conj(B,C)) :-
  eval__3(A,B).
eval__3(A,conj(B,C)) :-
  eval__3(A,C).
eval__3(A,disj(B,C)) :-
  eval__3(A,B),
  eval__3(A,C).
eval__3(A,not(B)) :-
  eval__1(A,B).

/* minimal */

/* Specialised program generated by ECCE 2.0 */
/* PD Goal: A */
/* Parameters: Abs:m InstCheck:a Msv:n NgSlv:n Part:s Prun:n Sel:s Whstl:m Raf:yesFar:yes Dce:yes Poly:y Dpu:yes ParAbs:yes Msvp:no Rrc:yes */
/* Transformation time: 20 ms */
/* Unfolding time: 20 ms */
/* Post-Processing time: 20 ms */

/* Specialised Predicates:
eval__1(A,B,C) :- eval(A,B,C).
elem__2(A,B,C) :- elem(A,B,C).
*/

eval(A,B,true) :-
  eval__1(A,B,true).
eval__1(A,var(B),C) :-
  elem__2(B,A,C).
eval__1(A,conj(B,C),true) :-
  eval__1(A,B,true),
  eval__1(A,C,true).
eval__1(A,conj(B,C),false) :-
  eval__1(A,B,false).
eval__1(A,conj(B,C),false) :-
  eval__1(A,C,false).
eval__1(A,disj(B,C),false) :-
  eval__1(A,B,false),
  eval__1(A,C,false).
eval__1(A,disj(B,C),true) :-
  eval__1(A,B,true).
eval__1(A,disj(B,C),true) :-
  eval__1(A,C,true).
eval__1(A,not(B),true) :-
  eval__1(A,B,false).
eval__1(A,not(B),false) :-
  eval__1(A,B,true).
elem__2(zero,[A|B],A).
elem__2(succ(A),[B|C],D) :-
  elem__2(A,C,D).

/* Termination */

/* Specialised program generated by ECCE 2.0 */
/* PD Goal: A */
/* Parameters: Abs:c InstCheck:v Msv:n NgSlv:g Part:s Prun:n Sel:j Whstl:h Raf:yesFar:yes Dce:yes Poly:y Dpu:no ParAbs:yes Msvp:no Rrc:no */
/* Transformation time: 0 ms */
/* Unfolding time: 0 ms */
/* Post-Processing time: 0 ms */

/* Specialised Predicates:
eval__1(A,B) :- eval(A,B,true).
eval__2(A,B) :- eval(A,B,false).
elem__3(A,B,C) :- elem(A,B,C).
*/

eval(A,B,true) :-
  eval__1(A,B).
eval__1([true|A],var(zero)).
eval__1([A|B],var(succ(C))) :-
  elem__3(C,B,true).
eval__1(A,conj(B,C)) :-
  eval__1(A,B),
  eval__1(A,C).
eval__1(A,disj(B,C)) :-
  eval__1(A,B).
eval__1(A,disj(B,C)) :-
  eval__1(A,C).
eval__1([false|A],not(var(zero))).
eval__1([A|B],not(var(succ(C)))) :-
  elem__3(C,B,false).
eval__1(A,not(conj(B,C))) :-
  eval__2(A,B).
eval__1(A,not(conj(B,C))) :-
  eval__2(A,C).
eval__1(A,not(disj(B,C))) :-
  eval__2(A,B),
  eval__2(A,C).
eval__1(A,not(not(B))) :-
  eval__1(A,B).
eval__2([false|A],var(zero)).
eval__2([A|B],var(succ(C))) :-
  elem__3(C,B,false).
eval__2(A,conj(B,C)) :-
  eval__2(A,B).
eval__2(A,conj(B,C)) :-
  eval__2(A,C).
eval__2(A,disj(B,C)) :-
  eval__2(A,B),
  eval__2(A,C).
eval__2(A,not(B)) :-
  eval__1(A,B).
elem__3(zero,[A|B],A).
elem__3(succ(A),[B|C],D) :-
  elem__3(A,C,D).