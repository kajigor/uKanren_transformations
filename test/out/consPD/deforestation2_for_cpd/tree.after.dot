digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<Or <BR/> rr(v<SUB>0</SUB>, 1 : 0 : C S [S 0] : 0 : [0]) <BR/>  [  ] >];
    1 [label=<Split <BR/> r(v<SUB>1</SUB>, 1 : 0 : C S [S 0] : 0 : [0]), r(v<SUB>0</SUB>, v<SUB>1</SUB>) <BR/>  [  ] >];
    2 [label=<Or <BR/> r(v<SUB>1</SUB>, 1 : 0 : C S [S 0] : 0 : [0]) <BR/>  [  ] >];
    3 [label=<Or <BR/> r(v<SUB>0</SUB>, v<SUB>1</SUB>) <BR/>  [  ] >];
    4 [label=<Or <BR/> r(v<SUB>3</SUB>, 0 : C S [S 0] : 0 : [0]) <BR/>  [ v<SUB>1</SUB> &rarr; v<SUB>2</SUB> : v<SUB>2</SUB> : v<SUB>3</SUB>, v<SUB>2</SUB> &rarr; 1, v<SUB>4</SUB> &rarr; 0 : C S [S 0] : 0 : [0] ] >];
    5 [label=<Or <BR/> neq(1, v<SUB>6</SUB>), r(v<SUB>6</SUB> : v<SUB>7</SUB>, 0 : C S [S 0] : 0 : [0]) <BR/>  [ v<SUB>1</SUB> &rarr; v<SUB>5</SUB> : v<SUB>6</SUB> : v<SUB>7</SUB>, v<SUB>5</SUB> &rarr; 1, v<SUB>8</SUB> &rarr; 0 : C S [S 0] : 0 : [0] ] >];
    6 [label=<Success <BR/>  [ v<SUB>3</SUB> &rarr; v<SUB>9</SUB> : v<SUB>9</SUB> : v<SUB>10</SUB>, v<SUB>9</SUB> &rarr; 0, v<SUB>10</SUB> &rarr; v<SUB>16</SUB> : v<SUB>16</SUB> : v<SUB>17</SUB>, v<SUB>11</SUB> &rarr; C S [S 0] : 0 : [0], v<SUB>16</SUB> &rarr; C S [S 0], v<SUB>17</SUB> &rarr; v<SUB>23</SUB> : v<SUB>23</SUB> : v<SUB>24</SUB>, v<SUB>18</SUB> &rarr; 0 : [0], v<SUB>23</SUB> &rarr; 0, v<SUB>24</SUB> &rarr; v<SUB>30</SUB> : v<SUB>30</SUB> : v<SUB>31</SUB>, v<SUB>25</SUB> &rarr; [0], v<SUB>30</SUB> &rarr; 0, v<SUB>31</SUB> &rarr; [], v<SUB>32</SUB> &rarr; [] ] >];
    7 [label=<Leaf <BR/> r(v<SUB>86</SUB>, C S [S 0] : 0 : [0]) <BR/>  [ v<SUB>6</SUB> &rarr; 0, v<SUB>7</SUB> &rarr; v<SUB>85</SUB> : v<SUB>86</SUB>, v<SUB>82</SUB> &rarr; 0, v<SUB>85</SUB> &rarr; 0, v<SUB>87</SUB> &rarr; C S [S 0] : 0 : [0] ]  <BR/> r(v<SUB>10</SUB>, C S [S 0] : 0 : [0])>];
    8 [label=<Success <BR/>  [ v<SUB>0</SUB> &rarr; [], v<SUB>1</SUB> &rarr; [] ] >];
    9 [label=<Leaf <BR/> r(v<SUB>97</SUB>, v<SUB>98</SUB>) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>96</SUB> : v<SUB>96</SUB> : v<SUB>97</SUB>, v<SUB>1</SUB> &rarr; v<SUB>96</SUB> : v<SUB>98</SUB> ]  <BR/> r(v<SUB>0</SUB>, v<SUB>1</SUB>)>];
    10 [label=<Split <BR/> neq(v<SUB>99</SUB>, v<SUB>100</SUB>), r(v<SUB>100</SUB> : v<SUB>101</SUB>, v<SUB>102</SUB>) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>99</SUB> : v<SUB>100</SUB> : v<SUB>101</SUB>, v<SUB>1</SUB> &rarr; v<SUB>99</SUB> : v<SUB>102</SUB> ] >];
    11 [label=<Or <BR/> neq(v<SUB>99</SUB>, v<SUB>100</SUB>) <BR/>  [  ] >];
    12 [label=<Leaf <BR/> r(v<SUB>100</SUB> : v<SUB>101</SUB>, v<SUB>102</SUB>) <BR/>  [  ]  <BR/> r(v<SUB>0</SUB>, v<SUB>1</SUB>)>];
    13 [label=<Success <BR/>  [ v<SUB>99</SUB> &rarr; 0, v<SUB>100</SUB> &rarr; (1 + v<SUB>103</SUB>) ] >];
    14 [label=<Success <BR/>  [ v<SUB>99</SUB> &rarr; (1 + v<SUB>104</SUB>), v<SUB>100</SUB> &rarr; 0 ] >];
    15 [label=<Leaf <BR/> neq(v<SUB>105</SUB>, v<SUB>106</SUB>) <BR/>  [ v<SUB>99</SUB> &rarr; (1 + v<SUB>105</SUB>), v<SUB>100</SUB> &rarr; (1 + v<SUB>106</SUB>) ]  <BR/> neq(v<SUB>99</SUB>, v<SUB>100</SUB>)>];
    0 -> 1 [label=""];
    1 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 4 [label=""];
    2 -> 5 [label=""];
    3 -> 8 [label=""];
    3 -> 9 [label=""];
    3 -> 10 [label=""];
    4 -> 6 [label=""];
    5 -> 7 [label=""];
    10 -> 11 [label=""];
    10 -> 12 [label=""];
    11 -> 13 [label=""];
    11 -> 14 [label=""];
    11 -> 15 [label=""];
}