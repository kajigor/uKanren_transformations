digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<Or <BR/> solve([C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]]) <BR/>  [  ] >];
    1 [label=<Or <BR/> solve_atom(C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]), solve([]) <BR/>  [ v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [] ] >];
    2 [label=<Or <BR/> solve_atom(C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]) <BR/>  [  ] >];
    3 [label=<Or <BR/> my_clause(C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>7</SUB>), solve(v<SUB>7</SUB>) <BR/>  [  ] >];
    4 [label=<Split <BR/> solve_atom(C App [v<SUB>8</SUB> v<SUB>9</SUB> v<SUB>12</SUB>]), solve([C App [v<SUB>12</SUB> v<SUB>10</SUB> S : 1 : 2 : [1]]]) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>8</SUB>, v<SUB>1</SUB> &rarr; v<SUB>9</SUB>, v<SUB>2</SUB> &rarr; v<SUB>10</SUB>, v<SUB>7</SUB> &rarr; C App [v<SUB>8</SUB> v<SUB>9</SUB> v<SUB>12</SUB>] : [C App [v<SUB>12</SUB> v<SUB>10</SUB> v<SUB>11</SUB>]], v<SUB>11</SUB> &rarr; S : 1 : 2 : [1], v<SUB>27</SUB> &rarr; C App [v<SUB>8</SUB> v<SUB>9</SUB> v<SUB>12</SUB>], v<SUB>28</SUB> &rarr; [C App [v<SUB>12</SUB> v<SUB>10</SUB> v<SUB>11</SUB>]] ] >];
    5 [label=<Leaf <BR/> solve_atom(C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]), solve([]) <BR/>  [ v<SUB>7</SUB> &rarr; [C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]], v<SUB>29</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>30</SUB> &rarr; [] ]  <BR/> solve_atom(C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]), solve([])>];
    6 [label=<Or <BR/> solve_atom(C App [v<SUB>8</SUB> v<SUB>9</SUB> v<SUB>12</SUB>]) <BR/>  [  ] >];
    7 [label=<Or <BR/> solve([C App [v<SUB>12</SUB> v<SUB>10</SUB> S : 1 : 2 : [1]]]) <BR/>  [  ] >];
    8 [label=<Or <BR/> my_clause(C App [v<SUB>8</SUB> v<SUB>9</SUB> v<SUB>12</SUB>], v<SUB>31</SUB>), solve(v<SUB>31</SUB>) <BR/>  [  ] >];
    9 [label=<Leaf <BR/> solve([C App [v<SUB>8</SUB> v<SUB>9</SUB> v<SUB>12</SUB>]]) <BR/>  [ v<SUB>31</SUB> &rarr; [C App [v<SUB>8</SUB> v<SUB>9</SUB> v<SUB>12</SUB>]] ]  <BR/> solve([C App [v<SUB>39</SUB> v<SUB>40</SUB> v<SUB>41</SUB>]])>];
    10 [label=<Or <BR/> solve([C App [v<SUB>39</SUB> v<SUB>40</SUB> v<SUB>41</SUB>]]) <BR/>  [ v<SUB>8</SUB> &rarr; v<SUB>38</SUB> : v<SUB>39</SUB>, v<SUB>9</SUB> &rarr; v<SUB>40</SUB>, v<SUB>12</SUB> &rarr; v<SUB>38</SUB> : v<SUB>41</SUB>, v<SUB>31</SUB> &rarr; [C App [v<SUB>39</SUB> v<SUB>40</SUB> v<SUB>41</SUB>]] ] >];
    11 [label=<Or <BR/> solve([]) <BR/>  [ v<SUB>8</SUB> &rarr; [], v<SUB>9</SUB> &rarr; v<SUB>37</SUB>, v<SUB>12</SUB> &rarr; v<SUB>37</SUB>, v<SUB>31</SUB> &rarr; [] ] >];
    12 [label=<Or <BR/> solve_atom(C App [v<SUB>39</SUB> v<SUB>40</SUB> v<SUB>41</SUB>]), solve([]) <BR/>  [ v<SUB>51</SUB> &rarr; C App [v<SUB>39</SUB> v<SUB>40</SUB> v<SUB>41</SUB>], v<SUB>52</SUB> &rarr; [] ] >];
    13 [label=<Leaf <BR/> my_clause(C App [v<SUB>39</SUB> v<SUB>40</SUB> v<SUB>41</SUB>], v<SUB>53</SUB>), solve(v<SUB>53</SUB>) <BR/>  [  ]  <BR/> my_clause(C App [v<SUB>8</SUB> v<SUB>9</SUB> v<SUB>12</SUB>], v<SUB>31</SUB>), solve(v<SUB>31</SUB>)>];
    14 [label=<Success <BR/>  [  ] >];
    15 [label=<Split <BR/> solve_atom(C App [v<SUB>12</SUB> v<SUB>10</SUB> S : 1 : 2 : [1]]), solve([]) <BR/>  [ v<SUB>51</SUB> &rarr; C App [v<SUB>12</SUB> v<SUB>10</SUB> S : 1 : 2 : [1]], v<SUB>52</SUB> &rarr; [] ] >];
    16 [label=<Or <BR/> solve_atom(C App [v<SUB>12</SUB> v<SUB>10</SUB> S : 1 : 2 : [1]]) <BR/>  [  ] >];
    17 [label=<Leaf <BR/> solve([]) <BR/>  [  ]  <BR/> solve([])>];
    18 [label=<Or <BR/> my_clause(C App [v<SUB>12</SUB> v<SUB>10</SUB> S : 1 : 2 : [1]], v<SUB>53</SUB>), solve(v<SUB>53</SUB>) <BR/>  [  ] >];
    19 [label=<Success <BR/>  [ v<SUB>10</SUB> &rarr; v<SUB>59</SUB>, v<SUB>12</SUB> &rarr; [], v<SUB>53</SUB> &rarr; [], v<SUB>59</SUB> &rarr; S : 1 : 2 : [1] ] >];
    20 [label=<Split <BR/> solve_atom(C App [v<SUB>61</SUB> v<SUB>62</SUB> 1 : 2 : [1]]), solve([]) <BR/>  [ v<SUB>10</SUB> &rarr; v<SUB>62</SUB>, v<SUB>12</SUB> &rarr; v<SUB>60</SUB> : v<SUB>61</SUB>, v<SUB>53</SUB> &rarr; [C App [v<SUB>61</SUB> v<SUB>62</SUB> v<SUB>63</SUB>]], v<SUB>60</SUB> &rarr; S, v<SUB>63</SUB> &rarr; 1 : 2 : [1], v<SUB>75</SUB> &rarr; C App [v<SUB>61</SUB> v<SUB>62</SUB> v<SUB>63</SUB>], v<SUB>76</SUB> &rarr; [] ] >];
    21 [label=<Split <BR/> solve_atom(C App [v<SUB>12</SUB> v<SUB>10</SUB> S : 1 : 2 : [1]]), solve([]) <BR/>  [ v<SUB>53</SUB> &rarr; [C App [v<SUB>12</SUB> v<SUB>10</SUB> S : 1 : 2 : [1]]], v<SUB>77</SUB> &rarr; C App [v<SUB>12</SUB> v<SUB>10</SUB> S : 1 : 2 : [1]], v<SUB>78</SUB> &rarr; [] ] >];
    22 [label=<Or <BR/> solve_atom(C App [v<SUB>61</SUB> v<SUB>62</SUB> 1 : 2 : [1]]) <BR/>  [  ] >];
    23 [label=<Leaf <BR/> solve([]) <BR/>  [  ]  <BR/> solve([])>];
    24 [label=<Or <BR/> my_clause(C App [v<SUB>61</SUB> v<SUB>62</SUB> 1 : 2 : [1]], v<SUB>79</SUB>), solve(v<SUB>79</SUB>) <BR/>  [  ] >];
    25 [label=<Success <BR/>  [ v<SUB>61</SUB> &rarr; [], v<SUB>62</SUB> &rarr; v<SUB>85</SUB>, v<SUB>79</SUB> &rarr; [], v<SUB>85</SUB> &rarr; 1 : 2 : [1] ] >];
    26 [label=<Split <BR/> solve_atom(C App [v<SUB>87</SUB> v<SUB>88</SUB> 2 : [1]]), solve([]) <BR/>  [ v<SUB>61</SUB> &rarr; v<SUB>86</SUB> : v<SUB>87</SUB>, v<SUB>62</SUB> &rarr; v<SUB>88</SUB>, v<SUB>79</SUB> &rarr; [C App [v<SUB>87</SUB> v<SUB>88</SUB> v<SUB>89</SUB>]], v<SUB>86</SUB> &rarr; 1, v<SUB>89</SUB> &rarr; 2 : [1], v<SUB>101</SUB> &rarr; C App [v<SUB>87</SUB> v<SUB>88</SUB> v<SUB>89</SUB>], v<SUB>102</SUB> &rarr; [] ] >];
    27 [label=<Split <BR/> solve_atom(C App [v<SUB>61</SUB> v<SUB>62</SUB> 1 : 2 : [1]]), solve([]) <BR/>  [ v<SUB>79</SUB> &rarr; [C App [v<SUB>61</SUB> v<SUB>62</SUB> 1 : 2 : [1]]], v<SUB>103</SUB> &rarr; C App [v<SUB>61</SUB> v<SUB>62</SUB> 1 : 2 : [1]], v<SUB>104</SUB> &rarr; [] ] >];
    28 [label=<Or <BR/> solve_atom(C App [v<SUB>87</SUB> v<SUB>88</SUB> 2 : [1]]) <BR/>  [  ] >];
    29 [label=<Leaf <BR/> solve([]) <BR/>  [  ]  <BR/> solve([])>];
    30 [label=<Or <BR/> my_clause(C App [v<SUB>87</SUB> v<SUB>88</SUB> 2 : [1]], v<SUB>105</SUB>), solve(v<SUB>105</SUB>) <BR/>  [  ] >];
    31 [label=<Success <BR/>  [ v<SUB>87</SUB> &rarr; [], v<SUB>88</SUB> &rarr; v<SUB>111</SUB>, v<SUB>105</SUB> &rarr; [], v<SUB>111</SUB> &rarr; 2 : [1] ] >];
    32 [label=<Split <BR/> solve_atom(C App [v<SUB>113</SUB> v<SUB>114</SUB> [1]]), solve([]) <BR/>  [ v<SUB>87</SUB> &rarr; v<SUB>112</SUB> : v<SUB>113</SUB>, v<SUB>88</SUB> &rarr; v<SUB>114</SUB>, v<SUB>105</SUB> &rarr; [C App [v<SUB>113</SUB> v<SUB>114</SUB> v<SUB>115</SUB>]], v<SUB>112</SUB> &rarr; 2, v<SUB>115</SUB> &rarr; [1], v<SUB>127</SUB> &rarr; C App [v<SUB>113</SUB> v<SUB>114</SUB> v<SUB>115</SUB>], v<SUB>128</SUB> &rarr; [] ] >];
    33 [label=<Split <BR/> solve_atom(C App [v<SUB>87</SUB> v<SUB>88</SUB> 2 : [1]]), solve([]) <BR/>  [ v<SUB>105</SUB> &rarr; [C App [v<SUB>87</SUB> v<SUB>88</SUB> 2 : [1]]], v<SUB>129</SUB> &rarr; C App [v<SUB>87</SUB> v<SUB>88</SUB> 2 : [1]], v<SUB>130</SUB> &rarr; [] ] >];
    34 [label=<Or <BR/> solve_atom(C App [v<SUB>113</SUB> v<SUB>114</SUB> [1]]) <BR/>  [  ] >];
    35 [label=<Leaf <BR/> solve([]) <BR/>  [  ]  <BR/> solve([])>];
    36 [label=<Or <BR/> my_clause(C App [v<SUB>113</SUB> v<SUB>114</SUB> [1]], v<SUB>131</SUB>), solve(v<SUB>131</SUB>) <BR/>  [  ] >];
    37 [label=<Success <BR/>  [ v<SUB>113</SUB> &rarr; [], v<SUB>114</SUB> &rarr; v<SUB>137</SUB>, v<SUB>131</SUB> &rarr; [], v<SUB>137</SUB> &rarr; [1] ] >];
    38 [label=<Split <BR/> solve_atom(C App [v<SUB>139</SUB> v<SUB>140</SUB> []]), solve([]) <BR/>  [ v<SUB>113</SUB> &rarr; v<SUB>138</SUB> : v<SUB>139</SUB>, v<SUB>114</SUB> &rarr; v<SUB>140</SUB>, v<SUB>131</SUB> &rarr; [C App [v<SUB>139</SUB> v<SUB>140</SUB> v<SUB>141</SUB>]], v<SUB>138</SUB> &rarr; 1, v<SUB>141</SUB> &rarr; [], v<SUB>153</SUB> &rarr; C App [v<SUB>139</SUB> v<SUB>140</SUB> v<SUB>141</SUB>], v<SUB>154</SUB> &rarr; [] ] >];
    39 [label=<Split <BR/> solve_atom(C App [v<SUB>113</SUB> v<SUB>114</SUB> [1]]), solve([]) <BR/>  [ v<SUB>131</SUB> &rarr; [C App [v<SUB>113</SUB> v<SUB>114</SUB> [1]]], v<SUB>155</SUB> &rarr; C App [v<SUB>113</SUB> v<SUB>114</SUB> [1]], v<SUB>156</SUB> &rarr; [] ] >];
    40 [label=<Or <BR/> solve_atom(C App [v<SUB>139</SUB> v<SUB>140</SUB> []]) <BR/>  [  ] >];
    41 [label=<Leaf <BR/> solve([]) <BR/>  [  ]  <BR/> solve([])>];
    42 [label=<Or <BR/> my_clause(C App [v<SUB>139</SUB> v<SUB>140</SUB> []], v<SUB>157</SUB>), solve(v<SUB>157</SUB>) <BR/>  [  ] >];
    43 [label=<Success <BR/>  [ v<SUB>139</SUB> &rarr; [], v<SUB>140</SUB> &rarr; v<SUB>163</SUB>, v<SUB>157</SUB> &rarr; [], v<SUB>163</SUB> &rarr; [] ] >];
    44 [label=<Split <BR/> solve_atom(C App [v<SUB>139</SUB> v<SUB>140</SUB> []]), solve([]) <BR/>  [ v<SUB>157</SUB> &rarr; [C App [v<SUB>139</SUB> v<SUB>140</SUB> []]], v<SUB>179</SUB> &rarr; C App [v<SUB>139</SUB> v<SUB>140</SUB> []], v<SUB>180</SUB> &rarr; [] ] >];
    45 [label=<Leaf <BR/> solve_atom(C App [v<SUB>139</SUB> v<SUB>140</SUB> []]) <BR/>  [  ]  <BR/> solve_atom(C App [v<SUB>139</SUB> v<SUB>140</SUB> []])>];
    46 [label=<Or <BR/> solve([]) <BR/>  [  ] >];
    47 [label=<Success <BR/>  [  ] >];
    48 [label=<Leaf <BR/> solve_atom(C App [v<SUB>113</SUB> v<SUB>114</SUB> [1]]) <BR/>  [  ]  <BR/> solve_atom(C App [v<SUB>113</SUB> v<SUB>114</SUB> [1]])>];
    49 [label=<Or <BR/> solve([]) <BR/>  [  ] >];
    50 [label=<Success <BR/>  [  ] >];
    51 [label=<Leaf <BR/> solve_atom(C App [v<SUB>87</SUB> v<SUB>88</SUB> 2 : [1]]) <BR/>  [  ]  <BR/> solve_atom(C App [v<SUB>87</SUB> v<SUB>88</SUB> 2 : [1]])>];
    52 [label=<Or <BR/> solve([]) <BR/>  [  ] >];
    53 [label=<Success <BR/>  [  ] >];
    54 [label=<Leaf <BR/> solve_atom(C App [v<SUB>61</SUB> v<SUB>62</SUB> 1 : 2 : [1]]) <BR/>  [  ]  <BR/> solve_atom(C App [v<SUB>61</SUB> v<SUB>62</SUB> 1 : 2 : [1]])>];
    55 [label=<Or <BR/> solve([]) <BR/>  [  ] >];
    56 [label=<Success <BR/>  [  ] >];
    57 [label=<Leaf <BR/> solve_atom(C App [v<SUB>12</SUB> v<SUB>10</SUB> S : 1 : 2 : [1]]) <BR/>  [  ]  <BR/> solve_atom(C App [v<SUB>12</SUB> v<SUB>10</SUB> S : 1 : 2 : [1]])>];
    58 [label=<Or <BR/> solve([]) <BR/>  [  ] >];
    59 [label=<Success <BR/>  [  ] >];
    0 -> 1 [label=""];
    1 -> 2 [label=""];
    2 -> 3 [label=""];
    3 -> 4 [label=""];
    3 -> 5 [label=""];
    4 -> 6 [label=""];
    4 -> 7 [label=""];
    6 -> 8 [label=""];
    7 -> 15 [label=""];
    8 -> 9 [label=""];
    8 -> 10 [label=""];
    8 -> 11 [label=""];
    10 -> 12 [label=""];
    11 -> 14 [label=""];
    12 -> 13 [label=""];
    15 -> 16 [label=""];
    15 -> 17 [label=""];
    16 -> 18 [label=""];
    18 -> 19 [label=""];
    18 -> 20 [label=""];
    18 -> 21 [label=""];
    20 -> 22 [label=""];
    20 -> 23 [label=""];
    21 -> 57 [label=""];
    21 -> 58 [label=""];
    22 -> 24 [label=""];
    24 -> 25 [label=""];
    24 -> 26 [label=""];
    24 -> 27 [label=""];
    26 -> 28 [label=""];
    26 -> 29 [label=""];
    27 -> 54 [label=""];
    27 -> 55 [label=""];
    28 -> 30 [label=""];
    30 -> 31 [label=""];
    30 -> 32 [label=""];
    30 -> 33 [label=""];
    32 -> 34 [label=""];
    32 -> 35 [label=""];
    33 -> 51 [label=""];
    33 -> 52 [label=""];
    34 -> 36 [label=""];
    36 -> 37 [label=""];
    36 -> 38 [label=""];
    36 -> 39 [label=""];
    38 -> 40 [label=""];
    38 -> 41 [label=""];
    39 -> 48 [label=""];
    39 -> 49 [label=""];
    40 -> 42 [label=""];
    42 -> 43 [label=""];
    42 -> 44 [label=""];
    44 -> 45 [label=""];
    44 -> 46 [label=""];
    46 -> 47 [label=""];
    49 -> 50 [label=""];
    52 -> 53 [label=""];
    55 -> 56 [label=""];
    58 -> 59 [label=""];
}