open GT
open OCanren
open OCanren.Std
open Helper

let topLevel x0 x1 = 
  let rec solve y0 y1 = (((y1 === (Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ Nat.zero)))))))))))))))))))))))))))))) &&& (y0 === (((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ Nat.zero)) % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((Nat.zero % ((List.nil ()))))))))))))))))))))) ||| ((y1 === (Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ Nat.zero)))))))))))))))))))))))))))))))) &&& (y0 === (((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ Nat.zero)) % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((Nat.zero % ((List.nil ()))))))))))))))))))))) ||| ((y1 === (Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ Nat.zero)))))))))))))))))))))))))))))))))))) &&& (y0 === (((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ Nat.zero)) % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((Nat.zero % ((List.nil ()))))))))))))))))))))) ||| ((y1 === (Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ Nat.zero)))))))))))))))))))))))))))))))))))))) &&& (y0 === (((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ Nat.zero)) % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((Nat.zero % ((List.nil ()))))))))))))))))))))) ||| ((y1 === (Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ Nat.zero)))))))))))))))))))))))))))))))) &&& (y0 === (((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ Nat.zero)) % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((Nat.zero % ((List.nil ()))))))))))))))))))))) ||| ((y1 === (Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ Nat.zero)))))))))))))))))))))))))))))))))) &&& (y0 === (((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ Nat.zero)) % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((Nat.zero % ((List.nil ()))))))))))))))))))))) ||| ((y1 === (Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ Nat.zero)))))))))))))))))))))))))))))))))))))) &&& (y0 === (((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ Nat.zero)) % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((Nat.zero % ((List.nil ()))))))))))))))))))))) ||| ((y1 === (Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ ((Nat.succ Nat.zero)))))))))))))))))))))))))))))))))))))))) &&& (y0 === (((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((((Nat.succ Nat.zero)) % ((Nat.zero % ((((Nat.succ Nat.zero)) % ((((Nat.succ ((Nat.succ Nat.zero)))) % ((Nat.zero % ((List.nil ())))))))))))))))))))))) 
  in  (solve x0 x1)
