digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> safe((C Quad [True True True False], C Quad [False False False True]))>];
    1 [label=<C <BR/> safe'(C Quad [True True True False]), safe'(C Quad [False False False True]) <BR/>  [ v<SUB>24</SUB> &rarr; C Quad [True True True False], v<SUB>25</SUB> &rarr; C Quad [False False False True] ] >];
    2 [label=<O <BR/> safe'(C Quad [True True True False])>];
    3 [label=<C <BR/> get(C Quad [True True True False], Man, True), safe'(C Quad [False False False True]) <BR/>  [ v<SUB>24</SUB> &rarr; C Quad [True True True False], v<SUB>25</SUB> &rarr; C Quad [False False False True] ] >];
    4 [label=<C <BR/> get(C Quad [True True True False], Goat, False), get(C Quad [True True True False], Man, False), safe'(C Quad [False False False True]) <BR/>  [ v<SUB>24</SUB> &rarr; C Quad [True True True False], v<SUB>25</SUB> &rarr; C Quad [False False False True] ] >];
    5 [label=<C <BR/> get(C Quad [True True True False], Cabbage, True), get(C Quad [True True True False], Wolf, True), get(C Quad [True True True False], Goat, True), get(C Quad [True True True False], Man, False), safe'(C Quad [False False False True]) <BR/>  [ v<SUB>24</SUB> &rarr; C Quad [True True True False], v<SUB>25</SUB> &rarr; C Quad [False False False True] ] >];
    6 [label=<C <BR/> get(C Quad [True True True False], Cabbage, False), get(C Quad [True True True False], Wolf, False), get(C Quad [True True True False], Goat, True), get(C Quad [True True True False], Man, False), safe'(C Quad [False False False True]) <BR/>  [ v<SUB>24</SUB> &rarr; C Quad [True True True False], v<SUB>25</SUB> &rarr; C Quad [False False False True] ] >];
    7 [label=<_|_>];
    8 [label=<_|_>];
    9 [label=<O <BR/> get(C Quad [True True True False], Cabbage, True)>];
    10 [label=<C <BR/> get(C Quad [True True True False], Wolf, True), get(C Quad [True True True False], Goat, True), get(C Quad [True True True False], Man, False), safe'(C Quad [False False False True]) <BR/>  [ v<SUB>24</SUB> &rarr; C Quad [True True True False], v<SUB>25</SUB> &rarr; C Quad [False False False True], v<SUB>26</SUB> &rarr; True, v<SUB>27</SUB> &rarr; True, v<SUB>28</SUB> &rarr; False ] >];
    11 [label=<O <BR/> get(C Quad [True True True False], Wolf, True)>];
    12 [label=<C <BR/> get(C Quad [True True True False], Goat, True), get(C Quad [True True True False], Man, False), safe'(C Quad [False False False True]) <BR/>  [ v<SUB>24</SUB> &rarr; C Quad [True True True False], v<SUB>25</SUB> &rarr; C Quad [False False False True], v<SUB>26</SUB> &rarr; True, v<SUB>27</SUB> &rarr; True, v<SUB>28</SUB> &rarr; False, v<SUB>29</SUB> &rarr; True, v<SUB>30</SUB> &rarr; True, v<SUB>31</SUB> &rarr; False ] >];
    13 [label=<O <BR/> get(C Quad [True True True False], Goat, True)>];
    14 [label=<C <BR/> get(C Quad [True True True False], Man, False), safe'(C Quad [False False False True]) <BR/>  [ v<SUB>24</SUB> &rarr; C Quad [True True True False], v<SUB>25</SUB> &rarr; C Quad [False False False True], v<SUB>26</SUB> &rarr; True, v<SUB>27</SUB> &rarr; True, v<SUB>28</SUB> &rarr; False, v<SUB>29</SUB> &rarr; True, v<SUB>30</SUB> &rarr; True, v<SUB>31</SUB> &rarr; False, v<SUB>32</SUB> &rarr; True, v<SUB>33</SUB> &rarr; True, v<SUB>34</SUB> &rarr; False ] >];
    15 [label=<O <BR/> get(C Quad [True True True False], Man, False)>];
    16 [label=<C <BR/> safe'(C Quad [False False False True]) <BR/>  [ v<SUB>24</SUB> &rarr; C Quad [True True True False], v<SUB>25</SUB> &rarr; C Quad [False False False True], v<SUB>26</SUB> &rarr; True, v<SUB>27</SUB> &rarr; True, v<SUB>28</SUB> &rarr; False, v<SUB>29</SUB> &rarr; True, v<SUB>30</SUB> &rarr; True, v<SUB>31</SUB> &rarr; False, v<SUB>32</SUB> &rarr; True, v<SUB>33</SUB> &rarr; True, v<SUB>34</SUB> &rarr; False, v<SUB>35</SUB> &rarr; True, v<SUB>36</SUB> &rarr; True, v<SUB>37</SUB> &rarr; True ] >];
    17 [label=<Leaf <BR/> safe'(C Quad [False False False True]) <BR/>  [ v<SUB>24</SUB> &rarr; C Quad [True True True False], v<SUB>25</SUB> &rarr; C Quad [False False False True], v<SUB>26</SUB> &rarr; True, v<SUB>27</SUB> &rarr; True, v<SUB>28</SUB> &rarr; False, v<SUB>29</SUB> &rarr; True, v<SUB>30</SUB> &rarr; True, v<SUB>31</SUB> &rarr; False, v<SUB>32</SUB> &rarr; True, v<SUB>33</SUB> &rarr; True, v<SUB>34</SUB> &rarr; False, v<SUB>35</SUB> &rarr; True, v<SUB>36</SUB> &rarr; True, v<SUB>37</SUB> &rarr; True ] >];
    18 [label=<_|_>];
    0 -> 1 [label=""];
    1 -> 2 [label=""];
    2 -> 3 [label=""];
    2 -> 4 [label=""];
    2 -> 5 [label=""];
    2 -> 6 [label=""];
    3 -> 7 [label=""];
    4 -> 8 [label=""];
    5 -> 9 [label=""];
    6 -> 18 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
    12 -> 13 [label=""];
    13 -> 14 [label=""];
    14 -> 15 [label=""];
    15 -> 16 [label=""];
    16 -> 17 [label=""];
}