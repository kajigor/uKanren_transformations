digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> step'(C Quad [False True True True], C Quad [False False False False], v<SUB>119</SUB>, v<SUB>114</SUB>)>];
    1 [label=<C <BR/> safe((C Quad [False True True False], C Quad [False False False True])), swap((C Quad [False True True False], C Quad [False False False True]), v<SUB>116</SUB>), eval(v<SUB>116</SUB>, v<SUB>115</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>114</SUB> &rarr; Empty, v<SUB>119</SUB> &rarr; (C Quad [v<SUB>126</SUB> v<SUB>127</SUB> v<SUB>128</SUB> False], C Quad [v<SUB>130</SUB> v<SUB>131</SUB> v<SUB>132</SUB> True]), v<SUB>126</SUB> &rarr; False, v<SUB>127</SUB> &rarr; True, v<SUB>128</SUB> &rarr; True, v<SUB>129</SUB> &rarr; True, v<SUB>130</SUB> &rarr; False, v<SUB>131</SUB> &rarr; False, v<SUB>132</SUB> &rarr; False, v<SUB>133</SUB> &rarr; False ] >];
    2 [label=<C <BR/> get(C Quad [False True True True], Goat, True), safe((C Quad [False True True False], C Quad [True False False True])), swap((C Quad [False True True False], C Quad [True False False True]), v<SUB>116</SUB>), eval(v<SUB>116</SUB>, v<SUB>115</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>114</SUB> &rarr; Goat, v<SUB>119</SUB> &rarr; (C Quad [False v<SUB>127</SUB> v<SUB>128</SUB> False], C Quad [True v<SUB>131</SUB> v<SUB>132</SUB> True]), v<SUB>126</SUB> &rarr; False, v<SUB>127</SUB> &rarr; True, v<SUB>128</SUB> &rarr; True, v<SUB>129</SUB> &rarr; True, v<SUB>130</SUB> &rarr; False, v<SUB>131</SUB> &rarr; False, v<SUB>132</SUB> &rarr; False, v<SUB>133</SUB> &rarr; False ] >];
    3 [label=<C <BR/> get(C Quad [False True True True], Wolf, True), safe((C Quad [False False True False], C Quad [False True False True])), swap((C Quad [False False True False], C Quad [False True False True]), v<SUB>116</SUB>), eval(v<SUB>116</SUB>, v<SUB>115</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>114</SUB> &rarr; Wolf, v<SUB>119</SUB> &rarr; (C Quad [v<SUB>126</SUB> False v<SUB>128</SUB> False], C Quad [v<SUB>131</SUB> True v<SUB>132</SUB> True]), v<SUB>126</SUB> &rarr; False, v<SUB>127</SUB> &rarr; True, v<SUB>128</SUB> &rarr; True, v<SUB>129</SUB> &rarr; True, v<SUB>130</SUB> &rarr; False, v<SUB>131</SUB> &rarr; False, v<SUB>132</SUB> &rarr; False, v<SUB>133</SUB> &rarr; False ] >];
    4 [label=<C <BR/> get(C Quad [False True True True], Cabbage, True), safe((C Quad [False True False False], C Quad [False False True True])), swap((C Quad [False True False False], C Quad [False False True True]), v<SUB>116</SUB>), eval(v<SUB>116</SUB>, v<SUB>115</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>114</SUB> &rarr; Cabbage, v<SUB>119</SUB> &rarr; (C Quad [v<SUB>126</SUB> v<SUB>127</SUB> False False], C Quad [v<SUB>130</SUB> v<SUB>131</SUB> True True]), v<SUB>126</SUB> &rarr; False, v<SUB>127</SUB> &rarr; True, v<SUB>128</SUB> &rarr; True, v<SUB>129</SUB> &rarr; True, v<SUB>130</SUB> &rarr; False, v<SUB>131</SUB> &rarr; False, v<SUB>132</SUB> &rarr; False, v<SUB>133</SUB> &rarr; False ] >];
    5 [label=<Leaf <BR/> safe((C Quad [False True True False], C Quad [False False False True])), swap((C Quad [False True True False], C Quad [False False False True]), v<SUB>116</SUB>), eval(v<SUB>116</SUB>, v<SUB>115</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>114</SUB> &rarr; Empty, v<SUB>119</SUB> &rarr; (C Quad [v<SUB>126</SUB> v<SUB>127</SUB> v<SUB>128</SUB> False], C Quad [v<SUB>130</SUB> v<SUB>131</SUB> v<SUB>132</SUB> True]), v<SUB>126</SUB> &rarr; False, v<SUB>127</SUB> &rarr; True, v<SUB>128</SUB> &rarr; True, v<SUB>129</SUB> &rarr; True, v<SUB>130</SUB> &rarr; False, v<SUB>131</SUB> &rarr; False, v<SUB>132</SUB> &rarr; False, v<SUB>133</SUB> &rarr; False ] >];
    6 [label=<_|_>];
    7 [label=<O <BR/> get(C Quad [False True True True], Wolf, True)>];
    8 [label=<C <BR/> safe((C Quad [False False True False], C Quad [False True False True])), swap((C Quad [False False True False], C Quad [False True False True]), v<SUB>116</SUB>), eval(v<SUB>116</SUB>, v<SUB>115</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>114</SUB> &rarr; Wolf, v<SUB>119</SUB> &rarr; (C Quad [v<SUB>126</SUB> False v<SUB>128</SUB> False], C Quad [v<SUB>131</SUB> True v<SUB>132</SUB> True]), v<SUB>126</SUB> &rarr; False, v<SUB>127</SUB> &rarr; True, v<SUB>128</SUB> &rarr; True, v<SUB>129</SUB> &rarr; True, v<SUB>130</SUB> &rarr; False, v<SUB>131</SUB> &rarr; False, v<SUB>132</SUB> &rarr; False, v<SUB>133</SUB> &rarr; False, v<SUB>134</SUB> &rarr; False, v<SUB>135</SUB> &rarr; True, v<SUB>136</SUB> &rarr; True ] >];
    9 [label=<Leaf <BR/> safe((C Quad [False False True False], C Quad [False True False True])), swap((C Quad [False False True False], C Quad [False True False True]), v<SUB>116</SUB>), eval(v<SUB>116</SUB>, v<SUB>115</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>114</SUB> &rarr; Wolf, v<SUB>119</SUB> &rarr; (C Quad [v<SUB>126</SUB> False v<SUB>128</SUB> False], C Quad [v<SUB>131</SUB> True v<SUB>132</SUB> True]), v<SUB>126</SUB> &rarr; False, v<SUB>127</SUB> &rarr; True, v<SUB>128</SUB> &rarr; True, v<SUB>129</SUB> &rarr; True, v<SUB>130</SUB> &rarr; False, v<SUB>131</SUB> &rarr; False, v<SUB>132</SUB> &rarr; False, v<SUB>133</SUB> &rarr; False, v<SUB>134</SUB> &rarr; False, v<SUB>135</SUB> &rarr; True, v<SUB>136</SUB> &rarr; True ] >];
    10 [label=<O <BR/> get(C Quad [False True True True], Cabbage, True)>];
    11 [label=<C <BR/> safe((C Quad [False True False False], C Quad [False False True True])), swap((C Quad [False True False False], C Quad [False False True True]), v<SUB>116</SUB>), eval(v<SUB>116</SUB>, v<SUB>115</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>114</SUB> &rarr; Cabbage, v<SUB>119</SUB> &rarr; (C Quad [v<SUB>126</SUB> v<SUB>127</SUB> False False], C Quad [v<SUB>130</SUB> v<SUB>131</SUB> True True]), v<SUB>126</SUB> &rarr; False, v<SUB>127</SUB> &rarr; True, v<SUB>128</SUB> &rarr; True, v<SUB>129</SUB> &rarr; True, v<SUB>130</SUB> &rarr; False, v<SUB>131</SUB> &rarr; False, v<SUB>132</SUB> &rarr; False, v<SUB>133</SUB> &rarr; False, v<SUB>134</SUB> &rarr; False, v<SUB>135</SUB> &rarr; True, v<SUB>136</SUB> &rarr; True ] >];
    12 [label=<Leaf <BR/> safe((C Quad [False True False False], C Quad [False False True True])), swap((C Quad [False True False False], C Quad [False False True True]), v<SUB>116</SUB>), eval(v<SUB>116</SUB>, v<SUB>115</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>114</SUB> &rarr; Cabbage, v<SUB>119</SUB> &rarr; (C Quad [v<SUB>126</SUB> v<SUB>127</SUB> False False], C Quad [v<SUB>130</SUB> v<SUB>131</SUB> True True]), v<SUB>126</SUB> &rarr; False, v<SUB>127</SUB> &rarr; True, v<SUB>128</SUB> &rarr; True, v<SUB>129</SUB> &rarr; True, v<SUB>130</SUB> &rarr; False, v<SUB>131</SUB> &rarr; False, v<SUB>132</SUB> &rarr; False, v<SUB>133</SUB> &rarr; False, v<SUB>134</SUB> &rarr; False, v<SUB>135</SUB> &rarr; True, v<SUB>136</SUB> &rarr; True ] >];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    0 -> 3 [label=""];
    0 -> 4 [label=""];
    1 -> 5 [label=""];
    2 -> 6 [label=""];
    3 -> 7 [label=""];
    4 -> 10 [label=""];
    7 -> 8 [label=""];
    8 -> 9 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
}