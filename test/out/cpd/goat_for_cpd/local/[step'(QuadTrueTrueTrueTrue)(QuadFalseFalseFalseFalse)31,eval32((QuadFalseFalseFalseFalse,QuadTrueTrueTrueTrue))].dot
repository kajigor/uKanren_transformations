digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> step'(C Quad [True True True True], C Quad [False False False False], v<SUB>3</SUB>, v<SUB>1</SUB>)>];
    1 [label=<C <BR/> safe((C Quad [True True True False], C Quad [False False False True])), eval((C Quad [True True True False], C Quad [False False False True]), v<SUB>2</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Empty, v<SUB>3</SUB> &rarr; (C Quad [v<SUB>13</SUB> v<SUB>14</SUB> v<SUB>15</SUB> False], C Quad [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB> True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False ] >];
    2 [label=<C <BR/> get(C Quad [True True True True], Goat, True), safe((C Quad [False True True False], C Quad [True False False True])), eval((C Quad [False True True False], C Quad [True False False True]), v<SUB>2</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Goat, v<SUB>3</SUB> &rarr; (C Quad [False v<SUB>14</SUB> v<SUB>15</SUB> False], C Quad [True v<SUB>18</SUB> v<SUB>19</SUB> True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False ] >];
    3 [label=<C <BR/> get(C Quad [True True True True], Wolf, True), safe((C Quad [True False True False], C Quad [False True False True])), eval((C Quad [True False True False], C Quad [False True False True]), v<SUB>2</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Wolf, v<SUB>3</SUB> &rarr; (C Quad [v<SUB>13</SUB> False v<SUB>15</SUB> False], C Quad [v<SUB>18</SUB> True v<SUB>19</SUB> True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False ] >];
    4 [label=<C <BR/> get(C Quad [True True True True], Cabbage, True), safe((C Quad [True True False False], C Quad [False False True True])), eval((C Quad [True True False False], C Quad [False False True True]), v<SUB>2</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Cabbage, v<SUB>3</SUB> &rarr; (C Quad [v<SUB>13</SUB> v<SUB>14</SUB> False False], C Quad [v<SUB>17</SUB> v<SUB>18</SUB> True True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False ] >];
    5 [label=<O <BR/> eval((C Quad [True True True False], C Quad [False False False True]), v<SUB>2</SUB>, (C Quad [False False False False], C Quad [True True True True]))>];
    6 [label=<C <BR/> safe((C Quad [True True True False], C Quad [False False False True])), step((C Quad [True True True False], C Quad [False False False True]), v<SUB>21</SUB>, v<SUB>23</SUB>), eval(v<SUB>23</SUB>, v<SUB>22</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Empty, v<SUB>2</SUB> &rarr; v<SUB>21</SUB> : v<SUB>22</SUB>, v<SUB>3</SUB> &rarr; (C Quad [v<SUB>13</SUB> v<SUB>14</SUB> v<SUB>15</SUB> False], C Quad [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB> True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False ] >];
    7 [label=<Leaf <BR/> safe((C Quad [True True True False], C Quad [False False False True])), step((C Quad [True True True False], C Quad [False False False True]), v<SUB>21</SUB>, v<SUB>23</SUB>), eval(v<SUB>23</SUB>, v<SUB>22</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Empty, v<SUB>2</SUB> &rarr; v<SUB>21</SUB> : v<SUB>22</SUB>, v<SUB>3</SUB> &rarr; (C Quad [v<SUB>13</SUB> v<SUB>14</SUB> v<SUB>15</SUB> False], C Quad [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB> True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False ] >];
    8 [label=<O <BR/> get(C Quad [True True True True], Goat, True)>];
    9 [label=<C <BR/> safe((C Quad [False True True False], C Quad [True False False True])), eval((C Quad [False True True False], C Quad [True False False True]), v<SUB>2</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Goat, v<SUB>3</SUB> &rarr; (C Quad [False v<SUB>14</SUB> v<SUB>15</SUB> False], C Quad [True v<SUB>18</SUB> v<SUB>19</SUB> True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False, v<SUB>21</SUB> &rarr; True, v<SUB>22</SUB> &rarr; True, v<SUB>23</SUB> &rarr; True ] >];
    10 [label=<O <BR/> eval((C Quad [False True True False], C Quad [True False False True]), v<SUB>2</SUB>, (C Quad [False False False False], C Quad [True True True True]))>];
    11 [label=<C <BR/> safe((C Quad [False True True False], C Quad [True False False True])), step((C Quad [False True True False], C Quad [True False False True]), v<SUB>24</SUB>, v<SUB>26</SUB>), eval(v<SUB>26</SUB>, v<SUB>25</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Goat, v<SUB>2</SUB> &rarr; v<SUB>24</SUB> : v<SUB>25</SUB>, v<SUB>3</SUB> &rarr; (C Quad [False v<SUB>14</SUB> v<SUB>15</SUB> False], C Quad [True v<SUB>18</SUB> v<SUB>19</SUB> True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False, v<SUB>21</SUB> &rarr; True, v<SUB>22</SUB> &rarr; True, v<SUB>23</SUB> &rarr; True ] >];
    12 [label=<Leaf <BR/> safe((C Quad [False True True False], C Quad [True False False True])), step((C Quad [False True True False], C Quad [True False False True]), v<SUB>24</SUB>, v<SUB>26</SUB>), eval(v<SUB>26</SUB>, v<SUB>25</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Goat, v<SUB>2</SUB> &rarr; v<SUB>24</SUB> : v<SUB>25</SUB>, v<SUB>3</SUB> &rarr; (C Quad [False v<SUB>14</SUB> v<SUB>15</SUB> False], C Quad [True v<SUB>18</SUB> v<SUB>19</SUB> True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False, v<SUB>21</SUB> &rarr; True, v<SUB>22</SUB> &rarr; True, v<SUB>23</SUB> &rarr; True ] >];
    13 [label=<O <BR/> get(C Quad [True True True True], Wolf, True)>];
    14 [label=<C <BR/> safe((C Quad [True False True False], C Quad [False True False True])), eval((C Quad [True False True False], C Quad [False True False True]), v<SUB>2</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Wolf, v<SUB>3</SUB> &rarr; (C Quad [v<SUB>13</SUB> False v<SUB>15</SUB> False], C Quad [v<SUB>18</SUB> True v<SUB>19</SUB> True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False, v<SUB>21</SUB> &rarr; True, v<SUB>22</SUB> &rarr; True, v<SUB>23</SUB> &rarr; True ] >];
    15 [label=<O <BR/> eval((C Quad [True False True False], C Quad [False True False True]), v<SUB>2</SUB>, (C Quad [False False False False], C Quad [True True True True]))>];
    16 [label=<C <BR/> safe((C Quad [True False True False], C Quad [False True False True])), step((C Quad [True False True False], C Quad [False True False True]), v<SUB>24</SUB>, v<SUB>26</SUB>), eval(v<SUB>26</SUB>, v<SUB>25</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Wolf, v<SUB>2</SUB> &rarr; v<SUB>24</SUB> : v<SUB>25</SUB>, v<SUB>3</SUB> &rarr; (C Quad [v<SUB>13</SUB> False v<SUB>15</SUB> False], C Quad [v<SUB>18</SUB> True v<SUB>19</SUB> True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False, v<SUB>21</SUB> &rarr; True, v<SUB>22</SUB> &rarr; True, v<SUB>23</SUB> &rarr; True ] >];
    17 [label=<Leaf <BR/> safe((C Quad [True False True False], C Quad [False True False True])), step((C Quad [True False True False], C Quad [False True False True]), v<SUB>24</SUB>, v<SUB>26</SUB>), eval(v<SUB>26</SUB>, v<SUB>25</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Wolf, v<SUB>2</SUB> &rarr; v<SUB>24</SUB> : v<SUB>25</SUB>, v<SUB>3</SUB> &rarr; (C Quad [v<SUB>13</SUB> False v<SUB>15</SUB> False], C Quad [v<SUB>18</SUB> True v<SUB>19</SUB> True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False, v<SUB>21</SUB> &rarr; True, v<SUB>22</SUB> &rarr; True, v<SUB>23</SUB> &rarr; True ] >];
    18 [label=<O <BR/> get(C Quad [True True True True], Cabbage, True)>];
    19 [label=<C <BR/> safe((C Quad [True True False False], C Quad [False False True True])), eval((C Quad [True True False False], C Quad [False False True True]), v<SUB>2</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Cabbage, v<SUB>3</SUB> &rarr; (C Quad [v<SUB>13</SUB> v<SUB>14</SUB> False False], C Quad [v<SUB>17</SUB> v<SUB>18</SUB> True True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False, v<SUB>21</SUB> &rarr; True, v<SUB>22</SUB> &rarr; True, v<SUB>23</SUB> &rarr; True ] >];
    20 [label=<O <BR/> eval((C Quad [True True False False], C Quad [False False True True]), v<SUB>2</SUB>, (C Quad [False False False False], C Quad [True True True True]))>];
    21 [label=<C <BR/> safe((C Quad [True True False False], C Quad [False False True True])), step((C Quad [True True False False], C Quad [False False True True]), v<SUB>24</SUB>, v<SUB>26</SUB>), eval(v<SUB>26</SUB>, v<SUB>25</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Cabbage, v<SUB>2</SUB> &rarr; v<SUB>24</SUB> : v<SUB>25</SUB>, v<SUB>3</SUB> &rarr; (C Quad [v<SUB>13</SUB> v<SUB>14</SUB> False False], C Quad [v<SUB>17</SUB> v<SUB>18</SUB> True True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False, v<SUB>21</SUB> &rarr; True, v<SUB>22</SUB> &rarr; True, v<SUB>23</SUB> &rarr; True ] >];
    22 [label=<Leaf <BR/> safe((C Quad [True True False False], C Quad [False False True True])), step((C Quad [True True False False], C Quad [False False True True]), v<SUB>24</SUB>, v<SUB>26</SUB>), eval(v<SUB>26</SUB>, v<SUB>25</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>1</SUB> &rarr; Cabbage, v<SUB>2</SUB> &rarr; v<SUB>24</SUB> : v<SUB>25</SUB>, v<SUB>3</SUB> &rarr; (C Quad [v<SUB>13</SUB> v<SUB>14</SUB> False False], C Quad [v<SUB>17</SUB> v<SUB>18</SUB> True True]), v<SUB>13</SUB> &rarr; True, v<SUB>14</SUB> &rarr; True, v<SUB>15</SUB> &rarr; True, v<SUB>16</SUB> &rarr; True, v<SUB>17</SUB> &rarr; False, v<SUB>18</SUB> &rarr; False, v<SUB>19</SUB> &rarr; False, v<SUB>20</SUB> &rarr; False, v<SUB>21</SUB> &rarr; True, v<SUB>22</SUB> &rarr; True, v<SUB>23</SUB> &rarr; True ] >];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    0 -> 3 [label=""];
    0 -> 4 [label=""];
    1 -> 5 [label=""];
    2 -> 8 [label=""];
    3 -> 13 [label=""];
    4 -> 18 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    8 -> 9 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
    13 -> 14 [label=""];
    14 -> 15 [label=""];
    15 -> 16 [label=""];
    16 -> 17 [label=""];
    18 -> 19 [label=""];
    19 -> 20 [label=""];
    20 -> 21 [label=""];
    21 -> 22 [label=""];
}