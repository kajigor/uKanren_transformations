digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> step((C Quad [False True False False], C Quad [False False True True]), v<SUB>159</SUB>, v<SUB>161</SUB>)>];
    1 [label=<C <BR/> get(C Quad [False True False False], Man, True), get(C Quad [False False True True], Man, False), step'(C Quad [False True False False], C Quad [False False True True], v<SUB>161</SUB>, v<SUB>159</SUB>), eval(v<SUB>161</SUB>, v<SUB>160</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>162</SUB> &rarr; C Quad [False True False False], v<SUB>163</SUB> &rarr; C Quad [False False True True] ] >];
    2 [label=<C <BR/> get(C Quad [False False True True], Man, True), get(C Quad [False True False False], Man, False), step'(C Quad [False False True True], C Quad [False True False False], v<SUB>164</SUB>, v<SUB>159</SUB>), swap(v<SUB>164</SUB>, v<SUB>161</SUB>), eval(v<SUB>161</SUB>, v<SUB>160</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>162</SUB> &rarr; C Quad [False True False False], v<SUB>163</SUB> &rarr; C Quad [False False True True] ] >];
    3 [label=<_|_>];
    4 [label=<O <BR/> get(C Quad [False False True True], Man, True)>];
    5 [label=<C <BR/> get(C Quad [False True False False], Man, False), step'(C Quad [False False True True], C Quad [False True False False], v<SUB>164</SUB>, v<SUB>159</SUB>), swap(v<SUB>164</SUB>, v<SUB>161</SUB>), eval(v<SUB>161</SUB>, v<SUB>160</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>162</SUB> &rarr; C Quad [False True False False], v<SUB>163</SUB> &rarr; C Quad [False False True True], v<SUB>165</SUB> &rarr; False, v<SUB>166</SUB> &rarr; False, v<SUB>167</SUB> &rarr; True ] >];
    6 [label=<O <BR/> get(C Quad [False True False False], Man, False)>];
    7 [label=<C <BR/> step'(C Quad [False False True True], C Quad [False True False False], v<SUB>164</SUB>, v<SUB>159</SUB>), swap(v<SUB>164</SUB>, v<SUB>161</SUB>), eval(v<SUB>161</SUB>, v<SUB>160</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>162</SUB> &rarr; C Quad [False True False False], v<SUB>163</SUB> &rarr; C Quad [False False True True], v<SUB>165</SUB> &rarr; False, v<SUB>166</SUB> &rarr; False, v<SUB>167</SUB> &rarr; True, v<SUB>168</SUB> &rarr; False, v<SUB>169</SUB> &rarr; True, v<SUB>170</SUB> &rarr; False ] >];
    8 [label=<Leaf <BR/> step'(C Quad [False False True True], C Quad [False True False False], v<SUB>164</SUB>, v<SUB>159</SUB>), swap(v<SUB>164</SUB>, v<SUB>161</SUB>), eval(v<SUB>161</SUB>, v<SUB>160</SUB>, (C Quad [False False False False], C Quad [True True True True])) <BR/>  [ v<SUB>162</SUB> &rarr; C Quad [False True False False], v<SUB>163</SUB> &rarr; C Quad [False False True True], v<SUB>165</SUB> &rarr; False, v<SUB>166</SUB> &rarr; False, v<SUB>167</SUB> &rarr; True, v<SUB>168</SUB> &rarr; False, v<SUB>169</SUB> &rarr; True, v<SUB>170</SUB> &rarr; False ] >];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 4 [label=""];
    4 -> 5 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    7 -> 8 [label=""];
}