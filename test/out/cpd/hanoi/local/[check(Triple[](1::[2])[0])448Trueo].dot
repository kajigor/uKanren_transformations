digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> check(C Triple [[] 1 : [2] [0]], v<SUB>448</SUB>, Trueo)>];
    1 [label=<C <BR/> get(One, C Triple [[] 1 : [2] [0]], v<SUB>480</SUB>), isNil(v<SUB>480</SUB>, Trueo), get(Two, C Triple [[] 1 : [2] [0]], v<SUB>481</SUB>), isNil(v<SUB>481</SUB>, Trueo) <BR/>  [ v<SUB>448</SUB> &rarr; [], v<SUB>478</SUB> &rarr; Trueo, v<SUB>479</SUB> &rarr; Trueo ] >];
    2 [label=<C <BR/> one_step(v<SUB>482</SUB>, C Triple [[] 1 : [2] [0]], v<SUB>484</SUB>), check(v<SUB>484</SUB>, v<SUB>483</SUB>, Trueo) <BR/>  [ v<SUB>448</SUB> &rarr; v<SUB>482</SUB> : v<SUB>483</SUB> ] >];
    3 [label=<O <BR/> get(One, C Triple [[] 1 : [2] [0]], v<SUB>480</SUB>)>];
    4 [label=<C <BR/> isNil([], Trueo), get(Two, C Triple [[] 1 : [2] [0]], v<SUB>481</SUB>), isNil(v<SUB>481</SUB>, Trueo) <BR/>  [ v<SUB>448</SUB> &rarr; [], v<SUB>478</SUB> &rarr; Trueo, v<SUB>479</SUB> &rarr; Trueo, v<SUB>480</SUB> &rarr; v<SUB>485</SUB>, v<SUB>485</SUB> &rarr; [], v<SUB>486</SUB> &rarr; 1 : [2], v<SUB>487</SUB> &rarr; [0] ] >];
    5 [label=<O <BR/> isNil([], Trueo)>];
    6 [label=<C <BR/> get(Two, C Triple [[] 1 : [2] [0]], v<SUB>481</SUB>), isNil(v<SUB>481</SUB>, Trueo) <BR/>  [ v<SUB>448</SUB> &rarr; [], v<SUB>478</SUB> &rarr; Trueo, v<SUB>479</SUB> &rarr; Trueo, v<SUB>480</SUB> &rarr; v<SUB>485</SUB>, v<SUB>485</SUB> &rarr; [], v<SUB>486</SUB> &rarr; 1 : [2], v<SUB>487</SUB> &rarr; [0] ] >];
    7 [label=<O <BR/> get(Two, C Triple [[] 1 : [2] [0]], v<SUB>481</SUB>)>];
    8 [label=<C <BR/> isNil(1 : [2], Trueo) <BR/>  [ v<SUB>448</SUB> &rarr; [], v<SUB>478</SUB> &rarr; Trueo, v<SUB>479</SUB> &rarr; Trueo, v<SUB>480</SUB> &rarr; v<SUB>485</SUB>, v<SUB>481</SUB> &rarr; v<SUB>491</SUB>, v<SUB>485</SUB> &rarr; [], v<SUB>486</SUB> &rarr; 1 : [2], v<SUB>487</SUB> &rarr; [0], v<SUB>490</SUB> &rarr; [], v<SUB>491</SUB> &rarr; 1 : [2], v<SUB>492</SUB> &rarr; [0] ] >];
    9 [label=<_|_>];
    10 [label=<Leaf <BR/> one_step(v<SUB>482</SUB>, C Triple [[] 1 : [2] [0]], v<SUB>484</SUB>), check(v<SUB>484</SUB>, v<SUB>483</SUB>, Trueo) <BR/>  [ v<SUB>448</SUB> &rarr; v<SUB>482</SUB> : v<SUB>483</SUB> ] >];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 10 [label=""];
    3 -> 4 [label=""];
    4 -> 5 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    7 -> 8 [label=""];
    8 -> 9 [label=""];
}