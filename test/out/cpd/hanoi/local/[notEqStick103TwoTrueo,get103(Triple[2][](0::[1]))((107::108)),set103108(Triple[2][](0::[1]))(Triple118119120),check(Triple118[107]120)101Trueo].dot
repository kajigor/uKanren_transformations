digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> notEqStick(v<SUB>103</SUB>, Two, Trueo)>];
    1 [label=<C <BR/> get(One, C Triple [[2] [] 0 : [1]], v<SUB>107</SUB> : v<SUB>108</SUB>), set(One, v<SUB>108</SUB>, C Triple [[2] [] 0 : [1]], C Triple [v<SUB>118</SUB> v<SUB>119</SUB> v<SUB>120</SUB>]), check(C Triple [v<SUB>118</SUB> [v<SUB>107</SUB>] v<SUB>120</SUB>], v<SUB>101</SUB>, Trueo) <BR/>  [ v<SUB>103</SUB> &rarr; One ] >];
    2 [label=<C <BR/> get(Thr, C Triple [[2] [] 0 : [1]], v<SUB>107</SUB> : v<SUB>108</SUB>), set(Thr, v<SUB>108</SUB>, C Triple [[2] [] 0 : [1]], C Triple [v<SUB>118</SUB> v<SUB>119</SUB> v<SUB>120</SUB>]), check(C Triple [v<SUB>118</SUB> [v<SUB>107</SUB>] v<SUB>120</SUB>], v<SUB>101</SUB>, Trueo) <BR/>  [ v<SUB>103</SUB> &rarr; Thr ] >];
    3 [label=<O <BR/> get(One, C Triple [[2] [] 0 : [1]], v<SUB>107</SUB> : v<SUB>108</SUB>)>];
    4 [label=<C <BR/> set(One, [], C Triple [[2] [] 0 : [1]], C Triple [v<SUB>118</SUB> v<SUB>119</SUB> v<SUB>120</SUB>]), check(C Triple [v<SUB>118</SUB> [2] v<SUB>120</SUB>], v<SUB>101</SUB>, Trueo) <BR/>  [ v<SUB>103</SUB> &rarr; One, v<SUB>107</SUB> &rarr; 2, v<SUB>108</SUB> &rarr; [], v<SUB>121</SUB> &rarr; [2], v<SUB>122</SUB> &rarr; [], v<SUB>123</SUB> &rarr; 0 : [1] ] >];
    5 [label=<O <BR/> set(One, [], C Triple [[2] [] 0 : [1]], C Triple [v<SUB>118</SUB> v<SUB>119</SUB> v<SUB>120</SUB>])>];
    6 [label=<C <BR/> check(C Triple [[] [2] 0 : [1]], v<SUB>101</SUB>, Trueo) <BR/>  [ v<SUB>103</SUB> &rarr; One, v<SUB>107</SUB> &rarr; 2, v<SUB>108</SUB> &rarr; [], v<SUB>118</SUB> &rarr; [], v<SUB>119</SUB> &rarr; v<SUB>125</SUB>, v<SUB>120</SUB> &rarr; v<SUB>126</SUB>, v<SUB>121</SUB> &rarr; [2], v<SUB>122</SUB> &rarr; [], v<SUB>123</SUB> &rarr; 0 : [1], v<SUB>124</SUB> &rarr; [2], v<SUB>125</SUB> &rarr; [], v<SUB>126</SUB> &rarr; 0 : [1] ] >];
    7 [label=<Leaf <BR/> check(C Triple [[] [2] 0 : [1]], v<SUB>101</SUB>, Trueo) <BR/>  [ v<SUB>103</SUB> &rarr; One, v<SUB>107</SUB> &rarr; 2, v<SUB>108</SUB> &rarr; [], v<SUB>118</SUB> &rarr; [], v<SUB>119</SUB> &rarr; v<SUB>125</SUB>, v<SUB>120</SUB> &rarr; v<SUB>126</SUB>, v<SUB>121</SUB> &rarr; [2], v<SUB>122</SUB> &rarr; [], v<SUB>123</SUB> &rarr; 0 : [1], v<SUB>124</SUB> &rarr; [2], v<SUB>125</SUB> &rarr; [], v<SUB>126</SUB> &rarr; 0 : [1] ] >];
    8 [label=<O <BR/> get(Thr, C Triple [[2] [] 0 : [1]], v<SUB>107</SUB> : v<SUB>108</SUB>)>];
    9 [label=<C <BR/> set(Thr, [1], C Triple [[2] [] 0 : [1]], C Triple [v<SUB>118</SUB> v<SUB>119</SUB> v<SUB>120</SUB>]), check(C Triple [v<SUB>118</SUB> [0] v<SUB>120</SUB>], v<SUB>101</SUB>, Trueo) <BR/>  [ v<SUB>103</SUB> &rarr; Thr, v<SUB>107</SUB> &rarr; 0, v<SUB>108</SUB> &rarr; [1], v<SUB>121</SUB> &rarr; [2], v<SUB>122</SUB> &rarr; [], v<SUB>123</SUB> &rarr; 0 : [1] ] >];
    10 [label=<O <BR/> set(Thr, [1], C Triple [[2] [] 0 : [1]], C Triple [v<SUB>118</SUB> v<SUB>119</SUB> v<SUB>120</SUB>])>];
    11 [label=<C <BR/> check(C Triple [[2] [0] [1]], v<SUB>101</SUB>, Trueo) <BR/>  [ v<SUB>103</SUB> &rarr; Thr, v<SUB>107</SUB> &rarr; 0, v<SUB>108</SUB> &rarr; [1], v<SUB>118</SUB> &rarr; v<SUB>124</SUB>, v<SUB>119</SUB> &rarr; v<SUB>125</SUB>, v<SUB>120</SUB> &rarr; [1], v<SUB>121</SUB> &rarr; [2], v<SUB>122</SUB> &rarr; [], v<SUB>123</SUB> &rarr; 0 : [1], v<SUB>124</SUB> &rarr; [2], v<SUB>125</SUB> &rarr; [], v<SUB>126</SUB> &rarr; 0 : [1] ] >];
    12 [label=<Leaf <BR/> check(C Triple [[2] [0] [1]], v<SUB>101</SUB>, Trueo) <BR/>  [ v<SUB>103</SUB> &rarr; Thr, v<SUB>107</SUB> &rarr; 0, v<SUB>108</SUB> &rarr; [1], v<SUB>118</SUB> &rarr; v<SUB>124</SUB>, v<SUB>119</SUB> &rarr; v<SUB>125</SUB>, v<SUB>120</SUB> &rarr; [1], v<SUB>121</SUB> &rarr; [2], v<SUB>122</SUB> &rarr; [], v<SUB>123</SUB> &rarr; 0 : [1], v<SUB>124</SUB> &rarr; [2], v<SUB>125</SUB> &rarr; [], v<SUB>126</SUB> &rarr; 0 : [1] ] >];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 8 [label=""];
    3 -> 4 [label=""];
    4 -> 5 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    8 -> 9 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
}