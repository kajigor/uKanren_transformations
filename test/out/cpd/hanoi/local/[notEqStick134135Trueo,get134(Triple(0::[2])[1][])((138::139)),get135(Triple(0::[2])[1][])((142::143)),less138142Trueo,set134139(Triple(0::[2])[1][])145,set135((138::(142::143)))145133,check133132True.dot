digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> notEqStick(v<SUB>134</SUB>, v<SUB>135</SUB>, Trueo)>];
    1 [label=<C <BR/> get(One, C Triple [0 : [2] [1] []], v<SUB>138</SUB> : v<SUB>139</SUB>), get(Two, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>), less(v<SUB>138</SUB>, v<SUB>142</SUB>, Trueo), set(One, v<SUB>139</SUB>, C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(Two, v<SUB>138</SUB> : v<SUB>142</SUB> : v<SUB>143</SUB>, v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; One, v<SUB>135</SUB> &rarr; Two ] >];
    2 [label=<C <BR/> get(One, C Triple [0 : [2] [1] []], v<SUB>138</SUB> : v<SUB>139</SUB>), get(Thr, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>), less(v<SUB>138</SUB>, v<SUB>142</SUB>, Trueo), set(One, v<SUB>139</SUB>, C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(Thr, v<SUB>138</SUB> : v<SUB>142</SUB> : v<SUB>143</SUB>, v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; One, v<SUB>135</SUB> &rarr; Thr ] >];
    3 [label=<C <BR/> get(Two, C Triple [0 : [2] [1] []], v<SUB>138</SUB> : v<SUB>139</SUB>), get(One, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>), less(v<SUB>138</SUB>, v<SUB>142</SUB>, Trueo), set(Two, v<SUB>139</SUB>, C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(One, v<SUB>138</SUB> : v<SUB>142</SUB> : v<SUB>143</SUB>, v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; Two, v<SUB>135</SUB> &rarr; One ] >];
    4 [label=<C <BR/> get(Two, C Triple [0 : [2] [1] []], v<SUB>138</SUB> : v<SUB>139</SUB>), get(Thr, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>), less(v<SUB>138</SUB>, v<SUB>142</SUB>, Trueo), set(Two, v<SUB>139</SUB>, C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(Thr, v<SUB>138</SUB> : v<SUB>142</SUB> : v<SUB>143</SUB>, v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; Two, v<SUB>135</SUB> &rarr; Thr ] >];
    5 [label=<C <BR/> get(Thr, C Triple [0 : [2] [1] []], v<SUB>138</SUB> : v<SUB>139</SUB>), get(One, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>), less(v<SUB>138</SUB>, v<SUB>142</SUB>, Trueo), set(Thr, v<SUB>139</SUB>, C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(One, v<SUB>138</SUB> : v<SUB>142</SUB> : v<SUB>143</SUB>, v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; Thr, v<SUB>135</SUB> &rarr; One ] >];
    6 [label=<C <BR/> get(Thr, C Triple [0 : [2] [1] []], v<SUB>138</SUB> : v<SUB>139</SUB>), get(Two, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>), less(v<SUB>138</SUB>, v<SUB>142</SUB>, Trueo), set(Thr, v<SUB>139</SUB>, C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(Two, v<SUB>138</SUB> : v<SUB>142</SUB> : v<SUB>143</SUB>, v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; Thr, v<SUB>135</SUB> &rarr; Two ] >];
    7 [label=<O <BR/> get(One, C Triple [0 : [2] [1] []], v<SUB>138</SUB> : v<SUB>139</SUB>)>];
    8 [label=<C <BR/> get(Two, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>), less(0, v<SUB>142</SUB>, Trueo), set(One, [2], C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(Two, 0 : v<SUB>142</SUB> : v<SUB>143</SUB>, v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; One, v<SUB>135</SUB> &rarr; Two, v<SUB>138</SUB> &rarr; 0, v<SUB>139</SUB> &rarr; [2], v<SUB>146</SUB> &rarr; 0 : [2], v<SUB>147</SUB> &rarr; [1], v<SUB>148</SUB> &rarr; [] ] >];
    9 [label=<O <BR/> get(Two, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>)>];
    10 [label=<C <BR/> less(0, 1, Trueo), set(One, [2], C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(Two, 0 : [1], v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; One, v<SUB>135</SUB> &rarr; Two, v<SUB>138</SUB> &rarr; 0, v<SUB>139</SUB> &rarr; [2], v<SUB>142</SUB> &rarr; 1, v<SUB>143</SUB> &rarr; [], v<SUB>146</SUB> &rarr; 0 : [2], v<SUB>147</SUB> &rarr; [1], v<SUB>148</SUB> &rarr; [], v<SUB>149</SUB> &rarr; 0 : [2], v<SUB>150</SUB> &rarr; [1], v<SUB>151</SUB> &rarr; [] ] >];
    11 [label=<O <BR/> less(0, 1, Trueo)>];
    12 [label=<C <BR/> set(One, [2], C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(Two, 0 : [1], v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; One, v<SUB>135</SUB> &rarr; Two, v<SUB>138</SUB> &rarr; 0, v<SUB>139</SUB> &rarr; [2], v<SUB>142</SUB> &rarr; 1, v<SUB>143</SUB> &rarr; [], v<SUB>146</SUB> &rarr; 0 : [2], v<SUB>147</SUB> &rarr; [1], v<SUB>148</SUB> &rarr; [], v<SUB>149</SUB> &rarr; 0 : [2], v<SUB>150</SUB> &rarr; [1], v<SUB>151</SUB> &rarr; [], v<SUB>152</SUB> &rarr; 0 ] >];
    13 [label=<O <BR/> set(One, [2], C Triple [0 : [2] [1] []], v<SUB>145</SUB>)>];
    14 [label=<C <BR/> set(Two, 0 : [1], C Triple [[2] [1] []], v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; One, v<SUB>135</SUB> &rarr; Two, v<SUB>138</SUB> &rarr; 0, v<SUB>139</SUB> &rarr; [2], v<SUB>142</SUB> &rarr; 1, v<SUB>143</SUB> &rarr; [], v<SUB>145</SUB> &rarr; C Triple [[2] v<SUB>155</SUB> v<SUB>156</SUB>], v<SUB>146</SUB> &rarr; 0 : [2], v<SUB>147</SUB> &rarr; [1], v<SUB>148</SUB> &rarr; [], v<SUB>149</SUB> &rarr; 0 : [2], v<SUB>150</SUB> &rarr; [1], v<SUB>151</SUB> &rarr; [], v<SUB>152</SUB> &rarr; 0, v<SUB>154</SUB> &rarr; 0 : [2], v<SUB>155</SUB> &rarr; [1], v<SUB>156</SUB> &rarr; [] ] >];
    15 [label=<O <BR/> set(Two, 0 : [1], C Triple [[2] [1] []], v<SUB>133</SUB>)>];
    16 [label=<C <BR/> check(C Triple [[2] 0 : [1] []], v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>133</SUB> &rarr; C Triple [v<SUB>157</SUB> 0 : [1] v<SUB>159</SUB>], v<SUB>134</SUB> &rarr; One, v<SUB>135</SUB> &rarr; Two, v<SUB>138</SUB> &rarr; 0, v<SUB>139</SUB> &rarr; [2], v<SUB>142</SUB> &rarr; 1, v<SUB>143</SUB> &rarr; [], v<SUB>145</SUB> &rarr; C Triple [[2] v<SUB>155</SUB> v<SUB>156</SUB>], v<SUB>146</SUB> &rarr; 0 : [2], v<SUB>147</SUB> &rarr; [1], v<SUB>148</SUB> &rarr; [], v<SUB>149</SUB> &rarr; 0 : [2], v<SUB>150</SUB> &rarr; [1], v<SUB>151</SUB> &rarr; [], v<SUB>152</SUB> &rarr; 0, v<SUB>154</SUB> &rarr; 0 : [2], v<SUB>155</SUB> &rarr; [1], v<SUB>156</SUB> &rarr; [], v<SUB>157</SUB> &rarr; [2], v<SUB>158</SUB> &rarr; [1], v<SUB>159</SUB> &rarr; [] ] >];
    17 [label=<Leaf <BR/> check(C Triple [[2] 0 : [1] []], v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>133</SUB> &rarr; C Triple [v<SUB>157</SUB> 0 : [1] v<SUB>159</SUB>], v<SUB>134</SUB> &rarr; One, v<SUB>135</SUB> &rarr; Two, v<SUB>138</SUB> &rarr; 0, v<SUB>139</SUB> &rarr; [2], v<SUB>142</SUB> &rarr; 1, v<SUB>143</SUB> &rarr; [], v<SUB>145</SUB> &rarr; C Triple [[2] v<SUB>155</SUB> v<SUB>156</SUB>], v<SUB>146</SUB> &rarr; 0 : [2], v<SUB>147</SUB> &rarr; [1], v<SUB>148</SUB> &rarr; [], v<SUB>149</SUB> &rarr; 0 : [2], v<SUB>150</SUB> &rarr; [1], v<SUB>151</SUB> &rarr; [], v<SUB>152</SUB> &rarr; 0, v<SUB>154</SUB> &rarr; 0 : [2], v<SUB>155</SUB> &rarr; [1], v<SUB>156</SUB> &rarr; [], v<SUB>157</SUB> &rarr; [2], v<SUB>158</SUB> &rarr; [1], v<SUB>159</SUB> &rarr; [] ] >];
    18 [label=<O <BR/> get(One, C Triple [0 : [2] [1] []], v<SUB>138</SUB> : v<SUB>139</SUB>)>];
    19 [label=<C <BR/> get(Thr, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>), less(0, v<SUB>142</SUB>, Trueo), set(One, [2], C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(Thr, 0 : v<SUB>142</SUB> : v<SUB>143</SUB>, v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; One, v<SUB>135</SUB> &rarr; Thr, v<SUB>138</SUB> &rarr; 0, v<SUB>139</SUB> &rarr; [2], v<SUB>146</SUB> &rarr; 0 : [2], v<SUB>147</SUB> &rarr; [1], v<SUB>148</SUB> &rarr; [] ] >];
    20 [label=<_|_>];
    21 [label=<O <BR/> get(Two, C Triple [0 : [2] [1] []], v<SUB>138</SUB> : v<SUB>139</SUB>)>];
    22 [label=<C <BR/> get(One, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>), less(1, v<SUB>142</SUB>, Trueo), set(Two, [], C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(One, 1 : v<SUB>142</SUB> : v<SUB>143</SUB>, v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; Two, v<SUB>135</SUB> &rarr; One, v<SUB>138</SUB> &rarr; 1, v<SUB>139</SUB> &rarr; [], v<SUB>146</SUB> &rarr; 0 : [2], v<SUB>147</SUB> &rarr; [1], v<SUB>148</SUB> &rarr; [] ] >];
    23 [label=<O <BR/> get(One, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>)>];
    24 [label=<C <BR/> less(1, 0, Trueo), set(Two, [], C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(One, 1 : 0 : [2], v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; Two, v<SUB>135</SUB> &rarr; One, v<SUB>138</SUB> &rarr; 1, v<SUB>139</SUB> &rarr; [], v<SUB>142</SUB> &rarr; 0, v<SUB>143</SUB> &rarr; [2], v<SUB>146</SUB> &rarr; 0 : [2], v<SUB>147</SUB> &rarr; [1], v<SUB>148</SUB> &rarr; [], v<SUB>149</SUB> &rarr; 0 : [2], v<SUB>150</SUB> &rarr; [1], v<SUB>151</SUB> &rarr; [] ] >];
    25 [label=<_|_>];
    26 [label=<O <BR/> get(Two, C Triple [0 : [2] [1] []], v<SUB>138</SUB> : v<SUB>139</SUB>)>];
    27 [label=<C <BR/> get(Thr, C Triple [0 : [2] [1] []], v<SUB>142</SUB> : v<SUB>143</SUB>), less(1, v<SUB>142</SUB>, Trueo), set(Two, [], C Triple [0 : [2] [1] []], v<SUB>145</SUB>), set(Thr, 1 : v<SUB>142</SUB> : v<SUB>143</SUB>, v<SUB>145</SUB>, v<SUB>133</SUB>), check(v<SUB>133</SUB>, v<SUB>132</SUB>, Trueo) <BR/>  [ v<SUB>134</SUB> &rarr; Two, v<SUB>135</SUB> &rarr; Thr, v<SUB>138</SUB> &rarr; 1, v<SUB>139</SUB> &rarr; [], v<SUB>146</SUB> &rarr; 0 : [2], v<SUB>147</SUB> &rarr; [1], v<SUB>148</SUB> &rarr; [] ] >];
    28 [label=<_|_>];
    29 [label=<_|_>];
    30 [label=<_|_>];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    0 -> 3 [label=""];
    0 -> 4 [label=""];
    0 -> 5 [label=""];
    0 -> 6 [label=""];
    1 -> 7 [label=""];
    2 -> 18 [label=""];
    3 -> 21 [label=""];
    4 -> 26 [label=""];
    5 -> 29 [label=""];
    6 -> 30 [label=""];
    7 -> 8 [label=""];
    8 -> 9 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
    12 -> 13 [label=""];
    13 -> 14 [label=""];
    14 -> 15 [label=""];
    15 -> 16 [label=""];
    16 -> 17 [label=""];
    18 -> 19 [label=""];
    19 -> 20 [label=""];
    21 -> 22 [label=""];
    22 -> 23 [label=""];
    23 -> 24 [label=""];
    24 -> 25 [label=""];
    26 -> 27 [label=""];
    27 -> 28 [label=""];
}