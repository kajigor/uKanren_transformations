digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> notEqStick(v<SUB>295</SUB>, Two, Trueo)>];
    1 [label=<C <BR/> get(One, C Triple [[0] [] 1 : [2]], v<SUB>299</SUB> : v<SUB>300</SUB>), set(One, v<SUB>300</SUB>, C Triple [[0] [] 1 : [2]], C Triple [v<SUB>310</SUB> v<SUB>311</SUB> v<SUB>312</SUB>]), check(C Triple [v<SUB>310</SUB> [v<SUB>299</SUB>] v<SUB>312</SUB>], v<SUB>293</SUB>, Trueo) <BR/>  [ v<SUB>295</SUB> &rarr; One ] >];
    2 [label=<C <BR/> get(Thr, C Triple [[0] [] 1 : [2]], v<SUB>299</SUB> : v<SUB>300</SUB>), set(Thr, v<SUB>300</SUB>, C Triple [[0] [] 1 : [2]], C Triple [v<SUB>310</SUB> v<SUB>311</SUB> v<SUB>312</SUB>]), check(C Triple [v<SUB>310</SUB> [v<SUB>299</SUB>] v<SUB>312</SUB>], v<SUB>293</SUB>, Trueo) <BR/>  [ v<SUB>295</SUB> &rarr; Thr ] >];
    3 [label=<O <BR/> get(One, C Triple [[0] [] 1 : [2]], v<SUB>299</SUB> : v<SUB>300</SUB>)>];
    4 [label=<C <BR/> set(One, [], C Triple [[0] [] 1 : [2]], C Triple [v<SUB>310</SUB> v<SUB>311</SUB> v<SUB>312</SUB>]), check(C Triple [v<SUB>310</SUB> [0] v<SUB>312</SUB>], v<SUB>293</SUB>, Trueo) <BR/>  [ v<SUB>295</SUB> &rarr; One, v<SUB>299</SUB> &rarr; 0, v<SUB>300</SUB> &rarr; [], v<SUB>313</SUB> &rarr; [0], v<SUB>314</SUB> &rarr; [], v<SUB>315</SUB> &rarr; 1 : [2] ] >];
    5 [label=<O <BR/> set(One, [], C Triple [[0] [] 1 : [2]], C Triple [v<SUB>310</SUB> v<SUB>311</SUB> v<SUB>312</SUB>])>];
    6 [label=<C <BR/> check(C Triple [[] [0] 1 : [2]], v<SUB>293</SUB>, Trueo) <BR/>  [ v<SUB>295</SUB> &rarr; One, v<SUB>299</SUB> &rarr; 0, v<SUB>300</SUB> &rarr; [], v<SUB>310</SUB> &rarr; [], v<SUB>311</SUB> &rarr; v<SUB>317</SUB>, v<SUB>312</SUB> &rarr; v<SUB>318</SUB>, v<SUB>313</SUB> &rarr; [0], v<SUB>314</SUB> &rarr; [], v<SUB>315</SUB> &rarr; 1 : [2], v<SUB>316</SUB> &rarr; [0], v<SUB>317</SUB> &rarr; [], v<SUB>318</SUB> &rarr; 1 : [2] ] >];
    7 [label=<Leaf <BR/> check(C Triple [[] [0] 1 : [2]], v<SUB>293</SUB>, Trueo) <BR/>  [ v<SUB>295</SUB> &rarr; One, v<SUB>299</SUB> &rarr; 0, v<SUB>300</SUB> &rarr; [], v<SUB>310</SUB> &rarr; [], v<SUB>311</SUB> &rarr; v<SUB>317</SUB>, v<SUB>312</SUB> &rarr; v<SUB>318</SUB>, v<SUB>313</SUB> &rarr; [0], v<SUB>314</SUB> &rarr; [], v<SUB>315</SUB> &rarr; 1 : [2], v<SUB>316</SUB> &rarr; [0], v<SUB>317</SUB> &rarr; [], v<SUB>318</SUB> &rarr; 1 : [2] ] >];
    8 [label=<O <BR/> get(Thr, C Triple [[0] [] 1 : [2]], v<SUB>299</SUB> : v<SUB>300</SUB>)>];
    9 [label=<C <BR/> set(Thr, [2], C Triple [[0] [] 1 : [2]], C Triple [v<SUB>310</SUB> v<SUB>311</SUB> v<SUB>312</SUB>]), check(C Triple [v<SUB>310</SUB> [1] v<SUB>312</SUB>], v<SUB>293</SUB>, Trueo) <BR/>  [ v<SUB>295</SUB> &rarr; Thr, v<SUB>299</SUB> &rarr; 1, v<SUB>300</SUB> &rarr; [2], v<SUB>313</SUB> &rarr; [0], v<SUB>314</SUB> &rarr; [], v<SUB>315</SUB> &rarr; 1 : [2] ] >];
    10 [label=<O <BR/> set(Thr, [2], C Triple [[0] [] 1 : [2]], C Triple [v<SUB>310</SUB> v<SUB>311</SUB> v<SUB>312</SUB>])>];
    11 [label=<C <BR/> check(C Triple [[0] [1] [2]], v<SUB>293</SUB>, Trueo) <BR/>  [ v<SUB>295</SUB> &rarr; Thr, v<SUB>299</SUB> &rarr; 1, v<SUB>300</SUB> &rarr; [2], v<SUB>310</SUB> &rarr; v<SUB>316</SUB>, v<SUB>311</SUB> &rarr; v<SUB>317</SUB>, v<SUB>312</SUB> &rarr; [2], v<SUB>313</SUB> &rarr; [0], v<SUB>314</SUB> &rarr; [], v<SUB>315</SUB> &rarr; 1 : [2], v<SUB>316</SUB> &rarr; [0], v<SUB>317</SUB> &rarr; [], v<SUB>318</SUB> &rarr; 1 : [2] ] >];
    12 [label=<Leaf <BR/> check(C Triple [[0] [1] [2]], v<SUB>293</SUB>, Trueo) <BR/>  [ v<SUB>295</SUB> &rarr; Thr, v<SUB>299</SUB> &rarr; 1, v<SUB>300</SUB> &rarr; [2], v<SUB>310</SUB> &rarr; v<SUB>316</SUB>, v<SUB>311</SUB> &rarr; v<SUB>317</SUB>, v<SUB>312</SUB> &rarr; [2], v<SUB>313</SUB> &rarr; [0], v<SUB>314</SUB> &rarr; [], v<SUB>315</SUB> &rarr; 1 : [2], v<SUB>316</SUB> &rarr; [0], v<SUB>317</SUB> &rarr; [], v<SUB>318</SUB> &rarr; 1 : [2] ] >];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 8 [label=""];
    3 -> 4 [label=""];
    4 -> 5 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    8 -> 9 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
}