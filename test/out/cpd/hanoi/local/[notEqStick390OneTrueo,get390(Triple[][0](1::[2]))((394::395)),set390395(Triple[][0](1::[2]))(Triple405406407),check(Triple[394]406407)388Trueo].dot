digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> notEqStick(v<SUB>390</SUB>, One, Trueo)>];
    1 [label=<C <BR/> get(Two, C Triple [[] [0] 1 : [2]], v<SUB>394</SUB> : v<SUB>395</SUB>), set(Two, v<SUB>395</SUB>, C Triple [[] [0] 1 : [2]], C Triple [v<SUB>405</SUB> v<SUB>406</SUB> v<SUB>407</SUB>]), check(C Triple [[v<SUB>394</SUB>] v<SUB>406</SUB> v<SUB>407</SUB>], v<SUB>388</SUB>, Trueo) <BR/>  [ v<SUB>390</SUB> &rarr; Two ] >];
    2 [label=<C <BR/> get(Thr, C Triple [[] [0] 1 : [2]], v<SUB>394</SUB> : v<SUB>395</SUB>), set(Thr, v<SUB>395</SUB>, C Triple [[] [0] 1 : [2]], C Triple [v<SUB>405</SUB> v<SUB>406</SUB> v<SUB>407</SUB>]), check(C Triple [[v<SUB>394</SUB>] v<SUB>406</SUB> v<SUB>407</SUB>], v<SUB>388</SUB>, Trueo) <BR/>  [ v<SUB>390</SUB> &rarr; Thr ] >];
    3 [label=<O <BR/> get(Two, C Triple [[] [0] 1 : [2]], v<SUB>394</SUB> : v<SUB>395</SUB>)>];
    4 [label=<C <BR/> set(Two, [], C Triple [[] [0] 1 : [2]], C Triple [v<SUB>405</SUB> v<SUB>406</SUB> v<SUB>407</SUB>]), check(C Triple [[0] v<SUB>406</SUB> v<SUB>407</SUB>], v<SUB>388</SUB>, Trueo) <BR/>  [ v<SUB>390</SUB> &rarr; Two, v<SUB>394</SUB> &rarr; 0, v<SUB>395</SUB> &rarr; [], v<SUB>408</SUB> &rarr; [], v<SUB>409</SUB> &rarr; [0], v<SUB>410</SUB> &rarr; 1 : [2] ] >];
    5 [label=<O <BR/> set(Two, [], C Triple [[] [0] 1 : [2]], C Triple [v<SUB>405</SUB> v<SUB>406</SUB> v<SUB>407</SUB>])>];
    6 [label=<C <BR/> check(C Triple [[0] [] 1 : [2]], v<SUB>388</SUB>, Trueo) <BR/>  [ v<SUB>390</SUB> &rarr; Two, v<SUB>394</SUB> &rarr; 0, v<SUB>395</SUB> &rarr; [], v<SUB>405</SUB> &rarr; v<SUB>411</SUB>, v<SUB>406</SUB> &rarr; [], v<SUB>407</SUB> &rarr; v<SUB>413</SUB>, v<SUB>408</SUB> &rarr; [], v<SUB>409</SUB> &rarr; [0], v<SUB>410</SUB> &rarr; 1 : [2], v<SUB>411</SUB> &rarr; [], v<SUB>412</SUB> &rarr; [0], v<SUB>413</SUB> &rarr; 1 : [2] ] >];
    7 [label=<Leaf <BR/> check(C Triple [[0] [] 1 : [2]], v<SUB>388</SUB>, Trueo) <BR/>  [ v<SUB>390</SUB> &rarr; Two, v<SUB>394</SUB> &rarr; 0, v<SUB>395</SUB> &rarr; [], v<SUB>405</SUB> &rarr; v<SUB>411</SUB>, v<SUB>406</SUB> &rarr; [], v<SUB>407</SUB> &rarr; v<SUB>413</SUB>, v<SUB>408</SUB> &rarr; [], v<SUB>409</SUB> &rarr; [0], v<SUB>410</SUB> &rarr; 1 : [2], v<SUB>411</SUB> &rarr; [], v<SUB>412</SUB> &rarr; [0], v<SUB>413</SUB> &rarr; 1 : [2] ] >];
    8 [label=<O <BR/> get(Thr, C Triple [[] [0] 1 : [2]], v<SUB>394</SUB> : v<SUB>395</SUB>)>];
    9 [label=<C <BR/> set(Thr, [2], C Triple [[] [0] 1 : [2]], C Triple [v<SUB>405</SUB> v<SUB>406</SUB> v<SUB>407</SUB>]), check(C Triple [[1] v<SUB>406</SUB> v<SUB>407</SUB>], v<SUB>388</SUB>, Trueo) <BR/>  [ v<SUB>390</SUB> &rarr; Thr, v<SUB>394</SUB> &rarr; 1, v<SUB>395</SUB> &rarr; [2], v<SUB>408</SUB> &rarr; [], v<SUB>409</SUB> &rarr; [0], v<SUB>410</SUB> &rarr; 1 : [2] ] >];
    10 [label=<O <BR/> set(Thr, [2], C Triple [[] [0] 1 : [2]], C Triple [v<SUB>405</SUB> v<SUB>406</SUB> v<SUB>407</SUB>])>];
    11 [label=<C <BR/> check(C Triple [[1] [0] [2]], v<SUB>388</SUB>, Trueo) <BR/>  [ v<SUB>390</SUB> &rarr; Thr, v<SUB>394</SUB> &rarr; 1, v<SUB>395</SUB> &rarr; [2], v<SUB>405</SUB> &rarr; v<SUB>411</SUB>, v<SUB>406</SUB> &rarr; v<SUB>412</SUB>, v<SUB>407</SUB> &rarr; [2], v<SUB>408</SUB> &rarr; [], v<SUB>409</SUB> &rarr; [0], v<SUB>410</SUB> &rarr; 1 : [2], v<SUB>411</SUB> &rarr; [], v<SUB>412</SUB> &rarr; [0], v<SUB>413</SUB> &rarr; 1 : [2] ] >];
    12 [label=<Leaf <BR/> check(C Triple [[1] [0] [2]], v<SUB>388</SUB>, Trueo) <BR/>  [ v<SUB>390</SUB> &rarr; Thr, v<SUB>394</SUB> &rarr; 1, v<SUB>395</SUB> &rarr; [2], v<SUB>405</SUB> &rarr; v<SUB>411</SUB>, v<SUB>406</SUB> &rarr; v<SUB>412</SUB>, v<SUB>407</SUB> &rarr; [2], v<SUB>408</SUB> &rarr; [], v<SUB>409</SUB> &rarr; [0], v<SUB>410</SUB> &rarr; 1 : [2], v<SUB>411</SUB> &rarr; [], v<SUB>412</SUB> &rarr; [0], v<SUB>413</SUB> &rarr; 1 : [2] ] >];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 8 [label=""];
    3 -> 4 [label=""];
    4 -> 5 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    8 -> 9 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
}