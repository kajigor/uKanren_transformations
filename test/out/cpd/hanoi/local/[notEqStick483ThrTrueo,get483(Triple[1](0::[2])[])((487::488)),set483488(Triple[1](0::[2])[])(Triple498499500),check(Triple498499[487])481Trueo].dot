digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> notEqStick(v<SUB>483</SUB>, Thr, Trueo)>];
    1 [label=<C <BR/> get(One, C Triple [[1] 0 : [2] []], v<SUB>487</SUB> : v<SUB>488</SUB>), set(One, v<SUB>488</SUB>, C Triple [[1] 0 : [2] []], C Triple [v<SUB>498</SUB> v<SUB>499</SUB> v<SUB>500</SUB>]), check(C Triple [v<SUB>498</SUB> v<SUB>499</SUB> [v<SUB>487</SUB>]], v<SUB>481</SUB>, Trueo) <BR/>  [ v<SUB>483</SUB> &rarr; One ] >];
    2 [label=<C <BR/> get(Two, C Triple [[1] 0 : [2] []], v<SUB>487</SUB> : v<SUB>488</SUB>), set(Two, v<SUB>488</SUB>, C Triple [[1] 0 : [2] []], C Triple [v<SUB>498</SUB> v<SUB>499</SUB> v<SUB>500</SUB>]), check(C Triple [v<SUB>498</SUB> v<SUB>499</SUB> [v<SUB>487</SUB>]], v<SUB>481</SUB>, Trueo) <BR/>  [ v<SUB>483</SUB> &rarr; Two ] >];
    3 [label=<O <BR/> get(One, C Triple [[1] 0 : [2] []], v<SUB>487</SUB> : v<SUB>488</SUB>)>];
    4 [label=<C <BR/> set(One, [], C Triple [[1] 0 : [2] []], C Triple [v<SUB>498</SUB> v<SUB>499</SUB> v<SUB>500</SUB>]), check(C Triple [v<SUB>498</SUB> v<SUB>499</SUB> [1]], v<SUB>481</SUB>, Trueo) <BR/>  [ v<SUB>483</SUB> &rarr; One, v<SUB>487</SUB> &rarr; 1, v<SUB>488</SUB> &rarr; [], v<SUB>501</SUB> &rarr; [1], v<SUB>502</SUB> &rarr; 0 : [2], v<SUB>503</SUB> &rarr; [] ] >];
    5 [label=<O <BR/> set(One, [], C Triple [[1] 0 : [2] []], C Triple [v<SUB>498</SUB> v<SUB>499</SUB> v<SUB>500</SUB>])>];
    6 [label=<C <BR/> check(C Triple [[] 0 : [2] [1]], v<SUB>481</SUB>, Trueo) <BR/>  [ v<SUB>483</SUB> &rarr; One, v<SUB>487</SUB> &rarr; 1, v<SUB>488</SUB> &rarr; [], v<SUB>498</SUB> &rarr; [], v<SUB>499</SUB> &rarr; v<SUB>505</SUB>, v<SUB>500</SUB> &rarr; v<SUB>506</SUB>, v<SUB>501</SUB> &rarr; [1], v<SUB>502</SUB> &rarr; 0 : [2], v<SUB>503</SUB> &rarr; [], v<SUB>504</SUB> &rarr; [1], v<SUB>505</SUB> &rarr; 0 : [2], v<SUB>506</SUB> &rarr; [] ] >];
    7 [label=<Leaf <BR/> check(C Triple [[] 0 : [2] [1]], v<SUB>481</SUB>, Trueo) <BR/>  [ v<SUB>483</SUB> &rarr; One, v<SUB>487</SUB> &rarr; 1, v<SUB>488</SUB> &rarr; [], v<SUB>498</SUB> &rarr; [], v<SUB>499</SUB> &rarr; v<SUB>505</SUB>, v<SUB>500</SUB> &rarr; v<SUB>506</SUB>, v<SUB>501</SUB> &rarr; [1], v<SUB>502</SUB> &rarr; 0 : [2], v<SUB>503</SUB> &rarr; [], v<SUB>504</SUB> &rarr; [1], v<SUB>505</SUB> &rarr; 0 : [2], v<SUB>506</SUB> &rarr; [] ] >];
    8 [label=<O <BR/> get(Two, C Triple [[1] 0 : [2] []], v<SUB>487</SUB> : v<SUB>488</SUB>)>];
    9 [label=<C <BR/> set(Two, [2], C Triple [[1] 0 : [2] []], C Triple [v<SUB>498</SUB> v<SUB>499</SUB> v<SUB>500</SUB>]), check(C Triple [v<SUB>498</SUB> v<SUB>499</SUB> [0]], v<SUB>481</SUB>, Trueo) <BR/>  [ v<SUB>483</SUB> &rarr; Two, v<SUB>487</SUB> &rarr; 0, v<SUB>488</SUB> &rarr; [2], v<SUB>501</SUB> &rarr; [1], v<SUB>502</SUB> &rarr; 0 : [2], v<SUB>503</SUB> &rarr; [] ] >];
    10 [label=<O <BR/> set(Two, [2], C Triple [[1] 0 : [2] []], C Triple [v<SUB>498</SUB> v<SUB>499</SUB> v<SUB>500</SUB>])>];
    11 [label=<C <BR/> check(C Triple [[1] [2] [0]], v<SUB>481</SUB>, Trueo) <BR/>  [ v<SUB>483</SUB> &rarr; Two, v<SUB>487</SUB> &rarr; 0, v<SUB>488</SUB> &rarr; [2], v<SUB>498</SUB> &rarr; v<SUB>504</SUB>, v<SUB>499</SUB> &rarr; [2], v<SUB>500</SUB> &rarr; v<SUB>506</SUB>, v<SUB>501</SUB> &rarr; [1], v<SUB>502</SUB> &rarr; 0 : [2], v<SUB>503</SUB> &rarr; [], v<SUB>504</SUB> &rarr; [1], v<SUB>505</SUB> &rarr; 0 : [2], v<SUB>506</SUB> &rarr; [] ] >];
    12 [label=<Leaf <BR/> check(C Triple [[1] [2] [0]], v<SUB>481</SUB>, Trueo) <BR/>  [ v<SUB>483</SUB> &rarr; Two, v<SUB>487</SUB> &rarr; 0, v<SUB>488</SUB> &rarr; [2], v<SUB>498</SUB> &rarr; v<SUB>504</SUB>, v<SUB>499</SUB> &rarr; [2], v<SUB>500</SUB> &rarr; v<SUB>506</SUB>, v<SUB>501</SUB> &rarr; [1], v<SUB>502</SUB> &rarr; 0 : [2], v<SUB>503</SUB> &rarr; [], v<SUB>504</SUB> &rarr; [1], v<SUB>505</SUB> &rarr; 0 : [2], v<SUB>506</SUB> &rarr; [] ] >];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 8 [label=""];
    3 -> 4 [label=""];
    4 -> 5 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    8 -> 9 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
}