digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> notEqStick(v<SUB>485</SUB>, One, Trueo)>];
    1 [label=<C <BR/> get(Two, C Triple [[] 1 : [2] [0]], v<SUB>489</SUB> : v<SUB>490</SUB>), set(Two, v<SUB>490</SUB>, C Triple [[] 1 : [2] [0]], C Triple [v<SUB>500</SUB> v<SUB>501</SUB> v<SUB>502</SUB>]), check(C Triple [[v<SUB>489</SUB>] v<SUB>501</SUB> v<SUB>502</SUB>], v<SUB>483</SUB>, Trueo) <BR/>  [ v<SUB>485</SUB> &rarr; Two ] >];
    2 [label=<C <BR/> get(Thr, C Triple [[] 1 : [2] [0]], v<SUB>489</SUB> : v<SUB>490</SUB>), set(Thr, v<SUB>490</SUB>, C Triple [[] 1 : [2] [0]], C Triple [v<SUB>500</SUB> v<SUB>501</SUB> v<SUB>502</SUB>]), check(C Triple [[v<SUB>489</SUB>] v<SUB>501</SUB> v<SUB>502</SUB>], v<SUB>483</SUB>, Trueo) <BR/>  [ v<SUB>485</SUB> &rarr; Thr ] >];
    3 [label=<O <BR/> get(Two, C Triple [[] 1 : [2] [0]], v<SUB>489</SUB> : v<SUB>490</SUB>)>];
    4 [label=<C <BR/> set(Two, [2], C Triple [[] 1 : [2] [0]], C Triple [v<SUB>500</SUB> v<SUB>501</SUB> v<SUB>502</SUB>]), check(C Triple [[1] v<SUB>501</SUB> v<SUB>502</SUB>], v<SUB>483</SUB>, Trueo) <BR/>  [ v<SUB>485</SUB> &rarr; Two, v<SUB>489</SUB> &rarr; 1, v<SUB>490</SUB> &rarr; [2], v<SUB>503</SUB> &rarr; [], v<SUB>504</SUB> &rarr; 1 : [2], v<SUB>505</SUB> &rarr; [0] ] >];
    5 [label=<O <BR/> set(Two, [2], C Triple [[] 1 : [2] [0]], C Triple [v<SUB>500</SUB> v<SUB>501</SUB> v<SUB>502</SUB>])>];
    6 [label=<C <BR/> check(C Triple [[1] [2] [0]], v<SUB>483</SUB>, Trueo) <BR/>  [ v<SUB>485</SUB> &rarr; Two, v<SUB>489</SUB> &rarr; 1, v<SUB>490</SUB> &rarr; [2], v<SUB>500</SUB> &rarr; v<SUB>506</SUB>, v<SUB>501</SUB> &rarr; [2], v<SUB>502</SUB> &rarr; v<SUB>508</SUB>, v<SUB>503</SUB> &rarr; [], v<SUB>504</SUB> &rarr; 1 : [2], v<SUB>505</SUB> &rarr; [0], v<SUB>506</SUB> &rarr; [], v<SUB>507</SUB> &rarr; 1 : [2], v<SUB>508</SUB> &rarr; [0] ] >];
    7 [label=<Leaf <BR/> check(C Triple [[1] [2] [0]], v<SUB>483</SUB>, Trueo) <BR/>  [ v<SUB>485</SUB> &rarr; Two, v<SUB>489</SUB> &rarr; 1, v<SUB>490</SUB> &rarr; [2], v<SUB>500</SUB> &rarr; v<SUB>506</SUB>, v<SUB>501</SUB> &rarr; [2], v<SUB>502</SUB> &rarr; v<SUB>508</SUB>, v<SUB>503</SUB> &rarr; [], v<SUB>504</SUB> &rarr; 1 : [2], v<SUB>505</SUB> &rarr; [0], v<SUB>506</SUB> &rarr; [], v<SUB>507</SUB> &rarr; 1 : [2], v<SUB>508</SUB> &rarr; [0] ] >];
    8 [label=<O <BR/> get(Thr, C Triple [[] 1 : [2] [0]], v<SUB>489</SUB> : v<SUB>490</SUB>)>];
    9 [label=<C <BR/> set(Thr, [], C Triple [[] 1 : [2] [0]], C Triple [v<SUB>500</SUB> v<SUB>501</SUB> v<SUB>502</SUB>]), check(C Triple [[0] v<SUB>501</SUB> v<SUB>502</SUB>], v<SUB>483</SUB>, Trueo) <BR/>  [ v<SUB>485</SUB> &rarr; Thr, v<SUB>489</SUB> &rarr; 0, v<SUB>490</SUB> &rarr; [], v<SUB>503</SUB> &rarr; [], v<SUB>504</SUB> &rarr; 1 : [2], v<SUB>505</SUB> &rarr; [0] ] >];
    10 [label=<O <BR/> set(Thr, [], C Triple [[] 1 : [2] [0]], C Triple [v<SUB>500</SUB> v<SUB>501</SUB> v<SUB>502</SUB>])>];
    11 [label=<C <BR/> check(C Triple [[0] 1 : [2] []], v<SUB>483</SUB>, Trueo) <BR/>  [ v<SUB>485</SUB> &rarr; Thr, v<SUB>489</SUB> &rarr; 0, v<SUB>490</SUB> &rarr; [], v<SUB>500</SUB> &rarr; v<SUB>506</SUB>, v<SUB>501</SUB> &rarr; v<SUB>507</SUB>, v<SUB>502</SUB> &rarr; [], v<SUB>503</SUB> &rarr; [], v<SUB>504</SUB> &rarr; 1 : [2], v<SUB>505</SUB> &rarr; [0], v<SUB>506</SUB> &rarr; [], v<SUB>507</SUB> &rarr; 1 : [2], v<SUB>508</SUB> &rarr; [0] ] >];
    12 [label=<Leaf <BR/> check(C Triple [[0] 1 : [2] []], v<SUB>483</SUB>, Trueo) <BR/>  [ v<SUB>485</SUB> &rarr; Thr, v<SUB>489</SUB> &rarr; 0, v<SUB>490</SUB> &rarr; [], v<SUB>500</SUB> &rarr; v<SUB>506</SUB>, v<SUB>501</SUB> &rarr; v<SUB>507</SUB>, v<SUB>502</SUB> &rarr; [], v<SUB>503</SUB> &rarr; [], v<SUB>504</SUB> &rarr; 1 : [2], v<SUB>505</SUB> &rarr; [0], v<SUB>506</SUB> &rarr; [], v<SUB>507</SUB> &rarr; 1 : [2], v<SUB>508</SUB> &rarr; [0] ] >];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 8 [label=""];
    3 -> 4 [label=""];
    4 -> 5 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    8 -> 9 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
}