digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> one_step(v<SUB>5</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>7</SUB>)>];
    1 [label=<C <BR/> notEqStick(v<SUB>8</SUB>, v<SUB>9</SUB>, Trueo), get(v<SUB>8</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>12</SUB> : v<SUB>13</SUB>), get(v<SUB>9</SUB>, C Triple [0 : 1 : [2] [] []], []), set(v<SUB>8</SUB>, v<SUB>13</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>15</SUB>), set(v<SUB>9</SUB>, [v<SUB>12</SUB>], v<SUB>15</SUB>, v<SUB>7</SUB>), check(v<SUB>7</SUB>, v<SUB>6</SUB>, Trueo) <BR/>  [ v<SUB>5</SUB> &rarr; (v<SUB>8</SUB>, v<SUB>9</SUB>), v<SUB>10</SUB> &rarr; Trueo, v<SUB>11</SUB> &rarr; v<SUB>12</SUB> : v<SUB>13</SUB>, v<SUB>14</SUB> &rarr; [] ] >];
    2 [label=<C <BR/> notEqStick(v<SUB>8</SUB>, v<SUB>9</SUB>, Trueo), get(v<SUB>8</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>12</SUB> : v<SUB>13</SUB>), get(v<SUB>9</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>16</SUB> : v<SUB>17</SUB>), less(v<SUB>12</SUB>, v<SUB>16</SUB>, Trueo), set(v<SUB>8</SUB>, v<SUB>13</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>19</SUB>), set(v<SUB>9</SUB>, v<SUB>12</SUB> : v<SUB>16</SUB> : v<SUB>17</SUB>, v<SUB>19</SUB>, v<SUB>7</SUB>), check(v<SUB>7</SUB>, v<SUB>6</SUB>, Trueo) <BR/>  [ v<SUB>5</SUB> &rarr; (v<SUB>8</SUB>, v<SUB>9</SUB>), v<SUB>10</SUB> &rarr; Trueo, v<SUB>11</SUB> &rarr; v<SUB>12</SUB> : v<SUB>13</SUB>, v<SUB>14</SUB> &rarr; v<SUB>16</SUB> : v<SUB>17</SUB>, v<SUB>18</SUB> &rarr; Trueo ] >];
    3 [label=<O <BR/> get(v<SUB>8</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>12</SUB> : v<SUB>13</SUB>)>];
    4 [label=<C <BR/> notEqStick(One, v<SUB>9</SUB>, Trueo), get(v<SUB>9</SUB>, C Triple [0 : 1 : [2] [] []], []), set(One, 1 : [2], C Triple [0 : 1 : [2] [] []], v<SUB>15</SUB>), set(v<SUB>9</SUB>, [0], v<SUB>15</SUB>, v<SUB>7</SUB>), check(v<SUB>7</SUB>, v<SUB>6</SUB>, Trueo) <BR/>  [ v<SUB>5</SUB> &rarr; (v<SUB>8</SUB>, v<SUB>9</SUB>), v<SUB>8</SUB> &rarr; One, v<SUB>10</SUB> &rarr; Trueo, v<SUB>11</SUB> &rarr; v<SUB>12</SUB> : v<SUB>13</SUB>, v<SUB>12</SUB> &rarr; 0, v<SUB>13</SUB> &rarr; 1 : [2], v<SUB>14</SUB> &rarr; [], v<SUB>20</SUB> &rarr; 0 : 1 : [2], v<SUB>21</SUB> &rarr; [], v<SUB>22</SUB> &rarr; [] ] >];
    5 [label=<O <BR/> set(One, 1 : [2], C Triple [0 : 1 : [2] [] []], v<SUB>15</SUB>)>];
    6 [label=<C <BR/> notEqStick(One, v<SUB>9</SUB>, Trueo), get(v<SUB>9</SUB>, C Triple [0 : 1 : [2] [] []], []), set(v<SUB>9</SUB>, [0], C Triple [1 : [2] [] []], v<SUB>7</SUB>), check(v<SUB>7</SUB>, v<SUB>6</SUB>, Trueo) <BR/>  [ v<SUB>5</SUB> &rarr; (v<SUB>8</SUB>, v<SUB>9</SUB>), v<SUB>8</SUB> &rarr; One, v<SUB>10</SUB> &rarr; Trueo, v<SUB>11</SUB> &rarr; v<SUB>12</SUB> : v<SUB>13</SUB>, v<SUB>12</SUB> &rarr; 0, v<SUB>13</SUB> &rarr; 1 : [2], v<SUB>14</SUB> &rarr; [], v<SUB>15</SUB> &rarr; C Triple [1 : [2] v<SUB>24</SUB> v<SUB>25</SUB>], v<SUB>20</SUB> &rarr; 0 : 1 : [2], v<SUB>21</SUB> &rarr; [], v<SUB>22</SUB> &rarr; [], v<SUB>23</SUB> &rarr; 0 : 1 : [2], v<SUB>24</SUB> &rarr; [], v<SUB>25</SUB> &rarr; [] ] >];
    7 [label=<Leaf <BR/> notEqStick(One, v<SUB>9</SUB>, Trueo), get(v<SUB>9</SUB>, C Triple [0 : 1 : [2] [] []], []), set(v<SUB>9</SUB>, [0], C Triple [1 : [2] [] []], v<SUB>7</SUB>), check(v<SUB>7</SUB>, v<SUB>6</SUB>, Trueo) <BR/>  [ v<SUB>5</SUB> &rarr; (v<SUB>8</SUB>, v<SUB>9</SUB>), v<SUB>8</SUB> &rarr; One, v<SUB>10</SUB> &rarr; Trueo, v<SUB>11</SUB> &rarr; v<SUB>12</SUB> : v<SUB>13</SUB>, v<SUB>12</SUB> &rarr; 0, v<SUB>13</SUB> &rarr; 1 : [2], v<SUB>14</SUB> &rarr; [], v<SUB>15</SUB> &rarr; C Triple [1 : [2] v<SUB>24</SUB> v<SUB>25</SUB>], v<SUB>20</SUB> &rarr; 0 : 1 : [2], v<SUB>21</SUB> &rarr; [], v<SUB>22</SUB> &rarr; [], v<SUB>23</SUB> &rarr; 0 : 1 : [2], v<SUB>24</SUB> &rarr; [], v<SUB>25</SUB> &rarr; [] ] >];
    8 [label=<O <BR/> get(v<SUB>8</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>12</SUB> : v<SUB>13</SUB>)>];
    9 [label=<C <BR/> notEqStick(One, v<SUB>9</SUB>, Trueo), get(v<SUB>9</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>16</SUB> : v<SUB>17</SUB>), less(0, v<SUB>16</SUB>, Trueo), set(One, 1 : [2], C Triple [0 : 1 : [2] [] []], v<SUB>19</SUB>), set(v<SUB>9</SUB>, 0 : v<SUB>16</SUB> : v<SUB>17</SUB>, v<SUB>19</SUB>, v<SUB>7</SUB>), check(v<SUB>7</SUB>, v<SUB>6</SUB>, Trueo) <BR/>  [ v<SUB>5</SUB> &rarr; (v<SUB>8</SUB>, v<SUB>9</SUB>), v<SUB>8</SUB> &rarr; One, v<SUB>10</SUB> &rarr; Trueo, v<SUB>11</SUB> &rarr; v<SUB>12</SUB> : v<SUB>13</SUB>, v<SUB>12</SUB> &rarr; 0, v<SUB>13</SUB> &rarr; 1 : [2], v<SUB>14</SUB> &rarr; v<SUB>16</SUB> : v<SUB>17</SUB>, v<SUB>18</SUB> &rarr; Trueo, v<SUB>20</SUB> &rarr; 0 : 1 : [2], v<SUB>21</SUB> &rarr; [], v<SUB>22</SUB> &rarr; [] ] >];
    10 [label=<O <BR/> get(v<SUB>9</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>16</SUB> : v<SUB>17</SUB>)>];
    11 [label=<C <BR/> notEqStick(One, One, Trueo), less(0, 0, Trueo), set(One, 1 : [2], C Triple [0 : 1 : [2] [] []], v<SUB>19</SUB>), set(One, 0 : 0 : 1 : [2], v<SUB>19</SUB>, v<SUB>7</SUB>), check(v<SUB>7</SUB>, v<SUB>6</SUB>, Trueo) <BR/>  [ v<SUB>5</SUB> &rarr; (v<SUB>8</SUB>, v<SUB>9</SUB>), v<SUB>8</SUB> &rarr; One, v<SUB>9</SUB> &rarr; One, v<SUB>10</SUB> &rarr; Trueo, v<SUB>11</SUB> &rarr; v<SUB>12</SUB> : v<SUB>13</SUB>, v<SUB>12</SUB> &rarr; 0, v<SUB>13</SUB> &rarr; 1 : [2], v<SUB>14</SUB> &rarr; v<SUB>16</SUB> : v<SUB>17</SUB>, v<SUB>16</SUB> &rarr; 0, v<SUB>17</SUB> &rarr; 1 : [2], v<SUB>18</SUB> &rarr; Trueo, v<SUB>20</SUB> &rarr; 0 : 1 : [2], v<SUB>21</SUB> &rarr; [], v<SUB>22</SUB> &rarr; [], v<SUB>23</SUB> &rarr; 0 : 1 : [2], v<SUB>24</SUB> &rarr; [], v<SUB>25</SUB> &rarr; [] ] >];
    12 [label=<_|_>];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 8 [label=""];
    3 -> 4 [label=""];
    4 -> 5 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    8 -> 9 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
}