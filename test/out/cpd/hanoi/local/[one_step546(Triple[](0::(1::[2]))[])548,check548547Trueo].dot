digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> one_step(v<SUB>546</SUB>, C Triple [[] 0 : 1 : [2] []], v<SUB>548</SUB>)>];
    1 [label=<C <BR/> notEqStick(v<SUB>549</SUB>, v<SUB>550</SUB>, Trueo), get(v<SUB>549</SUB>, C Triple [[] 0 : 1 : [2] []], v<SUB>553</SUB> : v<SUB>554</SUB>), get(v<SUB>550</SUB>, C Triple [[] 0 : 1 : [2] []], []), set(v<SUB>549</SUB>, v<SUB>554</SUB>, C Triple [[] 0 : 1 : [2] []], v<SUB>556</SUB>), set(v<SUB>550</SUB>, [v<SUB>553</SUB>], v<SUB>556</SUB>, v<SUB>548</SUB>), check(v<SUB>548</SUB>, v<SUB>547</SUB>, Trueo) <BR/>  [ v<SUB>546</SUB> &rarr; (v<SUB>549</SUB>, v<SUB>550</SUB>), v<SUB>551</SUB> &rarr; Trueo, v<SUB>552</SUB> &rarr; v<SUB>553</SUB> : v<SUB>554</SUB>, v<SUB>555</SUB> &rarr; [] ] >];
    2 [label=<C <BR/> notEqStick(v<SUB>549</SUB>, v<SUB>550</SUB>, Trueo), get(v<SUB>549</SUB>, C Triple [[] 0 : 1 : [2] []], v<SUB>553</SUB> : v<SUB>554</SUB>), get(v<SUB>550</SUB>, C Triple [[] 0 : 1 : [2] []], v<SUB>557</SUB> : v<SUB>558</SUB>), less(v<SUB>553</SUB>, v<SUB>557</SUB>, Trueo), set(v<SUB>549</SUB>, v<SUB>554</SUB>, C Triple [[] 0 : 1 : [2] []], v<SUB>560</SUB>), set(v<SUB>550</SUB>, v<SUB>553</SUB> : v<SUB>557</SUB> : v<SUB>558</SUB>, v<SUB>560</SUB>, v<SUB>548</SUB>), check(v<SUB>548</SUB>, v<SUB>547</SUB>, Trueo) <BR/>  [ v<SUB>546</SUB> &rarr; (v<SUB>549</SUB>, v<SUB>550</SUB>), v<SUB>551</SUB> &rarr; Trueo, v<SUB>552</SUB> &rarr; v<SUB>553</SUB> : v<SUB>554</SUB>, v<SUB>555</SUB> &rarr; v<SUB>557</SUB> : v<SUB>558</SUB>, v<SUB>559</SUB> &rarr; Trueo ] >];
    3 [label=<O <BR/> get(v<SUB>549</SUB>, C Triple [[] 0 : 1 : [2] []], v<SUB>553</SUB> : v<SUB>554</SUB>)>];
    4 [label=<C <BR/> notEqStick(Two, v<SUB>550</SUB>, Trueo), get(v<SUB>550</SUB>, C Triple [[] 0 : 1 : [2] []], []), set(Two, 1 : [2], C Triple [[] 0 : 1 : [2] []], v<SUB>556</SUB>), set(v<SUB>550</SUB>, [0], v<SUB>556</SUB>, v<SUB>548</SUB>), check(v<SUB>548</SUB>, v<SUB>547</SUB>, Trueo) <BR/>  [ v<SUB>546</SUB> &rarr; (v<SUB>549</SUB>, v<SUB>550</SUB>), v<SUB>549</SUB> &rarr; Two, v<SUB>551</SUB> &rarr; Trueo, v<SUB>552</SUB> &rarr; v<SUB>553</SUB> : v<SUB>554</SUB>, v<SUB>553</SUB> &rarr; 0, v<SUB>554</SUB> &rarr; 1 : [2], v<SUB>555</SUB> &rarr; [], v<SUB>561</SUB> &rarr; [], v<SUB>562</SUB> &rarr; 0 : 1 : [2], v<SUB>563</SUB> &rarr; [] ] >];
    5 [label=<O <BR/> set(Two, 1 : [2], C Triple [[] 0 : 1 : [2] []], v<SUB>556</SUB>)>];
    6 [label=<C <BR/> notEqStick(Two, v<SUB>550</SUB>, Trueo), get(v<SUB>550</SUB>, C Triple [[] 0 : 1 : [2] []], []), set(v<SUB>550</SUB>, [0], C Triple [[] 1 : [2] []], v<SUB>548</SUB>), check(v<SUB>548</SUB>, v<SUB>547</SUB>, Trueo) <BR/>  [ v<SUB>546</SUB> &rarr; (v<SUB>549</SUB>, v<SUB>550</SUB>), v<SUB>549</SUB> &rarr; Two, v<SUB>551</SUB> &rarr; Trueo, v<SUB>552</SUB> &rarr; v<SUB>553</SUB> : v<SUB>554</SUB>, v<SUB>553</SUB> &rarr; 0, v<SUB>554</SUB> &rarr; 1 : [2], v<SUB>555</SUB> &rarr; [], v<SUB>556</SUB> &rarr; C Triple [v<SUB>564</SUB> 1 : [2] v<SUB>566</SUB>], v<SUB>561</SUB> &rarr; [], v<SUB>562</SUB> &rarr; 0 : 1 : [2], v<SUB>563</SUB> &rarr; [], v<SUB>564</SUB> &rarr; [], v<SUB>565</SUB> &rarr; 0 : 1 : [2], v<SUB>566</SUB> &rarr; [] ] >];
    7 [label=<Leaf <BR/> notEqStick(Two, v<SUB>550</SUB>, Trueo), get(v<SUB>550</SUB>, C Triple [[] 0 : 1 : [2] []], []), set(v<SUB>550</SUB>, [0], C Triple [[] 1 : [2] []], v<SUB>548</SUB>), check(v<SUB>548</SUB>, v<SUB>547</SUB>, Trueo) <BR/>  [ v<SUB>546</SUB> &rarr; (v<SUB>549</SUB>, v<SUB>550</SUB>), v<SUB>549</SUB> &rarr; Two, v<SUB>551</SUB> &rarr; Trueo, v<SUB>552</SUB> &rarr; v<SUB>553</SUB> : v<SUB>554</SUB>, v<SUB>553</SUB> &rarr; 0, v<SUB>554</SUB> &rarr; 1 : [2], v<SUB>555</SUB> &rarr; [], v<SUB>556</SUB> &rarr; C Triple [v<SUB>564</SUB> 1 : [2] v<SUB>566</SUB>], v<SUB>561</SUB> &rarr; [], v<SUB>562</SUB> &rarr; 0 : 1 : [2], v<SUB>563</SUB> &rarr; [], v<SUB>564</SUB> &rarr; [], v<SUB>565</SUB> &rarr; 0 : 1 : [2], v<SUB>566</SUB> &rarr; [] ] >];
    8 [label=<O <BR/> get(v<SUB>549</SUB>, C Triple [[] 0 : 1 : [2] []], v<SUB>553</SUB> : v<SUB>554</SUB>)>];
    9 [label=<C <BR/> notEqStick(Two, v<SUB>550</SUB>, Trueo), get(v<SUB>550</SUB>, C Triple [[] 0 : 1 : [2] []], v<SUB>557</SUB> : v<SUB>558</SUB>), less(0, v<SUB>557</SUB>, Trueo), set(Two, 1 : [2], C Triple [[] 0 : 1 : [2] []], v<SUB>560</SUB>), set(v<SUB>550</SUB>, 0 : v<SUB>557</SUB> : v<SUB>558</SUB>, v<SUB>560</SUB>, v<SUB>548</SUB>), check(v<SUB>548</SUB>, v<SUB>547</SUB>, Trueo) <BR/>  [ v<SUB>546</SUB> &rarr; (v<SUB>549</SUB>, v<SUB>550</SUB>), v<SUB>549</SUB> &rarr; Two, v<SUB>551</SUB> &rarr; Trueo, v<SUB>552</SUB> &rarr; v<SUB>553</SUB> : v<SUB>554</SUB>, v<SUB>553</SUB> &rarr; 0, v<SUB>554</SUB> &rarr; 1 : [2], v<SUB>555</SUB> &rarr; v<SUB>557</SUB> : v<SUB>558</SUB>, v<SUB>559</SUB> &rarr; Trueo, v<SUB>561</SUB> &rarr; [], v<SUB>562</SUB> &rarr; 0 : 1 : [2], v<SUB>563</SUB> &rarr; [] ] >];
    10 [label=<O <BR/> get(v<SUB>550</SUB>, C Triple [[] 0 : 1 : [2] []], v<SUB>557</SUB> : v<SUB>558</SUB>)>];
    11 [label=<C <BR/> notEqStick(Two, Two, Trueo), less(0, 0, Trueo), set(Two, 1 : [2], C Triple [[] 0 : 1 : [2] []], v<SUB>560</SUB>), set(Two, 0 : 0 : 1 : [2], v<SUB>560</SUB>, v<SUB>548</SUB>), check(v<SUB>548</SUB>, v<SUB>547</SUB>, Trueo) <BR/>  [ v<SUB>546</SUB> &rarr; (v<SUB>549</SUB>, v<SUB>550</SUB>), v<SUB>549</SUB> &rarr; Two, v<SUB>550</SUB> &rarr; Two, v<SUB>551</SUB> &rarr; Trueo, v<SUB>552</SUB> &rarr; v<SUB>553</SUB> : v<SUB>554</SUB>, v<SUB>553</SUB> &rarr; 0, v<SUB>554</SUB> &rarr; 1 : [2], v<SUB>555</SUB> &rarr; v<SUB>557</SUB> : v<SUB>558</SUB>, v<SUB>557</SUB> &rarr; 0, v<SUB>558</SUB> &rarr; 1 : [2], v<SUB>559</SUB> &rarr; Trueo, v<SUB>561</SUB> &rarr; [], v<SUB>562</SUB> &rarr; 0 : 1 : [2], v<SUB>563</SUB> &rarr; [], v<SUB>564</SUB> &rarr; [], v<SUB>565</SUB> &rarr; 0 : 1 : [2], v<SUB>566</SUB> &rarr; [] ] >];
    12 [label=<_|_>];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 8 [label=""];
    3 -> 4 [label=""];
    4 -> 5 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    8 -> 9 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
}