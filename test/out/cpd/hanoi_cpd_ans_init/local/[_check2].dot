digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> _check(v<SUB>2</SUB>)>];
    1 [label=<C <BR/> _one_stepCheck(v<SUB>4</SUB>, v<SUB>5</SUB>) <BR/>  [ v<SUB>2</SUB> &rarr; v<SUB>4</SUB> : v<SUB>5</SUB> ] >];
    2 [label=<O <BR/> _one_stepCheck(v<SUB>4</SUB>, v<SUB>5</SUB>)>];
    3 [label=<C <BR/> _notEqStickGetSetCheck(v<SUB>5</SUB>, v<SUB>6</SUB>) <BR/>  [ v<SUB>2</SUB> &rarr; v<SUB>4</SUB> : v<SUB>5</SUB>, v<SUB>4</SUB> &rarr; (v<SUB>6</SUB>, Thr) ] >];
    4 [label=<O <BR/> _notEqStickGetSetCheck(v<SUB>5</SUB>, v<SUB>6</SUB>)>];
    5 [label=<C <BR/> ___check(v<SUB>5</SUB>) <BR/>  [ v<SUB>2</SUB> &rarr; v<SUB>4</SUB> : v<SUB>5</SUB>, v<SUB>4</SUB> &rarr; (v<SUB>6</SUB>, Thr), v<SUB>6</SUB> &rarr; Two ] >];
    6 [label=<Leaf <BR/> ___check(v<SUB>5</SUB>) <BR/>  [ v<SUB>2</SUB> &rarr; v<SUB>4</SUB> : v<SUB>5</SUB>, v<SUB>4</SUB> &rarr; (v<SUB>6</SUB>, Thr), v<SUB>6</SUB> &rarr; Two ] >];
    0 -> 1 [label=""];
    1 -> 2 [label=""];
    2 -> 3 [label=""];
    3 -> 4 [label=""];
    4 -> 5 [label=""];
    5 -> 6 [label=""];
}