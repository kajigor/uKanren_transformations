digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> check(C Triple [0 : 1 : [2] [] []], v<SUB>0</SUB>, Trueo)>];
    1 [label=<C <BR/> get(One, C Triple [0 : 1 : [2] [] []], v<SUB>3</SUB>), isNil(v<SUB>3</SUB>, Trueo), get(Two, C Triple [0 : 1 : [2] [] []], v<SUB>4</SUB>), isNil(v<SUB>4</SUB>, Trueo) <BR/>  [ v<SUB>0</SUB> &rarr; [], v<SUB>1</SUB> &rarr; Trueo, v<SUB>2</SUB> &rarr; Trueo ] >];
    2 [label=<C <BR/> one_step(v<SUB>5</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>7</SUB>), check(v<SUB>7</SUB>, v<SUB>6</SUB>, Trueo) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>5</SUB> : v<SUB>6</SUB> ] >];
    3 [label=<O <BR/> get(One, C Triple [0 : 1 : [2] [] []], v<SUB>3</SUB>)>];
    4 [label=<C <BR/> isNil(0 : 1 : [2], Trueo), get(Two, C Triple [0 : 1 : [2] [] []], v<SUB>4</SUB>), isNil(v<SUB>4</SUB>, Trueo) <BR/>  [ v<SUB>0</SUB> &rarr; [], v<SUB>1</SUB> &rarr; Trueo, v<SUB>2</SUB> &rarr; Trueo, v<SUB>3</SUB> &rarr; v<SUB>8</SUB>, v<SUB>8</SUB> &rarr; 0 : 1 : [2], v<SUB>9</SUB> &rarr; [], v<SUB>10</SUB> &rarr; [] ] >];
    5 [label=<_|_>];
    6 [label=<Leaf <BR/> one_step(v<SUB>5</SUB>, C Triple [0 : 1 : [2] [] []], v<SUB>7</SUB>), check(v<SUB>7</SUB>, v<SUB>6</SUB>, Trueo) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>5</SUB> : v<SUB>6</SUB> ] >];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 6 [label=""];
    3 -> 4 [label=""];
    4 -> 5 [label=""];
}