digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> input_clause(C Pos [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]] : v<SUB>10</SUB>)>];
    1 [label=<C <BR/> proveall([], [C Pos [C App [[] v<SUB>15</SUB> v<SUB>15</SUB>]]]) <BR/>  [ v<SUB>0</SUB> &rarr; [], v<SUB>1</SUB> &rarr; v<SUB>15</SUB>, v<SUB>2</SUB> &rarr; v<SUB>15</SUB>, v<SUB>10</SUB> &rarr; [] ] >];
    2 [label=<C <BR/> proveall([C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]]], [C Pos [C App [v<SUB>16</SUB> : v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>16</SUB> : v<SUB>19</SUB>]]]) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>16</SUB> : v<SUB>17</SUB>, v<SUB>1</SUB> &rarr; v<SUB>18</SUB>, v<SUB>2</SUB> &rarr; v<SUB>16</SUB> : v<SUB>19</SUB>, v<SUB>10</SUB> &rarr; [C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]]] ] >];
    3 [label=<O <BR/> proveall([], [C Pos [C App [[] v<SUB>15</SUB> v<SUB>15</SUB>]]])>];
    4 [label=<S <BR/>  [ v<SUB>0</SUB> &rarr; [], v<SUB>1</SUB> &rarr; v<SUB>15</SUB>, v<SUB>2</SUB> &rarr; v<SUB>15</SUB>, v<SUB>10</SUB> &rarr; [] ] >];
    5 [label=<O <BR/> proveall([C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]]], [C Pos [C App [v<SUB>16</SUB> : v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>16</SUB> : v<SUB>19</SUB>]]])>];
    6 [label=<C <BR/> prove(C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]], []), proveall([], []) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>16</SUB> : v<SUB>17</SUB>, v<SUB>1</SUB> &rarr; v<SUB>18</SUB>, v<SUB>2</SUB> &rarr; v<SUB>16</SUB> : v<SUB>19</SUB>, v<SUB>10</SUB> &rarr; [C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]]], v<SUB>20</SUB> &rarr; C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]], v<SUB>21</SUB> &rarr; [] ] >];
    7 [label=<O <BR/> proveall([], [])>];
    8 [label=<C <BR/> prove(C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]], []) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>16</SUB> : v<SUB>17</SUB>, v<SUB>1</SUB> &rarr; v<SUB>18</SUB>, v<SUB>2</SUB> &rarr; v<SUB>16</SUB> : v<SUB>19</SUB>, v<SUB>10</SUB> &rarr; [C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]]], v<SUB>20</SUB> &rarr; C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]], v<SUB>21</SUB> &rarr; [] ] >];
    9 [label=<Leaf <BR/> prove(C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]], []) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>16</SUB> : v<SUB>17</SUB>, v<SUB>1</SUB> &rarr; v<SUB>18</SUB>, v<SUB>2</SUB> &rarr; v<SUB>16</SUB> : v<SUB>19</SUB>, v<SUB>10</SUB> &rarr; [C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]]], v<SUB>20</SUB> &rarr; C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]], v<SUB>21</SUB> &rarr; [] ] >];
    0 -> 1 [label=""];
    0 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 5 [label=""];
    3 -> 4 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    7 -> 8 [label=""];
    8 -> 9 [label=""];
}