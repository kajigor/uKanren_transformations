digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<O <BR/> solve([C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]])>];
    1 [label=<C <BR/> solve_atom(C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]), solve([]) <BR/>  [ v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [] ] >];
    2 [label=<O <BR/> solve_atom(C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]])>];
    3 [label=<C <BR/> my_clause(C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>5</SUB>), solve(v<SUB>5</SUB>), solve([]) <BR/>  [ v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [] ] >];
    4 [label=<O <BR/> my_clause(C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>5</SUB>)>];
    5 [label=<C <BR/> solve(C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>] : [C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]]), solve([]) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>6</SUB>, v<SUB>1</SUB> &rarr; v<SUB>7</SUB>, v<SUB>2</SUB> &rarr; v<SUB>8</SUB>, v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [], v<SUB>5</SUB> &rarr; C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>] : [C App [v<SUB>10</SUB> v<SUB>8</SUB> v<SUB>9</SUB>]], v<SUB>9</SUB> &rarr; S : 1 : 2 : [1] ] >];
    6 [label=<C <BR/> solve([C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]]), solve([]) <BR/>  [ v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [], v<SUB>5</SUB> &rarr; [C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]] ] >];
    7 [label=<O <BR/> solve(C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>] : [C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]])>];
    8 [label=<C <BR/> solve_atom(C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>]), solve([C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]]), solve([]) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>6</SUB>, v<SUB>1</SUB> &rarr; v<SUB>7</SUB>, v<SUB>2</SUB> &rarr; v<SUB>8</SUB>, v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [], v<SUB>5</SUB> &rarr; C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>] : [C App [v<SUB>10</SUB> v<SUB>8</SUB> v<SUB>9</SUB>]], v<SUB>9</SUB> &rarr; S : 1 : 2 : [1], v<SUB>25</SUB> &rarr; C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>], v<SUB>26</SUB> &rarr; [C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]] ] >];
    9 [label=<O <BR/> solve([C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]])>];
    10 [label=<C <BR/> solve_atom(C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>]), solve_atom(C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]), solve([]), solve([]) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>6</SUB>, v<SUB>1</SUB> &rarr; v<SUB>7</SUB>, v<SUB>2</SUB> &rarr; v<SUB>8</SUB>, v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [], v<SUB>5</SUB> &rarr; C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>] : [C App [v<SUB>10</SUB> v<SUB>8</SUB> v<SUB>9</SUB>]], v<SUB>9</SUB> &rarr; S : 1 : 2 : [1], v<SUB>25</SUB> &rarr; C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>], v<SUB>26</SUB> &rarr; [C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]], v<SUB>27</SUB> &rarr; C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]], v<SUB>28</SUB> &rarr; [] ] >];
    11 [label=<O <BR/> solve([])>];
    12 [label=<C <BR/> solve_atom(C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>]), solve_atom(C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]), solve([]) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>6</SUB>, v<SUB>1</SUB> &rarr; v<SUB>7</SUB>, v<SUB>2</SUB> &rarr; v<SUB>8</SUB>, v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [], v<SUB>5</SUB> &rarr; C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>] : [C App [v<SUB>10</SUB> v<SUB>8</SUB> v<SUB>9</SUB>]], v<SUB>9</SUB> &rarr; S : 1 : 2 : [1], v<SUB>25</SUB> &rarr; C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>], v<SUB>26</SUB> &rarr; [C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]], v<SUB>27</SUB> &rarr; C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]], v<SUB>28</SUB> &rarr; [] ] >];
    13 [label=<O <BR/> solve([])>];
    14 [label=<C <BR/> solve_atom(C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>]), solve_atom(C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>6</SUB>, v<SUB>1</SUB> &rarr; v<SUB>7</SUB>, v<SUB>2</SUB> &rarr; v<SUB>8</SUB>, v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [], v<SUB>5</SUB> &rarr; C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>] : [C App [v<SUB>10</SUB> v<SUB>8</SUB> v<SUB>9</SUB>]], v<SUB>9</SUB> &rarr; S : 1 : 2 : [1], v<SUB>25</SUB> &rarr; C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>], v<SUB>26</SUB> &rarr; [C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]], v<SUB>27</SUB> &rarr; C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]], v<SUB>28</SUB> &rarr; [] ] >];
    15 [label=<Leaf <BR/> solve_atom(C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>]), solve_atom(C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]) <BR/>  [ v<SUB>0</SUB> &rarr; v<SUB>6</SUB>, v<SUB>1</SUB> &rarr; v<SUB>7</SUB>, v<SUB>2</SUB> &rarr; v<SUB>8</SUB>, v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [], v<SUB>5</SUB> &rarr; C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>] : [C App [v<SUB>10</SUB> v<SUB>8</SUB> v<SUB>9</SUB>]], v<SUB>9</SUB> &rarr; S : 1 : 2 : [1], v<SUB>25</SUB> &rarr; C App [v<SUB>6</SUB> v<SUB>7</SUB> v<SUB>10</SUB>], v<SUB>26</SUB> &rarr; [C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]]], v<SUB>27</SUB> &rarr; C App [v<SUB>10</SUB> v<SUB>8</SUB> S : 1 : 2 : [1]], v<SUB>28</SUB> &rarr; [] ] >];
    16 [label=<O <BR/> solve([])>];
    17 [label=<C <BR/> solve([C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]]) <BR/>  [ v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [], v<SUB>5</SUB> &rarr; [C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]] ] >];
    18 [label=<Leaf <BR/> solve([C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]]) <BR/>  [ v<SUB>3</SUB> &rarr; C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]], v<SUB>4</SUB> &rarr; [], v<SUB>5</SUB> &rarr; [C DoubleApp [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB> S : 1 : 2 : [1]]] ] >];
    0 -> 1 [label=""];
    1 -> 2 [label=""];
    2 -> 3 [label=""];
    3 -> 4 [label=""];
    4 -> 5 [label=""];
    4 -> 6 [label=""];
    5 -> 7 [label=""];
    6 -> 16 [label=""];
    7 -> 8 [label=""];
    8 -> 9 [label=""];
    9 -> 10 [label=""];
    10 -> 11 [label=""];
    11 -> 12 [label=""];
    12 -> 13 [label=""];
    13 -> 14 [label=""];
    14 -> 15 [label=""];
    16 -> 17 [label=""];
    17 -> 18 [label=""];
}