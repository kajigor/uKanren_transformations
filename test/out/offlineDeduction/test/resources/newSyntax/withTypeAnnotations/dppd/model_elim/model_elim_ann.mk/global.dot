digraph {
    graph [rankdir=TB
          ,bgcolor=transparent];
    node [shape=box
         ,fillcolor=white
         ,style=filled];
    0 [label=<N <BR/> solve(C Neg [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]], []) <BR/>  [  ] >];
    1 [label=<N <BR/> contrapositive(C Impl [C Pos [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]] v<SUB>6</SUB>]), proveall(v<SUB>6</SUB>, [C Pos [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]]]) <BR/>  [  ] >];
    2 [label=<N <BR/> input_clause(C Pos [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]] : v<SUB>10</SUB>), proveall(v<SUB>10</SUB>, [C Pos [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]]]) <BR/>  [  ] >];
    3 [label=<N <BR/> input_clause(v<SUB>15</SUB> : v<SUB>14</SUB>), contrapositive1(C Pos [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]], v<SUB>14</SUB>, v<SUB>16</SUB>), prove(v<SUB>15</SUB>, [C Pos [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]]]), proveall(v<SUB>16</SUB>, [C Pos [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]]]) <BR/>  [  ] >];
    4 [label=<L <BR/> >];
    5 [label=<N <BR/> prove(C Neg [C App [v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>19</SUB>]], [C Pos [C App [v<SUB>16</SUB> : v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>16</SUB> : v<SUB>19</SUB>]]]) <BR/>  [  ] >];
    6 [label=<N <BR/> contrapositive(C Impl [C Pos [C App [v<SUB>28</SUB> v<SUB>29</SUB> v<SUB>30</SUB>]] v<SUB>31</SUB>]), proveall(v<SUB>31</SUB>, C Pos [C App [v<SUB>28</SUB> v<SUB>29</SUB> v<SUB>30</SUB>]] : v<SUB>36</SUB>) <BR/>  [ v<SUB>28</SUB> &rarr; v<SUB>17</SUB>, v<SUB>29</SUB> &rarr; v<SUB>18</SUB>, v<SUB>30</SUB> &rarr; v<SUB>19</SUB>, v<SUB>31</SUB> &rarr; v<SUB>25</SUB>, v<SUB>36</SUB> &rarr; [C Pos [C App [v<SUB>16</SUB> : v<SUB>17</SUB> v<SUB>18</SUB> v<SUB>16</SUB> : v<SUB>19</SUB>]]] ] >];
    7 [label=<N <BR/> input_clause(C Pos [C App [v<SUB>28</SUB> v<SUB>29</SUB> v<SUB>30</SUB>]] : v<SUB>38</SUB>), proveall(v<SUB>38</SUB>, C Pos [C App [v<SUB>28</SUB> v<SUB>29</SUB> v<SUB>30</SUB>]] : v<SUB>36</SUB>) <BR/>  [  ] >];
    8 [label=<N <BR/> input_clause(v<SUB>43</SUB> : v<SUB>42</SUB>), contrapositive1(C Pos [C App [v<SUB>28</SUB> v<SUB>29</SUB> v<SUB>30</SUB>]], v<SUB>42</SUB>, v<SUB>44</SUB>), prove(v<SUB>43</SUB>, C Pos [C App [v<SUB>28</SUB> v<SUB>29</SUB> v<SUB>30</SUB>]] : v<SUB>36</SUB>), proveall(v<SUB>44</SUB>, C Pos [C App [v<SUB>28</SUB> v<SUB>29</SUB> v<SUB>30</SUB>]] : v<SUB>36</SUB>) <BR/>  [  ] >];
    9 [label=<L <BR/> >];
    10 [label=<N <BR/> prove(C Neg [C App [v<SUB>45</SUB> v<SUB>46</SUB> v<SUB>47</SUB>]], C Pos [C App [v<SUB>44</SUB> : v<SUB>45</SUB> v<SUB>46</SUB> v<SUB>44</SUB> : v<SUB>47</SUB>]] : v<SUB>36</SUB>) <BR/>  [  ] >];
    11 [label=<L <BR/> contrapositive(C Impl [C Pos [C App [v<SUB>56</SUB> v<SUB>57</SUB> v<SUB>58</SUB>]] v<SUB>59</SUB>]), proveall(v<SUB>59</SUB>, C Pos [C App [v<SUB>56</SUB> v<SUB>57</SUB> v<SUB>58</SUB>]] : v<SUB>64</SUB>)>];
    12 [label=<N <BR/> member(C Neg [C App [v<SUB>45</SUB> v<SUB>46</SUB> v<SUB>47</SUB>]], v<SUB>56</SUB>) <BR/>  [  ] >];
    13 [label=<L <BR/> >];
    14 [label=<L <BR/> member(C Neg [C App [v<SUB>45</SUB> v<SUB>46</SUB> v<SUB>47</SUB>]], v<SUB>59</SUB>)>];
    15 [label=<L <BR/> input_clause(v<SUB>15</SUB> : v<SUB>14</SUB>), contrapositive1(C Pos [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]], v<SUB>14</SUB>, v<SUB>16</SUB>), prove(v<SUB>15</SUB>, [C Pos [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]]]), proveall(v<SUB>16</SUB>, [C Pos [C App [v<SUB>0</SUB> v<SUB>1</SUB> v<SUB>2</SUB>]]])>];
    0 -> 1 [label=""];
    1 -> 2 [label=""];
    1 -> 3 [label=""];
    2 -> 4 [label=""];
    2 -> 5 [label=""];
    3 -> 15 [label=""];
    5 -> 6 [label=""];
    6 -> 7 [label=""];
    6 -> 8 [label=""];
    7 -> 9 [label=""];
    7 -> 10 [label=""];
    10 -> 11 [label=""];
    10 -> 12 [label=""];
    12 -> 13 [label=""];
    12 -> 14 [label=""];
}