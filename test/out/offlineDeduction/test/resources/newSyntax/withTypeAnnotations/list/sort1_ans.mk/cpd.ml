open GT
open OCanren
open OCanren.Std
open Helper

let topLevel x0 x1 = 
  let rec splito y0 y1 = (((y1 === (((zero ())) % ((((succ ((succ ((zero ())))))) % ((((succ ((zero ())))) % ((((succ ((succ ((succ ((succ ((zero ())))))))))) % ((((succ ((succ ((succ ((zero ())))))))) % ((List.nil ())))))))))))) &&& (y0 === (succ ((succ ((zero ()))))))) ||| ((y1 === (((zero ())) % ((((succ ((succ ((zero ())))))) % ((((succ ((succ ((succ ((succ ((zero ())))))))))) % ((((succ ((zero ())))) % ((((succ ((succ ((succ ((zero ())))))))) % ((List.nil ())))))))))))) &&& (y0 === (succ ((succ ((zero ()))))))) ||| ((y1 === (((zero ())) % ((((succ ((succ ((zero ())))))) % ((((succ ((succ ((succ ((succ ((zero ())))))))))) % ((((succ ((succ ((succ ((zero ())))))))) % ((((succ ((zero ())))) % ((List.nil ())))))))))))) &&& (y0 === (succ ((succ ((zero ()))))))) ||| ((y1 === (((zero ())) % ((((succ ((succ ((succ ((succ ((zero ())))))))))) % ((((succ ((succ ((zero ())))))) % ((((succ ((zero ())))) % ((((succ ((succ ((succ ((zero ())))))))) % ((List.nil ())))))))))))) &&& (y0 === (succ ((succ ((zero ()))))))) ||| ((y1 === (((zero ())) % ((((succ ((succ ((succ ((succ ((zero ())))))))))) % ((((succ ((succ ((zero ())))))) % ((((succ ((succ ((succ ((zero ())))))))) % ((((succ ((zero ())))) % ((List.nil ())))))))))))) &&& (y0 === (succ ((succ ((zero ()))))))) ||| ((y1 === (((zero ())) % ((((succ ((succ ((succ ((succ ((zero ())))))))))) % ((((succ ((succ ((succ ((zero ())))))))) % ((((succ ((succ ((zero ())))))) % ((((succ ((zero ())))) % ((List.nil ())))))))))))) &&& (y0 === (succ ((succ ((zero ()))))))) ||| ((y1 === (((succ ((succ ((succ ((succ ((zero ())))))))))) % ((((zero ())) % ((((succ ((succ ((zero ())))))) % ((((succ ((zero ())))) % ((((succ ((succ ((succ ((zero ())))))))) % ((List.nil ())))))))))))) &&& (y0 === (succ ((succ ((zero ()))))))) ||| ((y1 === (((succ ((succ ((succ ((succ ((zero ())))))))))) % ((((zero ())) % ((((succ ((succ ((zero ())))))) % ((((succ ((succ ((succ ((zero ())))))))) % ((((succ ((zero ())))) % ((List.nil ())))))))))))) &&& (y0 === (succ ((succ ((zero ()))))))) ||| ((y1 === (((succ ((succ ((succ ((succ ((zero ())))))))))) % ((((zero ())) % ((((succ ((succ ((succ ((zero ())))))))) % ((((succ ((succ ((zero ())))))) % ((((succ ((zero ())))) % ((List.nil ())))))))))))) &&& (y0 === (succ ((succ ((zero ()))))))) ||| ((y1 === (((succ ((succ ((succ ((succ ((zero ())))))))))) % ((((succ ((succ ((succ ((zero ())))))))) % ((((zero ())) % ((((succ ((succ ((zero ())))))) % ((((succ ((zero ())))) % ((List.nil ())))))))))))) &&& (y0 === (succ ((succ ((zero ())))))))) 
  in  (splito x0 x1)
