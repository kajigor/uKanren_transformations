module Ex_depth_unfold where

import Stream
import Control.Monad

data Term
    = Cons Term Term
    | Nil
    | O
    | S Term
    deriving (Show, Eq)
solveII :: MonadPlus m => Term -> Term -> m ()
solveII x0 x1 = msum [do {let {x16 = O};
                          let {x15 = S x16};
                          let {x14 = S x15};
                          let {x13 = S x14};
                          let {x12 = S x13};
                          let {x11 = S x12};
                          let {x10 = S x11};
                          let {x9 = S x10};
                          let {x8 = S x9};
                          let {x7 = S x8};
                          let {x6 = S x7};
                          let {x5 = S x6};
                          let {x4 = S x5};
                          let {x3 = S x4};
                          let {x2 = S x3};
                          let {x20 = O};
                          let {x19 = S x20};
                          let {x18 = S x19};
                          let {x23 = O};
                          let {x22 = S x23};
                          let {x25 = O};
                          let {x29 = O};
                          let {x28 = S x29};
                          let {x27 = S x28};
                          let {x32 = O};
                          let {x31 = S x32};
                          let {x34 = O};
                          let {x37 = O};
                          let {x36 = S x37};
                          let {x41 = O};
                          let {x40 = S x41};
                          let {x39 = S x40};
                          let {x43 = O};
                          let {x44 = Nil};
                          let {x42 = Cons x43 x44};
                          let {x38 = Cons x39 x42};
                          let {x35 = Cons x36 x38};
                          let {x33 = Cons x34 x35};
                          let {x30 = Cons x31 x33};
                          let {x26 = Cons x27 x30};
                          let {x24 = Cons x25 x26};
                          let {x21 = Cons x22 x24};
                          x17 <- case x1 of
                                 {S y17 -> return y17; _ -> mzero};
                          guard (x17 == x2);
                          (x45, x46) <- case x0 of
                                        {Cons y45 y46 -> return (y45, y46); _ -> mzero};
                          guard (x45 == x18);
                          guard (x46 == x21);
                          return ()},
                      do {let {x62 = O};
                          let {x61 = S x62};
                          let {x60 = S x61};
                          let {x59 = S x60};
                          let {x58 = S x59};
                          let {x57 = S x58};
                          let {x56 = S x57};
                          let {x55 = S x56};
                          let {x54 = S x55};
                          let {x53 = S x54};
                          let {x52 = S x53};
                          let {x51 = S x52};
                          let {x50 = S x51};
                          let {x49 = S x50};
                          let {x48 = S x49};
                          let {x47 = S x48};
                          let {x66 = O};
                          let {x65 = S x66};
                          let {x64 = S x65};
                          let {x69 = O};
                          let {x68 = S x69};
                          let {x71 = O};
                          let {x75 = O};
                          let {x74 = S x75};
                          let {x73 = S x74};
                          let {x78 = O};
                          let {x77 = S x78};
                          let {x80 = O};
                          let {x83 = O};
                          let {x82 = S x83};
                          let {x87 = O};
                          let {x86 = S x87};
                          let {x85 = S x86};
                          let {x89 = O};
                          let {x90 = Nil};
                          let {x88 = Cons x89 x90};
                          let {x84 = Cons x85 x88};
                          let {x81 = Cons x82 x84};
                          let {x79 = Cons x80 x81};
                          let {x76 = Cons x77 x79};
                          let {x72 = Cons x73 x76};
                          let {x70 = Cons x71 x72};
                          let {x67 = Cons x68 x70};
                          x63 <- case x1 of
                                 {S y63 -> return y63; _ -> mzero};
                          guard (x63 == x47);
                          (x91, x92) <- case x0 of
                                        {Cons y91 y92 -> return (y91, y92); _ -> mzero};
                          guard (x91 == x64);
                          guard (x92 == x67);
                          return ()},
                      do {let {x110 = O};
                          let {x109 = S x110};
                          let {x108 = S x109};
                          let {x107 = S x108};
                          let {x106 = S x107};
                          let {x105 = S x106};
                          let {x104 = S x105};
                          let {x103 = S x104};
                          let {x102 = S x103};
                          let {x101 = S x102};
                          let {x100 = S x101};
                          let {x99 = S x100};
                          let {x98 = S x99};
                          let {x97 = S x98};
                          let {x96 = S x97};
                          let {x95 = S x96};
                          let {x94 = S x95};
                          let {x93 = S x94};
                          let {x114 = O};
                          let {x113 = S x114};
                          let {x112 = S x113};
                          let {x117 = O};
                          let {x116 = S x117};
                          let {x119 = O};
                          let {x123 = O};
                          let {x122 = S x123};
                          let {x121 = S x122};
                          let {x126 = O};
                          let {x125 = S x126};
                          let {x128 = O};
                          let {x131 = O};
                          let {x130 = S x131};
                          let {x135 = O};
                          let {x134 = S x135};
                          let {x133 = S x134};
                          let {x137 = O};
                          let {x138 = Nil};
                          let {x136 = Cons x137 x138};
                          let {x132 = Cons x133 x136};
                          let {x129 = Cons x130 x132};
                          let {x127 = Cons x128 x129};
                          let {x124 = Cons x125 x127};
                          let {x120 = Cons x121 x124};
                          let {x118 = Cons x119 x120};
                          let {x115 = Cons x116 x118};
                          x111 <- case x1 of
                                  {S y111 -> return y111; _ -> mzero};
                          guard (x111 == x93);
                          (x139, x140) <- case x0 of
                                          {Cons y139 y140 -> return (y139, y140); _ -> mzero};
                          guard (x139 == x112);
                          guard (x140 == x115);
                          return ()},
                      do {let {x159 = O};
                          let {x158 = S x159};
                          let {x157 = S x158};
                          let {x156 = S x157};
                          let {x155 = S x156};
                          let {x154 = S x155};
                          let {x153 = S x154};
                          let {x152 = S x153};
                          let {x151 = S x152};
                          let {x150 = S x151};
                          let {x149 = S x150};
                          let {x148 = S x149};
                          let {x147 = S x148};
                          let {x146 = S x147};
                          let {x145 = S x146};
                          let {x144 = S x145};
                          let {x143 = S x144};
                          let {x142 = S x143};
                          let {x141 = S x142};
                          let {x163 = O};
                          let {x162 = S x163};
                          let {x161 = S x162};
                          let {x166 = O};
                          let {x165 = S x166};
                          let {x168 = O};
                          let {x172 = O};
                          let {x171 = S x172};
                          let {x170 = S x171};
                          let {x175 = O};
                          let {x174 = S x175};
                          let {x177 = O};
                          let {x180 = O};
                          let {x179 = S x180};
                          let {x184 = O};
                          let {x183 = S x184};
                          let {x182 = S x183};
                          let {x186 = O};
                          let {x187 = Nil};
                          let {x185 = Cons x186 x187};
                          let {x181 = Cons x182 x185};
                          let {x178 = Cons x179 x181};
                          let {x176 = Cons x177 x178};
                          let {x173 = Cons x174 x176};
                          let {x169 = Cons x170 x173};
                          let {x167 = Cons x168 x169};
                          let {x164 = Cons x165 x167};
                          x160 <- case x1 of
                                  {S y160 -> return y160; _ -> mzero};
                          guard (x160 == x141);
                          (x188, x189) <- case x0 of
                                          {Cons y188 y189 -> return (y188, y189); _ -> mzero};
                          guard (x188 == x161);
                          guard (x189 == x164);
                          return ()},
                      do {let {x205 = O};
                          let {x204 = S x205};
                          let {x203 = S x204};
                          let {x202 = S x203};
                          let {x201 = S x202};
                          let {x200 = S x201};
                          let {x199 = S x200};
                          let {x198 = S x199};
                          let {x197 = S x198};
                          let {x196 = S x197};
                          let {x195 = S x196};
                          let {x194 = S x195};
                          let {x193 = S x194};
                          let {x192 = S x193};
                          let {x191 = S x192};
                          let {x190 = S x191};
                          let {x209 = O};
                          let {x208 = S x209};
                          let {x207 = S x208};
                          let {x212 = O};
                          let {x211 = S x212};
                          let {x214 = O};
                          let {x218 = O};
                          let {x217 = S x218};
                          let {x216 = S x217};
                          let {x221 = O};
                          let {x220 = S x221};
                          let {x223 = O};
                          let {x226 = O};
                          let {x225 = S x226};
                          let {x230 = O};
                          let {x229 = S x230};
                          let {x228 = S x229};
                          let {x232 = O};
                          let {x233 = Nil};
                          let {x231 = Cons x232 x233};
                          let {x227 = Cons x228 x231};
                          let {x224 = Cons x225 x227};
                          let {x222 = Cons x223 x224};
                          let {x219 = Cons x220 x222};
                          let {x215 = Cons x216 x219};
                          let {x213 = Cons x214 x215};
                          let {x210 = Cons x211 x213};
                          x206 <- case x1 of
                                  {S y206 -> return y206; _ -> mzero};
                          guard (x206 == x190);
                          (x234, x235) <- case x0 of
                                          {Cons y234 y235 -> return (y234, y235); _ -> mzero};
                          guard (x234 == x207);
                          guard (x235 == x210);
                          return ()},
                      do {let {x252 = O};
                          let {x251 = S x252};
                          let {x250 = S x251};
                          let {x249 = S x250};
                          let {x248 = S x249};
                          let {x247 = S x248};
                          let {x246 = S x247};
                          let {x245 = S x246};
                          let {x244 = S x245};
                          let {x243 = S x244};
                          let {x242 = S x243};
                          let {x241 = S x242};
                          let {x240 = S x241};
                          let {x239 = S x240};
                          let {x238 = S x239};
                          let {x237 = S x238};
                          let {x236 = S x237};
                          let {x256 = O};
                          let {x255 = S x256};
                          let {x254 = S x255};
                          let {x259 = O};
                          let {x258 = S x259};
                          let {x261 = O};
                          let {x265 = O};
                          let {x264 = S x265};
                          let {x263 = S x264};
                          let {x268 = O};
                          let {x267 = S x268};
                          let {x270 = O};
                          let {x273 = O};
                          let {x272 = S x273};
                          let {x277 = O};
                          let {x276 = S x277};
                          let {x275 = S x276};
                          let {x279 = O};
                          let {x280 = Nil};
                          let {x278 = Cons x279 x280};
                          let {x274 = Cons x275 x278};
                          let {x271 = Cons x272 x274};
                          let {x269 = Cons x270 x271};
                          let {x266 = Cons x267 x269};
                          let {x262 = Cons x263 x266};
                          let {x260 = Cons x261 x262};
                          let {x257 = Cons x258 x260};
                          x253 <- case x1 of
                                  {S y253 -> return y253; _ -> mzero};
                          guard (x253 == x236);
                          (x281, x282) <- case x0 of
                                          {Cons y281 y282 -> return (y281, y282); _ -> mzero};
                          guard (x281 == x254);
                          guard (x282 == x257);
                          return ()},
                      do {let {x301 = O};
                          let {x300 = S x301};
                          let {x299 = S x300};
                          let {x298 = S x299};
                          let {x297 = S x298};
                          let {x296 = S x297};
                          let {x295 = S x296};
                          let {x294 = S x295};
                          let {x293 = S x294};
                          let {x292 = S x293};
                          let {x291 = S x292};
                          let {x290 = S x291};
                          let {x289 = S x290};
                          let {x288 = S x289};
                          let {x287 = S x288};
                          let {x286 = S x287};
                          let {x285 = S x286};
                          let {x284 = S x285};
                          let {x283 = S x284};
                          let {x305 = O};
                          let {x304 = S x305};
                          let {x303 = S x304};
                          let {x308 = O};
                          let {x307 = S x308};
                          let {x310 = O};
                          let {x314 = O};
                          let {x313 = S x314};
                          let {x312 = S x313};
                          let {x317 = O};
                          let {x316 = S x317};
                          let {x319 = O};
                          let {x322 = O};
                          let {x321 = S x322};
                          let {x326 = O};
                          let {x325 = S x326};
                          let {x324 = S x325};
                          let {x328 = O};
                          let {x329 = Nil};
                          let {x327 = Cons x328 x329};
                          let {x323 = Cons x324 x327};
                          let {x320 = Cons x321 x323};
                          let {x318 = Cons x319 x320};
                          let {x315 = Cons x316 x318};
                          let {x311 = Cons x312 x315};
                          let {x309 = Cons x310 x311};
                          let {x306 = Cons x307 x309};
                          x302 <- case x1 of
                                  {S y302 -> return y302; _ -> mzero};
                          guard (x302 == x283);
                          (x330, x331) <- case x0 of
                                          {Cons y330 y331 -> return (y330, y331); _ -> mzero};
                          guard (x330 == x303);
                          guard (x331 == x306);
                          return ()},
                      do {let {x351 = O};
                          let {x350 = S x351};
                          let {x349 = S x350};
                          let {x348 = S x349};
                          let {x347 = S x348};
                          let {x346 = S x347};
                          let {x345 = S x346};
                          let {x344 = S x345};
                          let {x343 = S x344};
                          let {x342 = S x343};
                          let {x341 = S x342};
                          let {x340 = S x341};
                          let {x339 = S x340};
                          let {x338 = S x339};
                          let {x337 = S x338};
                          let {x336 = S x337};
                          let {x335 = S x336};
                          let {x334 = S x335};
                          let {x333 = S x334};
                          let {x332 = S x333};
                          let {x355 = O};
                          let {x354 = S x355};
                          let {x353 = S x354};
                          let {x358 = O};
                          let {x357 = S x358};
                          let {x360 = O};
                          let {x364 = O};
                          let {x363 = S x364};
                          let {x362 = S x363};
                          let {x367 = O};
                          let {x366 = S x367};
                          let {x369 = O};
                          let {x372 = O};
                          let {x371 = S x372};
                          let {x376 = O};
                          let {x375 = S x376};
                          let {x374 = S x375};
                          let {x378 = O};
                          let {x379 = Nil};
                          let {x377 = Cons x378 x379};
                          let {x373 = Cons x374 x377};
                          let {x370 = Cons x371 x373};
                          let {x368 = Cons x369 x370};
                          let {x365 = Cons x366 x368};
                          let {x361 = Cons x362 x365};
                          let {x359 = Cons x360 x361};
                          let {x356 = Cons x357 x359};
                          x352 <- case x1 of
                                  {S y352 -> return y352; _ -> mzero};
                          guard (x352 == x332);
                          (x380, x381) <- case x0 of
                                          {Cons y380 y381 -> return (y380, y381); _ -> mzero};
                          guard (x380 == x353);
                          guard (x381 == x356);
                          return ()}]
                          
solveIO :: MonadPlus m => Term -> m Term
solveIO x0 = msum [do {let {x16 = O};
                       let {x15 = S x16};
                       let {x14 = S x15};
                       let {x13 = S x14};
                       let {x12 = S x13};
                       let {x11 = S x12};
                       let {x10 = S x11};
                       let {x9 = S x10};
                       let {x8 = S x9};
                       let {x7 = S x8};
                       let {x6 = S x7};
                       let {x5 = S x6};
                       let {x4 = S x5};
                       let {x3 = S x4};
                       let {x2 = S x3};
                       let {x20 = O};
                       let {x19 = S x20};
                       let {x18 = S x19};
                       let {x23 = O};
                       let {x22 = S x23};
                       let {x25 = O};
                       let {x29 = O};
                       let {x28 = S x29};
                       let {x27 = S x28};
                       let {x32 = O};
                       let {x31 = S x32};
                       let {x34 = O};
                       let {x37 = O};
                       let {x36 = S x37};
                       let {x41 = O};
                       let {x40 = S x41};
                       let {x39 = S x40};
                       let {x43 = O};
                       let {x44 = Nil};
                       let {x42 = Cons x43 x44};
                       let {x38 = Cons x39 x42};
                       let {x35 = Cons x36 x38};
                       let {x33 = Cons x34 x35};
                       let {x30 = Cons x31 x33};
                       let {x26 = Cons x27 x30};
                       let {x24 = Cons x25 x26};
                       let {x21 = Cons x22 x24};
                       (x45, x46) <- case x0 of
                                     {Cons y45 y46 -> return (y45, y46); _ -> mzero};
                       guard (x45 == x18);
                       guard (x46 == x21);
                       let {x17 = x2};
                       let {x1 = S x17};
                       return x1},
                   do {let {x62 = O};
                       let {x61 = S x62};
                       let {x60 = S x61};
                       let {x59 = S x60};
                       let {x58 = S x59};
                       let {x57 = S x58};
                       let {x56 = S x57};
                       let {x55 = S x56};
                       let {x54 = S x55};
                       let {x53 = S x54};
                       let {x52 = S x53};
                       let {x51 = S x52};
                       let {x50 = S x51};
                       let {x49 = S x50};
                       let {x48 = S x49};
                       let {x47 = S x48};
                       let {x66 = O};
                       let {x65 = S x66};
                       let {x64 = S x65};
                       let {x69 = O};
                       let {x68 = S x69};
                       let {x71 = O};
                       let {x75 = O};
                       let {x74 = S x75};
                       let {x73 = S x74};
                       let {x78 = O};
                       let {x77 = S x78};
                       let {x80 = O};
                       let {x83 = O};
                       let {x82 = S x83};
                       let {x87 = O};
                       let {x86 = S x87};
                       let {x85 = S x86};
                       let {x89 = O};
                       let {x90 = Nil};
                       let {x88 = Cons x89 x90};
                       let {x84 = Cons x85 x88};
                       let {x81 = Cons x82 x84};
                       let {x79 = Cons x80 x81};
                       let {x76 = Cons x77 x79};
                       let {x72 = Cons x73 x76};
                       let {x70 = Cons x71 x72};
                       let {x67 = Cons x68 x70};
                       (x91, x92) <- case x0 of
                                     {Cons y91 y92 -> return (y91, y92); _ -> mzero};
                       guard (x91 == x64);
                       guard (x92 == x67);
                       let {x63 = x47};
                       let {x1 = S x63};
                       return x1},
                   do {let {x110 = O};
                       let {x109 = S x110};
                       let {x108 = S x109};
                       let {x107 = S x108};
                       let {x106 = S x107};
                       let {x105 = S x106};
                       let {x104 = S x105};
                       let {x103 = S x104};
                       let {x102 = S x103};
                       let {x101 = S x102};
                       let {x100 = S x101};
                       let {x99 = S x100};
                       let {x98 = S x99};
                       let {x97 = S x98};
                       let {x96 = S x97};
                       let {x95 = S x96};
                       let {x94 = S x95};
                       let {x93 = S x94};
                       let {x114 = O};
                       let {x113 = S x114};
                       let {x112 = S x113};
                       let {x117 = O};
                       let {x116 = S x117};
                       let {x119 = O};
                       let {x123 = O};
                       let {x122 = S x123};
                       let {x121 = S x122};
                       let {x126 = O};
                       let {x125 = S x126};
                       let {x128 = O};
                       let {x131 = O};
                       let {x130 = S x131};
                       let {x135 = O};
                       let {x134 = S x135};
                       let {x133 = S x134};
                       let {x137 = O};
                       let {x138 = Nil};
                       let {x136 = Cons x137 x138};
                       let {x132 = Cons x133 x136};
                       let {x129 = Cons x130 x132};
                       let {x127 = Cons x128 x129};
                       let {x124 = Cons x125 x127};
                       let {x120 = Cons x121 x124};
                       let {x118 = Cons x119 x120};
                       let {x115 = Cons x116 x118};
                       (x139, x140) <- case x0 of
                                       {Cons y139 y140 -> return (y139, y140); _ -> mzero};
                       guard (x139 == x112);
                       guard (x140 == x115);
                       let {x111 = x93};
                       let {x1 = S x111};
                       return x1},
                   do {let {x159 = O};
                       let {x158 = S x159};
                       let {x157 = S x158};
                       let {x156 = S x157};
                       let {x155 = S x156};
                       let {x154 = S x155};
                       let {x153 = S x154};
                       let {x152 = S x153};
                       let {x151 = S x152};
                       let {x150 = S x151};
                       let {x149 = S x150};
                       let {x148 = S x149};
                       let {x147 = S x148};
                       let {x146 = S x147};
                       let {x145 = S x146};
                       let {x144 = S x145};
                       let {x143 = S x144};
                       let {x142 = S x143};
                       let {x141 = S x142};
                       let {x163 = O};
                       let {x162 = S x163};
                       let {x161 = S x162};
                       let {x166 = O};
                       let {x165 = S x166};
                       let {x168 = O};
                       let {x172 = O};
                       let {x171 = S x172};
                       let {x170 = S x171};
                       let {x175 = O};
                       let {x174 = S x175};
                       let {x177 = O};
                       let {x180 = O};
                       let {x179 = S x180};
                       let {x184 = O};
                       let {x183 = S x184};
                       let {x182 = S x183};
                       let {x186 = O};
                       let {x187 = Nil};
                       let {x185 = Cons x186 x187};
                       let {x181 = Cons x182 x185};
                       let {x178 = Cons x179 x181};
                       let {x176 = Cons x177 x178};
                       let {x173 = Cons x174 x176};
                       let {x169 = Cons x170 x173};
                       let {x167 = Cons x168 x169};
                       let {x164 = Cons x165 x167};
                       (x188, x189) <- case x0 of
                                       {Cons y188 y189 -> return (y188, y189); _ -> mzero};
                       guard (x188 == x161);
                       guard (x189 == x164);
                       let {x160 = x141};
                       let {x1 = S x160};
                       return x1},
                   do {let {x205 = O};
                       let {x204 = S x205};
                       let {x203 = S x204};
                       let {x202 = S x203};
                       let {x201 = S x202};
                       let {x200 = S x201};
                       let {x199 = S x200};
                       let {x198 = S x199};
                       let {x197 = S x198};
                       let {x196 = S x197};
                       let {x195 = S x196};
                       let {x194 = S x195};
                       let {x193 = S x194};
                       let {x192 = S x193};
                       let {x191 = S x192};
                       let {x190 = S x191};
                       let {x209 = O};
                       let {x208 = S x209};
                       let {x207 = S x208};
                       let {x212 = O};
                       let {x211 = S x212};
                       let {x214 = O};
                       let {x218 = O};
                       let {x217 = S x218};
                       let {x216 = S x217};
                       let {x221 = O};
                       let {x220 = S x221};
                       let {x223 = O};
                       let {x226 = O};
                       let {x225 = S x226};
                       let {x230 = O};
                       let {x229 = S x230};
                       let {x228 = S x229};
                       let {x232 = O};
                       let {x233 = Nil};
                       let {x231 = Cons x232 x233};
                       let {x227 = Cons x228 x231};
                       let {x224 = Cons x225 x227};
                       let {x222 = Cons x223 x224};
                       let {x219 = Cons x220 x222};
                       let {x215 = Cons x216 x219};
                       let {x213 = Cons x214 x215};
                       let {x210 = Cons x211 x213};
                       (x234, x235) <- case x0 of
                                       {Cons y234 y235 -> return (y234, y235); _ -> mzero};
                       guard (x234 == x207);
                       guard (x235 == x210);
                       let {x206 = x190};
                       let {x1 = S x206};
                       return x1},
                   do {let {x252 = O};
                       let {x251 = S x252};
                       let {x250 = S x251};
                       let {x249 = S x250};
                       let {x248 = S x249};
                       let {x247 = S x248};
                       let {x246 = S x247};
                       let {x245 = S x246};
                       let {x244 = S x245};
                       let {x243 = S x244};
                       let {x242 = S x243};
                       let {x241 = S x242};
                       let {x240 = S x241};
                       let {x239 = S x240};
                       let {x238 = S x239};
                       let {x237 = S x238};
                       let {x236 = S x237};
                       let {x256 = O};
                       let {x255 = S x256};
                       let {x254 = S x255};
                       let {x259 = O};
                       let {x258 = S x259};
                       let {x261 = O};
                       let {x265 = O};
                       let {x264 = S x265};
                       let {x263 = S x264};
                       let {x268 = O};
                       let {x267 = S x268};
                       let {x270 = O};
                       let {x273 = O};
                       let {x272 = S x273};
                       let {x277 = O};
                       let {x276 = S x277};
                       let {x275 = S x276};
                       let {x279 = O};
                       let {x280 = Nil};
                       let {x278 = Cons x279 x280};
                       let {x274 = Cons x275 x278};
                       let {x271 = Cons x272 x274};
                       let {x269 = Cons x270 x271};
                       let {x266 = Cons x267 x269};
                       let {x262 = Cons x263 x266};
                       let {x260 = Cons x261 x262};
                       let {x257 = Cons x258 x260};
                       (x281, x282) <- case x0 of
                                       {Cons y281 y282 -> return (y281, y282); _ -> mzero};
                       guard (x281 == x254);
                       guard (x282 == x257);
                       let {x253 = x236};
                       let {x1 = S x253};
                       return x1},
                   do {let {x301 = O};
                       let {x300 = S x301};
                       let {x299 = S x300};
                       let {x298 = S x299};
                       let {x297 = S x298};
                       let {x296 = S x297};
                       let {x295 = S x296};
                       let {x294 = S x295};
                       let {x293 = S x294};
                       let {x292 = S x293};
                       let {x291 = S x292};
                       let {x290 = S x291};
                       let {x289 = S x290};
                       let {x288 = S x289};
                       let {x287 = S x288};
                       let {x286 = S x287};
                       let {x285 = S x286};
                       let {x284 = S x285};
                       let {x283 = S x284};
                       let {x305 = O};
                       let {x304 = S x305};
                       let {x303 = S x304};
                       let {x308 = O};
                       let {x307 = S x308};
                       let {x310 = O};
                       let {x314 = O};
                       let {x313 = S x314};
                       let {x312 = S x313};
                       let {x317 = O};
                       let {x316 = S x317};
                       let {x319 = O};
                       let {x322 = O};
                       let {x321 = S x322};
                       let {x326 = O};
                       let {x325 = S x326};
                       let {x324 = S x325};
                       let {x328 = O};
                       let {x329 = Nil};
                       let {x327 = Cons x328 x329};
                       let {x323 = Cons x324 x327};
                       let {x320 = Cons x321 x323};
                       let {x318 = Cons x319 x320};
                       let {x315 = Cons x316 x318};
                       let {x311 = Cons x312 x315};
                       let {x309 = Cons x310 x311};
                       let {x306 = Cons x307 x309};
                       (x330, x331) <- case x0 of
                                       {Cons y330 y331 -> return (y330, y331); _ -> mzero};
                       guard (x330 == x303);
                       guard (x331 == x306);
                       let {x302 = x283};
                       let {x1 = S x302};
                       return x1},
                   do {let {x351 = O};
                       let {x350 = S x351};
                       let {x349 = S x350};
                       let {x348 = S x349};
                       let {x347 = S x348};
                       let {x346 = S x347};
                       let {x345 = S x346};
                       let {x344 = S x345};
                       let {x343 = S x344};
                       let {x342 = S x343};
                       let {x341 = S x342};
                       let {x340 = S x341};
                       let {x339 = S x340};
                       let {x338 = S x339};
                       let {x337 = S x338};
                       let {x336 = S x337};
                       let {x335 = S x336};
                       let {x334 = S x335};
                       let {x333 = S x334};
                       let {x332 = S x333};
                       let {x355 = O};
                       let {x354 = S x355};
                       let {x353 = S x354};
                       let {x358 = O};
                       let {x357 = S x358};
                       let {x360 = O};
                       let {x364 = O};
                       let {x363 = S x364};
                       let {x362 = S x363};
                       let {x367 = O};
                       let {x366 = S x367};
                       let {x369 = O};
                       let {x372 = O};
                       let {x371 = S x372};
                       let {x376 = O};
                       let {x375 = S x376};
                       let {x374 = S x375};
                       let {x378 = O};
                       let {x379 = Nil};
                       let {x377 = Cons x378 x379};
                       let {x373 = Cons x374 x377};
                       let {x370 = Cons x371 x373};
                       let {x368 = Cons x369 x370};
                       let {x365 = Cons x366 x368};
                       let {x361 = Cons x362 x365};
                       let {x359 = Cons x360 x361};
                       let {x356 = Cons x357 x359};
                       (x380, x381) <- case x0 of
                                       {Cons y380 y381 -> return (y380, y381); _ -> mzero};
                       guard (x380 == x353);
                       guard (x381 == x356);
                       let {x352 = x332};
                       let {x1 = S x352};
                       return x1}]
                       
solveOI :: MonadPlus m => Term -> m Term
solveOI x1 = msum [do {let {x16 = O};
                       let {x15 = S x16};
                       let {x14 = S x15};
                       let {x13 = S x14};
                       let {x12 = S x13};
                       let {x11 = S x12};
                       let {x10 = S x11};
                       let {x9 = S x10};
                       let {x8 = S x9};
                       let {x7 = S x8};
                       let {x6 = S x7};
                       let {x5 = S x6};
                       let {x4 = S x5};
                       let {x3 = S x4};
                       let {x2 = S x3};
                       let {x20 = O};
                       let {x19 = S x20};
                       let {x18 = S x19};
                       let {x23 = O};
                       let {x22 = S x23};
                       let {x25 = O};
                       let {x29 = O};
                       let {x28 = S x29};
                       let {x27 = S x28};
                       let {x32 = O};
                       let {x31 = S x32};
                       let {x34 = O};
                       let {x37 = O};
                       let {x36 = S x37};
                       let {x41 = O};
                       let {x40 = S x41};
                       let {x39 = S x40};
                       let {x43 = O};
                       let {x44 = Nil};
                       let {x42 = Cons x43 x44};
                       let {x38 = Cons x39 x42};
                       let {x35 = Cons x36 x38};
                       let {x33 = Cons x34 x35};
                       let {x30 = Cons x31 x33};
                       let {x26 = Cons x27 x30};
                       let {x24 = Cons x25 x26};
                       let {x21 = Cons x22 x24};
                       x17 <- case x1 of
                              {S y17 -> return y17; _ -> mzero};
                       guard (x17 == x2);
                       let {x45 = x18};
                       let {x46 = x21};
                       let {x0 = Cons x45 x46};
                       return x0},
                   do {let {x62 = O};
                       let {x61 = S x62};
                       let {x60 = S x61};
                       let {x59 = S x60};
                       let {x58 = S x59};
                       let {x57 = S x58};
                       let {x56 = S x57};
                       let {x55 = S x56};
                       let {x54 = S x55};
                       let {x53 = S x54};
                       let {x52 = S x53};
                       let {x51 = S x52};
                       let {x50 = S x51};
                       let {x49 = S x50};
                       let {x48 = S x49};
                       let {x47 = S x48};
                       let {x66 = O};
                       let {x65 = S x66};
                       let {x64 = S x65};
                       let {x69 = O};
                       let {x68 = S x69};
                       let {x71 = O};
                       let {x75 = O};
                       let {x74 = S x75};
                       let {x73 = S x74};
                       let {x78 = O};
                       let {x77 = S x78};
                       let {x80 = O};
                       let {x83 = O};
                       let {x82 = S x83};
                       let {x87 = O};
                       let {x86 = S x87};
                       let {x85 = S x86};
                       let {x89 = O};
                       let {x90 = Nil};
                       let {x88 = Cons x89 x90};
                       let {x84 = Cons x85 x88};
                       let {x81 = Cons x82 x84};
                       let {x79 = Cons x80 x81};
                       let {x76 = Cons x77 x79};
                       let {x72 = Cons x73 x76};
                       let {x70 = Cons x71 x72};
                       let {x67 = Cons x68 x70};
                       x63 <- case x1 of
                              {S y63 -> return y63; _ -> mzero};
                       guard (x63 == x47);
                       let {x91 = x64};
                       let {x92 = x67};
                       let {x0 = Cons x91 x92};
                       return x0},
                   do {let {x110 = O};
                       let {x109 = S x110};
                       let {x108 = S x109};
                       let {x107 = S x108};
                       let {x106 = S x107};
                       let {x105 = S x106};
                       let {x104 = S x105};
                       let {x103 = S x104};
                       let {x102 = S x103};
                       let {x101 = S x102};
                       let {x100 = S x101};
                       let {x99 = S x100};
                       let {x98 = S x99};
                       let {x97 = S x98};
                       let {x96 = S x97};
                       let {x95 = S x96};
                       let {x94 = S x95};
                       let {x93 = S x94};
                       let {x114 = O};
                       let {x113 = S x114};
                       let {x112 = S x113};
                       let {x117 = O};
                       let {x116 = S x117};
                       let {x119 = O};
                       let {x123 = O};
                       let {x122 = S x123};
                       let {x121 = S x122};
                       let {x126 = O};
                       let {x125 = S x126};
                       let {x128 = O};
                       let {x131 = O};
                       let {x130 = S x131};
                       let {x135 = O};
                       let {x134 = S x135};
                       let {x133 = S x134};
                       let {x137 = O};
                       let {x138 = Nil};
                       let {x136 = Cons x137 x138};
                       let {x132 = Cons x133 x136};
                       let {x129 = Cons x130 x132};
                       let {x127 = Cons x128 x129};
                       let {x124 = Cons x125 x127};
                       let {x120 = Cons x121 x124};
                       let {x118 = Cons x119 x120};
                       let {x115 = Cons x116 x118};
                       x111 <- case x1 of
                               {S y111 -> return y111; _ -> mzero};
                       guard (x111 == x93);
                       let {x139 = x112};
                       let {x140 = x115};
                       let {x0 = Cons x139 x140};
                       return x0},
                   do {let {x159 = O};
                       let {x158 = S x159};
                       let {x157 = S x158};
                       let {x156 = S x157};
                       let {x155 = S x156};
                       let {x154 = S x155};
                       let {x153 = S x154};
                       let {x152 = S x153};
                       let {x151 = S x152};
                       let {x150 = S x151};
                       let {x149 = S x150};
                       let {x148 = S x149};
                       let {x147 = S x148};
                       let {x146 = S x147};
                       let {x145 = S x146};
                       let {x144 = S x145};
                       let {x143 = S x144};
                       let {x142 = S x143};
                       let {x141 = S x142};
                       let {x163 = O};
                       let {x162 = S x163};
                       let {x161 = S x162};
                       let {x166 = O};
                       let {x165 = S x166};
                       let {x168 = O};
                       let {x172 = O};
                       let {x171 = S x172};
                       let {x170 = S x171};
                       let {x175 = O};
                       let {x174 = S x175};
                       let {x177 = O};
                       let {x180 = O};
                       let {x179 = S x180};
                       let {x184 = O};
                       let {x183 = S x184};
                       let {x182 = S x183};
                       let {x186 = O};
                       let {x187 = Nil};
                       let {x185 = Cons x186 x187};
                       let {x181 = Cons x182 x185};
                       let {x178 = Cons x179 x181};
                       let {x176 = Cons x177 x178};
                       let {x173 = Cons x174 x176};
                       let {x169 = Cons x170 x173};
                       let {x167 = Cons x168 x169};
                       let {x164 = Cons x165 x167};
                       x160 <- case x1 of
                               {S y160 -> return y160; _ -> mzero};
                       guard (x160 == x141);
                       let {x188 = x161};
                       let {x189 = x164};
                       let {x0 = Cons x188 x189};
                       return x0},
                   do {let {x205 = O};
                       let {x204 = S x205};
                       let {x203 = S x204};
                       let {x202 = S x203};
                       let {x201 = S x202};
                       let {x200 = S x201};
                       let {x199 = S x200};
                       let {x198 = S x199};
                       let {x197 = S x198};
                       let {x196 = S x197};
                       let {x195 = S x196};
                       let {x194 = S x195};
                       let {x193 = S x194};
                       let {x192 = S x193};
                       let {x191 = S x192};
                       let {x190 = S x191};
                       let {x209 = O};
                       let {x208 = S x209};
                       let {x207 = S x208};
                       let {x212 = O};
                       let {x211 = S x212};
                       let {x214 = O};
                       let {x218 = O};
                       let {x217 = S x218};
                       let {x216 = S x217};
                       let {x221 = O};
                       let {x220 = S x221};
                       let {x223 = O};
                       let {x226 = O};
                       let {x225 = S x226};
                       let {x230 = O};
                       let {x229 = S x230};
                       let {x228 = S x229};
                       let {x232 = O};
                       let {x233 = Nil};
                       let {x231 = Cons x232 x233};
                       let {x227 = Cons x228 x231};
                       let {x224 = Cons x225 x227};
                       let {x222 = Cons x223 x224};
                       let {x219 = Cons x220 x222};
                       let {x215 = Cons x216 x219};
                       let {x213 = Cons x214 x215};
                       let {x210 = Cons x211 x213};
                       x206 <- case x1 of
                               {S y206 -> return y206; _ -> mzero};
                       guard (x206 == x190);
                       let {x234 = x207};
                       let {x235 = x210};
                       let {x0 = Cons x234 x235};
                       return x0},
                   do {let {x252 = O};
                       let {x251 = S x252};
                       let {x250 = S x251};
                       let {x249 = S x250};
                       let {x248 = S x249};
                       let {x247 = S x248};
                       let {x246 = S x247};
                       let {x245 = S x246};
                       let {x244 = S x245};
                       let {x243 = S x244};
                       let {x242 = S x243};
                       let {x241 = S x242};
                       let {x240 = S x241};
                       let {x239 = S x240};
                       let {x238 = S x239};
                       let {x237 = S x238};
                       let {x236 = S x237};
                       let {x256 = O};
                       let {x255 = S x256};
                       let {x254 = S x255};
                       let {x259 = O};
                       let {x258 = S x259};
                       let {x261 = O};
                       let {x265 = O};
                       let {x264 = S x265};
                       let {x263 = S x264};
                       let {x268 = O};
                       let {x267 = S x268};
                       let {x270 = O};
                       let {x273 = O};
                       let {x272 = S x273};
                       let {x277 = O};
                       let {x276 = S x277};
                       let {x275 = S x276};
                       let {x279 = O};
                       let {x280 = Nil};
                       let {x278 = Cons x279 x280};
                       let {x274 = Cons x275 x278};
                       let {x271 = Cons x272 x274};
                       let {x269 = Cons x270 x271};
                       let {x266 = Cons x267 x269};
                       let {x262 = Cons x263 x266};
                       let {x260 = Cons x261 x262};
                       let {x257 = Cons x258 x260};
                       x253 <- case x1 of
                               {S y253 -> return y253; _ -> mzero};
                       guard (x253 == x236);
                       let {x281 = x254};
                       let {x282 = x257};
                       let {x0 = Cons x281 x282};
                       return x0},
                   do {let {x301 = O};
                       let {x300 = S x301};
                       let {x299 = S x300};
                       let {x298 = S x299};
                       let {x297 = S x298};
                       let {x296 = S x297};
                       let {x295 = S x296};
                       let {x294 = S x295};
                       let {x293 = S x294};
                       let {x292 = S x293};
                       let {x291 = S x292};
                       let {x290 = S x291};
                       let {x289 = S x290};
                       let {x288 = S x289};
                       let {x287 = S x288};
                       let {x286 = S x287};
                       let {x285 = S x286};
                       let {x284 = S x285};
                       let {x283 = S x284};
                       let {x305 = O};
                       let {x304 = S x305};
                       let {x303 = S x304};
                       let {x308 = O};
                       let {x307 = S x308};
                       let {x310 = O};
                       let {x314 = O};
                       let {x313 = S x314};
                       let {x312 = S x313};
                       let {x317 = O};
                       let {x316 = S x317};
                       let {x319 = O};
                       let {x322 = O};
                       let {x321 = S x322};
                       let {x326 = O};
                       let {x325 = S x326};
                       let {x324 = S x325};
                       let {x328 = O};
                       let {x329 = Nil};
                       let {x327 = Cons x328 x329};
                       let {x323 = Cons x324 x327};
                       let {x320 = Cons x321 x323};
                       let {x318 = Cons x319 x320};
                       let {x315 = Cons x316 x318};
                       let {x311 = Cons x312 x315};
                       let {x309 = Cons x310 x311};
                       let {x306 = Cons x307 x309};
                       x302 <- case x1 of
                               {S y302 -> return y302; _ -> mzero};
                       guard (x302 == x283);
                       let {x330 = x303};
                       let {x331 = x306};
                       let {x0 = Cons x330 x331};
                       return x0},
                   do {let {x351 = O};
                       let {x350 = S x351};
                       let {x349 = S x350};
                       let {x348 = S x349};
                       let {x347 = S x348};
                       let {x346 = S x347};
                       let {x345 = S x346};
                       let {x344 = S x345};
                       let {x343 = S x344};
                       let {x342 = S x343};
                       let {x341 = S x342};
                       let {x340 = S x341};
                       let {x339 = S x340};
                       let {x338 = S x339};
                       let {x337 = S x338};
                       let {x336 = S x337};
                       let {x335 = S x336};
                       let {x334 = S x335};
                       let {x333 = S x334};
                       let {x332 = S x333};
                       let {x355 = O};
                       let {x354 = S x355};
                       let {x353 = S x354};
                       let {x358 = O};
                       let {x357 = S x358};
                       let {x360 = O};
                       let {x364 = O};
                       let {x363 = S x364};
                       let {x362 = S x363};
                       let {x367 = O};
                       let {x366 = S x367};
                       let {x369 = O};
                       let {x372 = O};
                       let {x371 = S x372};
                       let {x376 = O};
                       let {x375 = S x376};
                       let {x374 = S x375};
                       let {x378 = O};
                       let {x379 = Nil};
                       let {x377 = Cons x378 x379};
                       let {x373 = Cons x374 x377};
                       let {x370 = Cons x371 x373};
                       let {x368 = Cons x369 x370};
                       let {x365 = Cons x366 x368};
                       let {x361 = Cons x362 x365};
                       let {x359 = Cons x360 x361};
                       let {x356 = Cons x357 x359};
                       x352 <- case x1 of
                               {S y352 -> return y352; _ -> mzero};
                       guard (x352 == x332);
                       let {x380 = x353};
                       let {x381 = x356};
                       let {x0 = Cons x380 x381};
                       return x0}]
                       
solveOO :: MonadPlus m => m (Term, Term)
solveOO = msum [do {let {x16 = O};
                    let {x15 = S x16};
                    let {x14 = S x15};
                    let {x13 = S x14};
                    let {x12 = S x13};
                    let {x11 = S x12};
                    let {x10 = S x11};
                    let {x9 = S x10};
                    let {x8 = S x9};
                    let {x7 = S x8};
                    let {x6 = S x7};
                    let {x5 = S x6};
                    let {x4 = S x5};
                    let {x3 = S x4};
                    let {x2 = S x3};
                    let {x20 = O};
                    let {x19 = S x20};
                    let {x18 = S x19};
                    let {x23 = O};
                    let {x22 = S x23};
                    let {x25 = O};
                    let {x29 = O};
                    let {x28 = S x29};
                    let {x27 = S x28};
                    let {x32 = O};
                    let {x31 = S x32};
                    let {x34 = O};
                    let {x37 = O};
                    let {x36 = S x37};
                    let {x41 = O};
                    let {x40 = S x41};
                    let {x39 = S x40};
                    let {x43 = O};
                    let {x44 = Nil};
                    let {x42 = Cons x43 x44};
                    let {x38 = Cons x39 x42};
                    let {x35 = Cons x36 x38};
                    let {x33 = Cons x34 x35};
                    let {x30 = Cons x31 x33};
                    let {x26 = Cons x27 x30};
                    let {x24 = Cons x25 x26};
                    let {x21 = Cons x22 x24};
                    let {x17 = x2};
                    let {x1 = S x17};
                    let {x45 = x18};
                    let {x46 = x21};
                    let {x0 = Cons x45 x46};
                    return (x0, x1)},
                do {let {x62 = O};
                    let {x61 = S x62};
                    let {x60 = S x61};
                    let {x59 = S x60};
                    let {x58 = S x59};
                    let {x57 = S x58};
                    let {x56 = S x57};
                    let {x55 = S x56};
                    let {x54 = S x55};
                    let {x53 = S x54};
                    let {x52 = S x53};
                    let {x51 = S x52};
                    let {x50 = S x51};
                    let {x49 = S x50};
                    let {x48 = S x49};
                    let {x47 = S x48};
                    let {x66 = O};
                    let {x65 = S x66};
                    let {x64 = S x65};
                    let {x69 = O};
                    let {x68 = S x69};
                    let {x71 = O};
                    let {x75 = O};
                    let {x74 = S x75};
                    let {x73 = S x74};
                    let {x78 = O};
                    let {x77 = S x78};
                    let {x80 = O};
                    let {x83 = O};
                    let {x82 = S x83};
                    let {x87 = O};
                    let {x86 = S x87};
                    let {x85 = S x86};
                    let {x89 = O};
                    let {x90 = Nil};
                    let {x88 = Cons x89 x90};
                    let {x84 = Cons x85 x88};
                    let {x81 = Cons x82 x84};
                    let {x79 = Cons x80 x81};
                    let {x76 = Cons x77 x79};
                    let {x72 = Cons x73 x76};
                    let {x70 = Cons x71 x72};
                    let {x67 = Cons x68 x70};
                    let {x63 = x47};
                    let {x1 = S x63};
                    let {x91 = x64};
                    let {x92 = x67};
                    let {x0 = Cons x91 x92};
                    return (x0, x1)},
                do {let {x110 = O};
                    let {x109 = S x110};
                    let {x108 = S x109};
                    let {x107 = S x108};
                    let {x106 = S x107};
                    let {x105 = S x106};
                    let {x104 = S x105};
                    let {x103 = S x104};
                    let {x102 = S x103};
                    let {x101 = S x102};
                    let {x100 = S x101};
                    let {x99 = S x100};
                    let {x98 = S x99};
                    let {x97 = S x98};
                    let {x96 = S x97};
                    let {x95 = S x96};
                    let {x94 = S x95};
                    let {x93 = S x94};
                    let {x114 = O};
                    let {x113 = S x114};
                    let {x112 = S x113};
                    let {x117 = O};
                    let {x116 = S x117};
                    let {x119 = O};
                    let {x123 = O};
                    let {x122 = S x123};
                    let {x121 = S x122};
                    let {x126 = O};
                    let {x125 = S x126};
                    let {x128 = O};
                    let {x131 = O};
                    let {x130 = S x131};
                    let {x135 = O};
                    let {x134 = S x135};
                    let {x133 = S x134};
                    let {x137 = O};
                    let {x138 = Nil};
                    let {x136 = Cons x137 x138};
                    let {x132 = Cons x133 x136};
                    let {x129 = Cons x130 x132};
                    let {x127 = Cons x128 x129};
                    let {x124 = Cons x125 x127};
                    let {x120 = Cons x121 x124};
                    let {x118 = Cons x119 x120};
                    let {x115 = Cons x116 x118};
                    let {x111 = x93};
                    let {x1 = S x111};
                    let {x139 = x112};
                    let {x140 = x115};
                    let {x0 = Cons x139 x140};
                    return (x0, x1)},
                do {let {x159 = O};
                    let {x158 = S x159};
                    let {x157 = S x158};
                    let {x156 = S x157};
                    let {x155 = S x156};
                    let {x154 = S x155};
                    let {x153 = S x154};
                    let {x152 = S x153};
                    let {x151 = S x152};
                    let {x150 = S x151};
                    let {x149 = S x150};
                    let {x148 = S x149};
                    let {x147 = S x148};
                    let {x146 = S x147};
                    let {x145 = S x146};
                    let {x144 = S x145};
                    let {x143 = S x144};
                    let {x142 = S x143};
                    let {x141 = S x142};
                    let {x163 = O};
                    let {x162 = S x163};
                    let {x161 = S x162};
                    let {x166 = O};
                    let {x165 = S x166};
                    let {x168 = O};
                    let {x172 = O};
                    let {x171 = S x172};
                    let {x170 = S x171};
                    let {x175 = O};
                    let {x174 = S x175};
                    let {x177 = O};
                    let {x180 = O};
                    let {x179 = S x180};
                    let {x184 = O};
                    let {x183 = S x184};
                    let {x182 = S x183};
                    let {x186 = O};
                    let {x187 = Nil};
                    let {x185 = Cons x186 x187};
                    let {x181 = Cons x182 x185};
                    let {x178 = Cons x179 x181};
                    let {x176 = Cons x177 x178};
                    let {x173 = Cons x174 x176};
                    let {x169 = Cons x170 x173};
                    let {x167 = Cons x168 x169};
                    let {x164 = Cons x165 x167};
                    let {x160 = x141};
                    let {x1 = S x160};
                    let {x188 = x161};
                    let {x189 = x164};
                    let {x0 = Cons x188 x189};
                    return (x0, x1)},
                do {let {x205 = O};
                    let {x204 = S x205};
                    let {x203 = S x204};
                    let {x202 = S x203};
                    let {x201 = S x202};
                    let {x200 = S x201};
                    let {x199 = S x200};
                    let {x198 = S x199};
                    let {x197 = S x198};
                    let {x196 = S x197};
                    let {x195 = S x196};
                    let {x194 = S x195};
                    let {x193 = S x194};
                    let {x192 = S x193};
                    let {x191 = S x192};
                    let {x190 = S x191};
                    let {x209 = O};
                    let {x208 = S x209};
                    let {x207 = S x208};
                    let {x212 = O};
                    let {x211 = S x212};
                    let {x214 = O};
                    let {x218 = O};
                    let {x217 = S x218};
                    let {x216 = S x217};
                    let {x221 = O};
                    let {x220 = S x221};
                    let {x223 = O};
                    let {x226 = O};
                    let {x225 = S x226};
                    let {x230 = O};
                    let {x229 = S x230};
                    let {x228 = S x229};
                    let {x232 = O};
                    let {x233 = Nil};
                    let {x231 = Cons x232 x233};
                    let {x227 = Cons x228 x231};
                    let {x224 = Cons x225 x227};
                    let {x222 = Cons x223 x224};
                    let {x219 = Cons x220 x222};
                    let {x215 = Cons x216 x219};
                    let {x213 = Cons x214 x215};
                    let {x210 = Cons x211 x213};
                    let {x206 = x190};
                    let {x1 = S x206};
                    let {x234 = x207};
                    let {x235 = x210};
                    let {x0 = Cons x234 x235};
                    return (x0, x1)},
                do {let {x252 = O};
                    let {x251 = S x252};
                    let {x250 = S x251};
                    let {x249 = S x250};
                    let {x248 = S x249};
                    let {x247 = S x248};
                    let {x246 = S x247};
                    let {x245 = S x246};
                    let {x244 = S x245};
                    let {x243 = S x244};
                    let {x242 = S x243};
                    let {x241 = S x242};
                    let {x240 = S x241};
                    let {x239 = S x240};
                    let {x238 = S x239};
                    let {x237 = S x238};
                    let {x236 = S x237};
                    let {x256 = O};
                    let {x255 = S x256};
                    let {x254 = S x255};
                    let {x259 = O};
                    let {x258 = S x259};
                    let {x261 = O};
                    let {x265 = O};
                    let {x264 = S x265};
                    let {x263 = S x264};
                    let {x268 = O};
                    let {x267 = S x268};
                    let {x270 = O};
                    let {x273 = O};
                    let {x272 = S x273};
                    let {x277 = O};
                    let {x276 = S x277};
                    let {x275 = S x276};
                    let {x279 = O};
                    let {x280 = Nil};
                    let {x278 = Cons x279 x280};
                    let {x274 = Cons x275 x278};
                    let {x271 = Cons x272 x274};
                    let {x269 = Cons x270 x271};
                    let {x266 = Cons x267 x269};
                    let {x262 = Cons x263 x266};
                    let {x260 = Cons x261 x262};
                    let {x257 = Cons x258 x260};
                    let {x253 = x236};
                    let {x1 = S x253};
                    let {x281 = x254};
                    let {x282 = x257};
                    let {x0 = Cons x281 x282};
                    return (x0, x1)},
                do {let {x301 = O};
                    let {x300 = S x301};
                    let {x299 = S x300};
                    let {x298 = S x299};
                    let {x297 = S x298};
                    let {x296 = S x297};
                    let {x295 = S x296};
                    let {x294 = S x295};
                    let {x293 = S x294};
                    let {x292 = S x293};
                    let {x291 = S x292};
                    let {x290 = S x291};
                    let {x289 = S x290};
                    let {x288 = S x289};
                    let {x287 = S x288};
                    let {x286 = S x287};
                    let {x285 = S x286};
                    let {x284 = S x285};
                    let {x283 = S x284};
                    let {x305 = O};
                    let {x304 = S x305};
                    let {x303 = S x304};
                    let {x308 = O};
                    let {x307 = S x308};
                    let {x310 = O};
                    let {x314 = O};
                    let {x313 = S x314};
                    let {x312 = S x313};
                    let {x317 = O};
                    let {x316 = S x317};
                    let {x319 = O};
                    let {x322 = O};
                    let {x321 = S x322};
                    let {x326 = O};
                    let {x325 = S x326};
                    let {x324 = S x325};
                    let {x328 = O};
                    let {x329 = Nil};
                    let {x327 = Cons x328 x329};
                    let {x323 = Cons x324 x327};
                    let {x320 = Cons x321 x323};
                    let {x318 = Cons x319 x320};
                    let {x315 = Cons x316 x318};
                    let {x311 = Cons x312 x315};
                    let {x309 = Cons x310 x311};
                    let {x306 = Cons x307 x309};
                    let {x302 = x283};
                    let {x1 = S x302};
                    let {x330 = x303};
                    let {x331 = x306};
                    let {x0 = Cons x330 x331};
                    return (x0, x1)},
                do {let {x351 = O};
                    let {x350 = S x351};
                    let {x349 = S x350};
                    let {x348 = S x349};
                    let {x347 = S x348};
                    let {x346 = S x347};
                    let {x345 = S x346};
                    let {x344 = S x345};
                    let {x343 = S x344};
                    let {x342 = S x343};
                    let {x341 = S x342};
                    let {x340 = S x341};
                    let {x339 = S x340};
                    let {x338 = S x339};
                    let {x337 = S x338};
                    let {x336 = S x337};
                    let {x335 = S x336};
                    let {x334 = S x335};
                    let {x333 = S x334};
                    let {x332 = S x333};
                    let {x355 = O};
                    let {x354 = S x355};
                    let {x353 = S x354};
                    let {x358 = O};
                    let {x357 = S x358};
                    let {x360 = O};
                    let {x364 = O};
                    let {x363 = S x364};
                    let {x362 = S x363};
                    let {x367 = O};
                    let {x366 = S x367};
                    let {x369 = O};
                    let {x372 = O};
                    let {x371 = S x372};
                    let {x376 = O};
                    let {x375 = S x376};
                    let {x374 = S x375};
                    let {x378 = O};
                    let {x379 = Nil};
                    let {x377 = Cons x378 x379};
                    let {x373 = Cons x374 x377};
                    let {x370 = Cons x371 x373};
                    let {x368 = Cons x369 x370};
                    let {x365 = Cons x366 x368};
                    let {x361 = Cons x362 x365};
                    let {x359 = Cons x360 x361};
                    let {x356 = Cons x357 x359};
                    let {x352 = x332};
                    let {x1 = S x352};
                    let {x380 = x353};
                    let {x381 = x356};
                    let {x0 = Cons x380 x381};
                    return (x0, x1)}]